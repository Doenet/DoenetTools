<title>Examples of solving linear discrete dynamical systems</title>
<variantControl nVariants="1" />

<description>
Examples demonstrating how the solution to a linear discrete dynamical system is an exponential.
</description>

<p>The 
<ref uri='doenet:solving_linear_discrete_dynamical_systems'>solution to a linear discrete dynamical system</ref>
 is an exponential because in each time step, we multiply by a fixed number.  It is easy to see what number we multiply in each time step when the dynamical system is in 
<ref uri='doenet:function_iteration_form|page_type=definition'>function iteration form</ref>
.  When the dynamical system is given in 
<ref uri='doenet:difference_form|page_type=definition'>difference form</ref>
, we must first transform the dynamical system into function iteration form.  These examples illustrate the process.</p>



<example name="example1">

<p>A example of the simplest form is
<md>
  <mrow>z_{n+1}\amp = 0.5 z_n</mrow>
  <mrow>z_0\amp = 1024.</mrow>
</md>
The dynamical system is given function iteration form and everything is in terms of numbers.  Solve the dynamical system and use it to compute <m>z_{10}</m>.</p>

<p><alert>Solution:</alert> By solution, we mean a formula for <m>z_n</m> just in terms of the initial condition and the time index <m>n</m>.   In each time step, we multiply by 0.5.  To go from time step zero to time step <m>n</m>, we must multiply by 0.5 a total of <m>t</m> times.  The solution is therefore
<me>z_n = (0.5)^n z_0 = (0.5)^n1024</me>
Using the formula, it is simple to calculate <m>z_{10}</m>.  It is <m>z_{10} = (0.5)^{10}1024 =1.</m></p>




</example>

<example name="example2">


<p>We can make the example slightly more complicated by using a parameter, let's call it <m>R</m>, as the number we must multiply by each time step.  We'll also use <m>t</m> rather than <m>n</m> for the time step and let the initial condition be another parameter, let's use <m>d</m>.  Choosing <m>p</m> for the state variable, the dynamical system is
<md>
  <mrow>p_{t+1}\amp = Rp_t</mrow>
  <mrow>p_0\amp = d.</mrow>
</md>
Solve the dynamical system.</p>

<p><alert>Solution:</alert>  The system really isn't much harder than the previous.  Our solution must be a formula for <m>p_t</m> just in terms of the initial condition and the time index <m>t</m>.  The solution will also contain the parameters <m>R</m> and <m>d</m> rather than just numbers like the previous example.  The main point for the solution is that it can contain the value of the state variable only at the initial time point <m>t=0</m>.</p>

<p>Starting with <m>p_0=d</m> at <m>t=0</m>, to get <m>p_t</m>, we must multiply by <m>R</m> a total of <m>t</m> times.  The solution is
<me>p_t = R^t d.</me></p>





</example>

<example name="example3">


<p>Let's mix things up a little bit by writing the dynamical system in 
<ref uri='doenet:difference_form|page_type=definition'>difference form</ref>
.  Using <m>z_n</m> as the state variable and keeping every else in terms of numbers, we'll examine the linear discrete dynamical system
<md>
  <mrow>z_{n+1} - z_n\amp = -0.5 z_n</mrow>
  <mrow>z_0\amp = 1024.</mrow>
</md>
Solve the dynamical system and use it to compute <m>z_{10}</m>.</p>

<p><alert>Solution:</alert>In this example, the change in <m>z</m> at each time step is half of the value of <m>z</m>, but with a negative sign.  We subtract off half of <m>z</m> at each time step, but it isn't clear how to write a formula that gives the result of subtracting off half <m>z</m> for a total of <m>n</m> times in a row.  The reason the answer isn't so obvious is because the dynamical system is written in difference form, with the change is <m>z</m> on the left side of the equation.  If we rewrite the dynamical system in 
<ref uri='doenet:function_iteration_form|page_type=definition'>function iteration form</ref>
 by solving the evolution rule for <m>z_{n+1}</m>, then it will be clearer how to proceed.</p>

<p>To convert the evolution rule <m>z_{n+1} - z_n = -0.5 z_n</m> to function iteration form, we solve for <m>z_{n+1}</m> by adding <m>z_{n}</m> to both sides of the equation.  
<md>
  <mrow>z_{n+1} - z_n +z_n\amp = -0.5 z_n + z_n</mrow>
  <mrow>z_{n+1}\amp = 0.5 z_n.</mrow>
</md>
Now <m>z_{n+1}</m> is written as a function of <m>z_n</m>, i.e., <m>z_{n+1}=f(z_n)</m> for the function <m>f(z)=0.5 z_n</m>.  We must apply the function <q>multiply by 0.5</q> at each time step.</p>

<p>Combining the evolution rule with the initial condition, the dynamical system in function iteration form is
<md>
  <mrow>z_{n+1}\amp = 0.5 z_n</mrow>
  <mrow>z_0\amp = 1024.</mrow>
</md>
The dynamical system is identical to the one from the <ref tname="example1">first example</ref>.  The solution is that we must apply the function 
<q>multiply by 0.5</q> to <m>z_0</m> a total of <m>n</m> times to reach <m>z_n</m>:
<me>z_n = (0.5)^n z_0 = (0.5)^n1024</me>
After 10 time steps, <m>z_{10} = (0.5)^{10}1024 =1.</m></p>




</example>

<example name="example4">


<p>Let's try an example in difference form but with parameters.
<md>
  <mrow>p_{t+1} - p_t\amp = rp_t</mrow>
  <mrow>p_0\amp = d.</mrow>
</md>
Now, starting with the initial condition <m>d</m>, we add <m>rp_t</m> at each time step, where <m>r</m> and <m>d</m> are parameters.  Solve the dynamical system.</p>

<p><alert>Solution:</alert>  The system is given in difference form.  To solve the dynamical system, we must rewrite it in function iteration form.  We add <m>p_{t}</m> to both sides of the evolution rule.
<md>
  <mrow>p_{t+1} - p_t  + p_t\amp = rp_t + p_t</mrow>
  <mrow>p_{t+1}\amp = (r+1)p_t.</mrow>
</md>
Combining this new form of the evolution rule with the initial condition, we can write the dynamical system in function iteration form as
<md>
  <mrow>p_{t+1}\amp = (r+1)p_t</mrow>
  <mrow>p_0\amp = d.</mrow>
</md>
At each time step we apply the function <m>p_{t+1} = f(p_t)</m>, where <m>f(p)=(r+1)p</m>.  In other words, we apply the function <q>multiply by <m>r+1</m>.</q>  To go from <m>p_0</m> to <m>p_t</m>, we must apply this function <m>t</m> times, or multiply by <m>r+1</m> for a total of <m>t</m> times.  This is the same thing as multiplying by <m>(r+1)^t</m>.  The solution is
<me>p_t = (r+1)^t p_0.</me>
Using the the initial condition, <m>p_0=d</m>, we could also write the solution as
<me>p_t = (r+1)^t d.</me>
</p>

<p>This example is only slightly different from <ref tname="example2">example 2</ref>.  In fact, if we wanted to make it look exactly like example 2, we could define a new parameter <m>R</m> by setting <m>R=r+1</m>.  If we were to replace <m>r+1</m> by the symbol <m>R</m>, then the dynamical system would be
<md>
  <mrow>p_{t+1}\amp = Rp_t</mrow>
  <mrow>p_0\amp = d.</mrow>
</md>
with solution
<me>p_t = R^t d.</me>
That looks a little simpler.  But in either case, the solution is pretty simple.  We just multiply the initial condition <m>d</m> by the number <m>r+1</m>, which we could also define as <m>R</m>, a total of <m>t</m> times to get to <m>p_t</m>.</p>




</example>

<example name="example5">


<p>Let's continue the moose example of the 
<ref uri='doenet:discrete_dynamical_system_introduction'>discrete dynamical system introduction</ref>
.  In that example, a moose population grew by 8% each year, starting with an initial population size of 1000 moose.  If we let the state variable <m>m_t</m> be the number of moose in a population in year <m>t</m>, then we can write the dynamical system as
<md>
  <mrow>m_{t+1}-m_t\amp = 0.08 m_t</mrow>
  <mrow>m_0\amp = 1000.</mrow>
</md>
Solve this dynamical system.  Use the solution to calculate the moose population size every ten years up to year 50.</p>

<p><alert>Solution:</alert> The dynamical system is written in 
<ref uri='doenet:difference_form|page_type=definition'>difference form</ref>
, as we derived the model thinking about the change in the moose population size.  To rewrite it in 
<ref uri='doenet:function_iteration_form|page_type=definition'>function iteration form</ref>
, we add <m>m_t</m> to both sides to the evolution rule, obtaining
<md>
  <mrow>m_{t+1}\amp = 1.08 m_t</mrow>
  <mrow>m_0\amp = 1000.</mrow>
</md>
Since we start with a population size of 1000, and in each time step, we multiply the 1.08, the solution to the dynamical system is
<me>m_t = 1000 \cdot (1.08)^t.</me>
From this solution, we calculate the population size every 10 years.
<md>
  <mrow>m_{10}\amp = 1000 (1.08)^{10} \approx 2158.92</mrow>
  <mrow>m_{20}\amp = 1000 (1.08)^{20} \approx 4660.96</mrow>
  <mrow>m_{30}\amp = 1000 (1.08)^{30} \approx 10062.66</mrow>
  <mrow>m_{40}\amp = 1000 (1.08)^{40} \approx  21724.52</mrow>
  <mrow>m_{50}\amp = 1000 (1.08)^{50} \approx 46901.61</mrow>
</md>

</p>

</example>
