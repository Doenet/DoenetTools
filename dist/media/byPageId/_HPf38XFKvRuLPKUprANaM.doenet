<title>map</title>

<p>The &lt;map&gt; component takes a list of sources and applies a template to each source in turn.</p>

<section newNamespace>
<title>Basic usage</title>

<p>To say hello to a list of plants:
  <map>
    <template>Hello, $plant! </template>
    <sources alias="plant">
      <text>tree</text>
      <text>flower</text>
      <text>cactus</text>
    </sources>
  </map>
</p>

  <p>You access the source by copying the alias specified for the source.  
    You can also access the index of the source with the alias specified
 for the index.
  <map>
    <template>Plant $i is a $plant. </template>
    <sources alias="plant" indexAlias="i">
      <text>tree</text>
      <text>flower</text>
      <text>cactus</text>
    </sources>
  </map>
</p>

  <p>Note that the aliases for a source and its index do not 
follow the same rules as names.  One difference is that they are not part of a namespace and can be accessed by specified alias even inside new namespaces. Since they don't abide by the same rules as names, conflicts between aliases and names are not identified.  If an alias and a name conflict, the name will be used (with no warning issued).</p>

<p>In combination with sequence, maps can be used to create a dynamic list of objects.</p>

  <p>How many numbers? <mathinput name="n" prefill="2" />.  
    The sum of the squares of the first 
<pluralize>$n positive integer</pluralize> is:
<m><sum forceSymbolic name="squareSum">
  <map>
    <template><math simplify>$m^2</math></template>
    <sources alias="m"><sequence from="1" to="$n"/></sources>
  </map>
</sum>
= <copy tname="squareSum" simplify />
</m>
</p>

</section>

<section newNamespace>
<title>Assigning names</title>

  <p>You can refer to the entire map using the name of the map.  
    To refer to each instance of the template, you can assign names to them. 
    Once a component corresponding to that name is created, a copy referring to
    the name will return that component.  
Copies that refer to targets that don't (yet) exist return nothing.</p>

  <p>How many numbers? <mathinput name="n" prefill="2" />.  
The first $n squares are 
  <aslist><map assignNames="s1 s2 s3 s4">
    <template><math simplify>$m^2</math></template>
    <sources alias="m"><sequence from="1" to="$n"/></sources>
  </map></aslist>.
    Of these numbers, the first is $s1, the second is $s2, the third is $s3, 
and the fourth is $s4.
  </p>

</section>

<section>
<title>Using template namespace to access children</title>

  <p>If you create a new namespace for the map template, you can refer to the children of the template if you assign names.</p>

  <p>
  <map assignNames="p1 p2 p3">
    <template newNamespace>Hello, <text name="plant">$plantName</text>! </template>
    <sources alias="plantName"><text>tree</text><text>flower</text><text>cactus</text></sources>
  </map>
  </p>
  <p>The first plant is a $(p1/plant), the second is a $(p2/plant), and the third is a $(p3/plant).
</p>

</section>

<section newNamespace>
  <title>Multiple sources in a map</title>

  <p>If you include multiple &lt;sources&gt; tags in a map, it will iterate across both lists of sources.  Each source can be accessed by its corresponding alias.</p>

  <p>The default behavior is "combination", which iterates over every combination of one item from each source.</p>

  <p>Multiplication table from <mathinput name="m1" prefill="2" /> to 
    <mathinput name="m2" prefill="4" /> and from 
    <mathinput name="n1" prefill="8" /> to 
<mathinput name="n2" prefill="9" />.</p>
  <ul>
  <map>
    <template>
      <li><m>$m \times $n = <math simplify>$m$n</math></m></li>
    </template>
    <sources alias="m"><sequence from="$m1" to="$m2" /></sources>
    <sources alias="n"><sequence from="$n1" to="$n2" /></sources>
  </map>
  </ul>

  <p>You can also specify parallel behavior, 
    where the map iterates across all lists of sources simultaneously.  
    If one list has more items than the rest, 
the extra item is ignored (with a warning).</p>

  <p><map behavior="parallel">
    <template>
      The $animal eats $food.
    </template>
    <sources alias="animal"><text>termite</text><text>mouse</text>
<text>cow</text><text>extra</text></sources>
    <sources alias="food"><text>wood</text><text>cheese</text>
<text>grass</text></sources>
  </map>
  </p>

</section>

<section newNamespace>
  <title>Nested maps</title>

  <p>If you nest a map inside a template of another map, you can access sources from the outside map even from within the inside template.  Recall that namespaces are ignored with source aliases.</p>


  <map>
    <template newNamespace>
      <p>Graph of <m>f(x) = $fformula</m> and translations</p>
      <graph>
        <map>
          <template newNamespace>
            <function styleNumber="$i">$fformula+$c</function>
          </template>
          <sources alias="c" indexAlias="i">
            <sequence from="0" to="4" step = "2" />
          </sources>
        </map>
      </graph>
    </template>
    <sources alias="fformula">
      <math>x^4 - 4x^2</math><math>sin(x)</math>
    </sources>
  </map>

</section>