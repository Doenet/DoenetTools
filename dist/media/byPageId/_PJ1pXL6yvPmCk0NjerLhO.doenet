<problem>
<!-- <title>mimic an action potential with linear system</title> -->

<setup>
  <selectFromSequence assignNames='ENa' from='50' to='60' />
  <selectFromSequence assignNames='EK' from='-90' to='-80' />
  <number name="EKRound">round($EK/5)*5</number>
  <number name="ENaRound">round($ENa/5)*5</number>
</setup>

In the following, we explore a piecewise-linear approximation the neuron's action potential.  Two ion channels play an important role in action-potential generation: the sodium (Na<m>{}^+</m>) channel and the potassium (K<m>{}^+</m>) channel.  The opening and closing of these channels draws the transmembrane voltage of the neuron up or down, giving rise to the dynamic properties of the neuron.

<p>Note: include at least 3 significant digits if you round your answers.</p>



<ol>

<li name="singleChannel" newNamespace>

<setup>

  <select assignNames='(channel1type channel1E channel1Eround channel1Eeq channel1geq) '>
    <option>
      <text>sodium</text>
      <math>$(../ENa) </math>
      <math>$(../ENaRound) </math>
      <math>E_Na= $(../ENa) </math>
      <math>g_Na = $channel1g </math>
    </option>
    <option>
      <text>potassium</text>
      <math>$(../EK)</math>
      <math>$(../EKRound)</math>
      <math>E_K = $(../EK)</math>
      <math>g_K = $channel1g</math>
    </option>
  </select>
  <selectFromSequence assignNames='channel1g' from='0.2' to='5' step=' 0.1'/>
  <math name='channel1rhs' simplify='numbersPreserveOrder' >-$channel1g (V-$channel1E )</math>
  <selectFromSequence assignNames='t01' from='2' to='min(9, 20-4/$channel1g)' />
  <selectFromSequence assignNames='V01' from='-70' to='-50' />
  <function name='Vt1' variables='t'>($V01 -$channel1E )*e^(-(t-$t01 )$channel1g ) + $channel1E </function>
  <math name='Vt1_from0' simplify='numbers' >($V01 -$channel1E )*e^(-t*$channel1g ) + $channel1E </math>
  <math name='V01_minus_channel1E' simplify='numbers' >$V01 -$channel1E </math>

  <math name='Vt1_uneval' simplify='numbersPreserveOrder' >$V01_minus_channel1E *e^(-$channel1g (t-$t01 )) + $channel1E </math>
  <number name='tmax1' >ceil(($t01 +4/$channel1g )/10)*10</number>
  <number name='tmin1' >-0.1*$tmax1 </number>
  <boolean name="showCurve1">false</boolean>

  <number name="V01round">round($V01/5)*5</number>

</setup>


<em>Neuron with a single channel.</em>  If a neuron had just a single channel, we could model the evolution of its voltage <m>V</m> as
<me>C\frac{ dV }{ dt } = - g (V - E)</me>
where <m>C</m> is the (positive) capacitance of the neuron's membrane, <m>g</m> is the (positive) <em>conductance</em> of the channel (the reciprocal of its resistance) and <m>E</m> is its <em>reversal potential</em>.  (We'll measure time <m>t</m> in 
<ref uri="https://en.wikipedia.org/wiki/Second">ms</ref>
, voltage <m>V</m> in 
<ref uri="https://en.wikipedia.org/wiki/Volt">mV</ref>
, capacitance <m>C</m> in 
<ref uri="https://en.wikipedia.org/wiki/Farad">μF</ref>
, and conductance <m>g</m> in 
<ref uri="https://en.wikipedia.org/wiki/Siemens_(unit)">mS</ref>
.)

<p>For what value of <m>V</m> will the system be at a steady state (or equilibrium), i.e., the change in the voltage, <m>dV/dt</m>, will be zero?  <m>V=</m> 
<answer name="eqVans">
<award symbolicEquality='true'>E </award>
</answer>
(Don't include a unit in your response, though we imagine we are working with mV for voltage.)
</p>

<hint>
If you get confused with all the different parameters, try putting in number for the parameters <m>C</m>, <m>g</m> and <m>E</m>, for example, substitute <m>C=2</m>, <m>g=4</m> and <m>E=10</m>.  Once you solve it for those numbers, you can just repeat your calculations with keeping the letters <m>C</m>, <m>g</m> and <m>E</m>.
</hint>

<p>If <m>V</m> is larger than this value, the voltage will be 
<choiceinput name='overEdir' inline>
<choice>increasing</choice>
<choice>steady</choice>
<choice>decreasing</choice>
</choiceinput>
 since the derivative is 
<choiceinput name="overEsign" inline>
<choice>positive</choice>
<choice>zero</choice>
<choice>negative</choice>
</choiceinput>
.
<answer name="overEans">
  <award targetsAreResponses="overEdir overEsign">
    <when>$overEdir=decreasing and $overEsign=negative</when>
  </award>
</answer>
</p>


<p>If <m>V</m> is smaller than this value, the voltage will be 
<choiceinput name='underEdir' inline>
<choice>increasing</choice>
<choice>steady</choice>
<choice>decreasing</choice>
</choiceinput>
 since the derivative is 
<choiceinput name="underEsign" inline>
<choice>positive</choice>
<choice>zero</choice>
<choice>negative</choice>
</choiceinput>
.
<answer name="underEans">
  <award targetsAreResponses="underEdir underEsign">
    <when>$underEdir=increasing and $underEsign=positive</when>
  </award>
</answer>
</p>

<p>Let the channel be a $channel1type  channel with a reversal potential of <m>E=$channel1Eeq </m> mV and a conductance of <m>g=$channel1geq </m> mS.  If we set the capacitance to <m>C=1</m> μF, the equation for <m>V</m> becomes
<me>\frac{ dV }{ dt } = $channel1rhs .</me>
 </p>

<p>If when <m>t=$t01 </m> ms, the voltage is <m>V($t01 ) = $V01 </m> mV, calculate the voltage for all time.</p>

<p><m>V(t) =</m> 
<answer name="answer7">
<award allowedErrorInNumbers='0.01'>$Vt1 </award>
<award credit='0.5' allowedErrorInNumbers='0.1' feedbackCodes='numericalerror'>$Vt1 </award>
<award allowedErrorInNumbers='0.01' credit='0' name='award14'>$Vt1_from0 </award>
<award credit='0' allowedErrorInNumbers='0.1' feedbackCodes='numericalerror'>$Vt1_from0 </award>
</answer>
mV
</p>

<feedback condition="$award14">That would be correct if the initial condition were for <m>t=0</m>.  However, the initial condition for <m>t=$t0 </m>.  Make sure <m>V($t01 ) = $V01 </m>.</feedback>
<copy prop="feedbacks" tname="answer7" />



<p>Plot <m>V(t)</m> for <m>$t01  \lt  t \lt  $tmax1 </m> on the below graph.  For the initial and long time voltages, round the values to the nearest 5 mV.  Click <updateValue label="Show curve" type="boolean" tname="showCurve1" newValue="true" disabled="$showCurve1" />
    to reveal the <copy prop="styleDescription" tname="f1" /> curve and move the three points so that it represents the graph of <m>V(t)</m> .
  <answer matchPartial name="checkCurve1">
    <award><when>
      <boolean name="initial1">$P11 = ($t01, $V01round)</boolean>
      and 
      <boolean name="final1">$$f1(2$tmax1) = $channel1Eround</boolean>
      and
      <boolean name="middle1">$final1 and <isBetween limits="$V01round $channel1Eround">$(B1{prop='y'})</isBetween>
       and <isBetween limits="$V01round $channel1Eround">$(C1{prop='y'})</isBetween>
      </boolean>
    </when></award>
  </answer>
  </p>

  <feedback condition="$showCurve1 and not $initial1" updateWithTname="checkCurve1">
    <p>The initial condition is incorrect.</p>
  </feedback>
  <feedback condition="$showCurve1 and not $final1" updateWithTname="checkCurve1">
    <p>The value after a long time is incorrect.</p>
  </feedback>
  <feedback condition="$showCurve1 and $initial1 and $final1 and not $middle1" updateWithTname="checkCurve1">
    <p>The shape of the solution is incorrect.</p>
  </feedback>
  

<graph width='500' height='450' xmin="$tmin1" xmax="$tmax1" ymin='$(../EK)-3' ymax='$(../ENa)+3'  showNavigation='false' grid xlabel="time (ms)" ylabel="V (mv)">
  <point name="A1" hide="not $showCurve1">(0, 0)
    <constraints>
      <constrainToGrid dx="0.2" dy="5" />
    </constraints>
  </point>
  <point name="B1" hide="not $showCurve1">(3,4)
    <constraints>
      <constrainToGrid dx="0.2" dy="5" />
    </constraints>
  </point>
  <point name="C1" hide="not $showCurve1">(5,6)
    <constraints>
      <constrainToGrid dx="0.2" dy="5" />
    </constraints>
  </point>
  <function through="$A1 $B1 $C1" domain="($(P11{prop='x'}),4$tmax1)" name="f1" hide="not $showCurve1" />

</graph>

<setup>
  <sort assignNames="P11 P12 P13">$A1$B1$C1</sort>
</setup>


<p>You should have found that the solution decays exponentially to the reversal potential, with a time constant determined by the conductance.</p>




</li>



<li>
  <setup>
    <math name='Eeff'>(g_(Na)  E_(Na)  + g_K E_K)/(g_(Na) +g_K)</math>
    <math name='Eeff2'>(g_(Na)  E_(Na)  + g_k E_k)/(g_(Na) +g_k)</math>
  </setup>

Now, we will model both the potassium channel and the sodium channel in the neuron. We assume that the currents from the channels sum linearly so that the combined model for the evolution of the voltage is
<men name="equationGeneric">C\frac{ dV }{ dt } = -g_{Na}(V-E_{Na}) - g_{K}(V-E_{K}),</men>
where <m>g_{Na}</m> is the sodium channel conductance, <m>g_K</m> is the potassium channel conductance, <m>E_{Na}</m> is the sodium reversal potential, and <m>E_K</m> is the potassium reversal potential.  For simplicity, we'll continue to set the capacitance to <m>C=1</m> μF.

<p>For what value of <m>V</m> will the neuron be at a steady state?</p>

<p><m>V=</m> 
<answer>
<award>$Eeff </award>
<award>$Eeff2 </award>
</answer>
</p>




<hint>
Leave <m>g_{Na}</m>, <m>g_K</m>, <m>E_{Na}</m>, and <m>E_K</m> as unspecified parameters, so the answer will be in terms of those four parameters. Capitalization matters, though an answer that consistently uses a lowercase k will be accepted.
</hint>

</li>
<li>

<setup>

<selectFromSequence assignNames='ar' from='0.1' to='0.2' step='0.01' />
<selectFromSequence assignNames='gr' from='0.1' to='0.3' step='0.01' />
<number name="taur">1/$gr</number>
<number name="gNar"><round numberDigits="2">$gr*$ar</round></number>
<number name="gKr"><round numberDigits="2">$gr*(1-$ar)</round></number>
<number name="Er">$ar*$ENa+(1-$ar)*$EK</number>
<number name="ErRound">round($Er/5)*5</number>

<selectFromSequence assignNames='gNau' from="2" to="5" step="0.1" />
<number name="Eu">($gNau*$ENa+$gKr*$EK)/($gNau+$gKr)</number>
<number name="EuRound">round($Eu/5)*5</number>

<number name="gu">$gNau+$gKr</number>
<number name="tauu">1/$gu</number>
<function name='Vtu' variables='t'>($Er -$Eu )*exp(-t/$tauu ) + $Eu </function>
<number name='Vtu1'>$$Vtu(1)</number>
<number name="Vtu1Round">round($Vtu1/5)*5</number>

<selectFromSequence name="gKd" from="0.9" to="2" step="0.1" />
<number name="taud">1/$gKd</number>



<function name='Vtdactual' variables='t'>($Vtu1  - $EK )*exp(-(t-1)/$taud ) + $EK </function>
<math name='Vtd4actual' simplify='full' >$$Vtdactual(4)</math>

<number name="Vtu1ansRound">round($Vtu1ans/5)*5</number>

<function name='Vtd' variables='t'>($Vtu1ans - $EK )*exp(-(t-1)/$taud ) + $EK </function>
<math name='Vtd_from0' simplify='full' >($Vtu1ans - $EK )*exp(-t/$taud ) + $EK </math>
<math name='Vtd4' simplify='full' >$$Vtd(4)</math>
<number name="Vtd4Round">round($Vtd4/5)*5</number>


<function name='Vtaactual' variables='t'>($Vtd4actual  - $Er )*exp(-(t-4)/$taur ) + $Er </function>

<number name="Vtd4ansRound">round($Vtd4ans/5)*5</number>

<function name='Vta' variables=''>($Vtd4ans - $Er )*exp(-(t-4)/$taur ) + $Er </function>
<math name='Vta_from0' simplify='full' >($Vtd4ans - $Er )*exp(-t/$taur ) + $Er </math>


<boolean name="showCurve1">false</boolean>
<boolean name="showCurve2">false</boolean>
<boolean name="showCurve3">false</boolean>


<!-- 
  

<number name='dt1' >$tmax1 /20</number>
<number name='vmin' >-100</number>
<number name='vmax' >80</number>
<number name='dv' >5</number>

<number name='tau1real'>1/$channel1g </number>
<selectFromSequence assignNames='tau1realn' from='1' to='4' />
<number name='tau1a'>$tau1real *3^(1-$tau1realn )</number>
<number name='tau1b'>$tau1real *3^(2-$tau1realn )</number>
<number name='tau1c'>$tau1real *3^(3-$tau1realn )</number>
<number name='tau1d'>$tau1real *3^(4-$tau1realn )</number> -->


<!-- <math name='ngridt_dark' simplify='full' >if(dt<1,1/dt,5)</math> -->

<!-- <math name='P01' simplify='full' >Point($t01 ,round($V01 /$dv )*$dv )</math>
<math name='Pf1' simplify='full' >Point($tmax1 ,round($$Vt1($tmax1 )/$dv )*$dv )</math>
<math name='one' simplify='full' >1</math> -->


<!-- <math name='tau1anotsmall' simplify='full' >$tau1a >0.02</math> -->
<!-- Required Condition $tau1a >0.02 -->

<!-- 
<math name="Na" splitSymbols="false">Na</math>

<math name='taur' simplify='full' >1/($gNar +$gKr )</math>
<math name='tauu' simplify='full' >1/($gNau +$gKr )</math>

<number name='reach_Eu' >$Vtu1 ,4)=evalf($Eu ,4</number> -->

<!-- Required Condition evalf($Vtu1 ,4)=evalf($Eu ,4) -->


<!-- 
<number name='tau2a'>$tauu </number>
<number name='tau2b'>$taud </number>
<number name='tau2c'>$taur </number>
<number name='tau2d'>15</number>
<number name='three'>3</number>
<number name='tmax2'>20</number>
<number name='dt2'>$tmax2 /20</number>
<math name='P02a' simplify='full' >Point(0,round($Er /$dv )*$dv )</math>
<math name='Pf2a' simplify='full' >Point(1,round($Eu /$dv )*$dv )</math>
<number name='tau2an'>1</number>
<math name='P02b' simplify='full' >$Pf2a </math>
<math name='Pf2b' simplify='full' >Point(4,round($EK /$dv )*$dv )</math>
<number name='tau2bn'>2</number>
<math name='P02c' simplify='full' >$Pf2b </math>
<math name='Pf2c' simplify='full' >Point($tmax2 ,round($$Vtaactual($tmax2 )/$dv )*$dv )</math>
<number name='tau2cn'>3</number>
<number name='tmin2'>-0.1*$tmax2 </number>
<number name='tmax2g'>$tmax2 *21/20</number>
<function name='Vtd' variables='t'>($Vtu1ans - $EK )*exp(-(t-1)/$taud ) + $EK </function>
<math name='Vtd_from0' simplify='full' >($Vtu1ans - $EK )*exp(-t/$taud ) + $EK </math>
<math name='Vtd4' simplify='full' >$$Vtd(4)</math>
-->

</setup>




Imagine that, for this neuron, the sodium reversal potential is <m>E_{Na} = $ENa </m> mV  and the potassium reversal potential is <m>E_K = $EK </m> mV.  Moreover, when the neuron is at rest, its sodium channel conductance is <m>g_{Na} = $gNar </m> mS and its potassium channel conductance is <m>g_K = $gKr </m> mS.

<p>Calculate the <em>resting potential</em> <m>E_r</m> of this neuron, i.e., the value of the steady state voltage when the neuron is at rest.</p>

<p><m>E_r =</m> 
<answer name="ErNumAns">
<award allowedErrorInNumbers='0.01' symbolicEquality simplifyOnCompare="numbers">$Er </award>
</answer>
 mV</p>


</li>

<li>
An action potential is caused by changes in the sodium and potassium conductances.  The conductances changes are triggered by changes in the voltage due to input, but here we'll just manually change the conductances to produce an action potential.

<p>Imagine that the neuron as been at rest for a long time.  Therefore, its voltage has reached its steady state, which is <m>V=</m> 
<answer>
<award allowedErrorInNumbers='0.01' symbolicEquality simplifyOnCompare="numbers">$Er </award>
</answer>
 mV. We'll use that value for the initial condition <m>V(0)</m>.</p>

<p>At <m>t=0</m>, we're going to trigger an action potential (or spike) by immediately increasing the sodium conductance way up to the value of <m>g_{Na} = $gNau </m> mS.  This means we have to solve the differential equation <ref tname="equationGeneric" /> with the new parameters <m>g_K = $gKr </m> mS and <m>g_{Na} = $gNau </m> mS, using the initial condition that <m>V(0) = E_r</m>, where you calculated <m>E_r</m>, above.</p>

<p>The solution is <m>V(t) =</m> 
<answer>
<award allowedErrorInNumbers='0.01'>$Vtu </award>
</answer>
 mV.</p>

<p>What is the value of the voltage at <m>t=1</m> ms? <m>V(1)=</m> 
<answer name="Vtu1ans">
<award allowedErrorInNumbers='0.01' symbolicEquality>$Vtu1 </award>
</answer>
 mV</p>


<p>Plot <m>V(t)</m> for <m>t > 0</m> on the below graph.  Round the initial and long time voltages to the nearest 5 mV.  Be sure that the curve passes through the calculated value at <m>t=1</m>, but round it to the nearest 5 mV.</p>

<p>Click <updateValue label="Show curve 1" type="boolean" tname="showCurve1" newValue="true" disabled="$showCurve1" />
    to reveal the <copy prop="styleDescription" tname="f1" /> curve and move the three points so that it represents the graph of <m>V(t)</m> .
  <answer matchPartial name="checkCurve1">
    <award><when>
      <boolean name="initial1">$P11 = (0, $ErRound)</boolean>
      and 
      <boolean name="final1">$$f1(40) = $EuRound</boolean>
      and
      <boolean name="middle1">$P12 = (1, $Vtu1Round) or $P13 = (1,$Vtu1Round)
      </boolean>
    </when></award>
  </answer>
  </p>

  <feedback condition="$showCurve1 and not $initial1" updateWithTname="checkCurve1">
    <p>The initial condition is incorrect.</p>
  </feedback>
  <feedback condition="$showCurve1 and not $final1" updateWithTname="checkCurve1">
    <p>The value after a long time is incorrect.</p>
  </feedback>
  <feedback condition="$showCurve1 and $initial1 and $final1 and not $middle1" updateWithTname="checkCurve1">
    <p>The curve most go through the specified value (rounded to the nearest 5 mV) at <m>t=1</m>.</p>
  </feedback>
  

<graph width='500' height='450' xmin="-1" xmax="20" ymin='$EK-3' ymax='$ENa+3'  showNavigation='false' grid xlabel="time (ms)" ylabel="V (mv)">
  <point name="A1" hide="not $showCurve1 or $f1Max=1">(0, 0)
    <constraints>
      <constrainToGrid dx="0.2" dy="5" />
    </constraints>
  </point>
  <point name="B1" hide="not $showCurve1 or $f1Max=1">(3,4)
    <constraints>
      <constrainToGrid dx="0.2" dy="5" />
    </constraints>
  </point>
  <point name="C1" hide="not $showCurve1 or $f1Max=1">(5,6)
    <constraints>
      <constrainToGrid dx="0.2" dy="5" />
    </constraints>
  </point>
  <function through="$A1 $B1 $C1" domain="($(P11{prop='x'}),$f1Max)" name="f1show" hide="not $showCurve1" />

  <point name="A2" styleNumber='2' hide="not $showCurve2 or $f2Max=4">(0, 0)
    <constraints>
      <constrainToGrid dx="0.2" dy="5" />
    </constraints>
  </point>
  <point name="B2" styleNumber='2' hide="not $showCurve2 or $f2Max=4">(3,4)
    <constraints>
      <constrainToGrid dx="0.2" dy="5" />
    </constraints>
  </point>
  <point name="C2" styleNumber='2' hide="not $showCurve2 or $f2Max=4">(5,6)
    <constraints>
      <constrainToGrid dx="0.2" dy="5" />
    </constraints>
  </point>
  <function styleNumber='2' through="$A2 $B2 $C2" domain="($(P21{prop='x'}),$f2Max)" name="f2show" hide="not $showCurve2" />

  <point name="A3" styleNumber='3' hide="not $showCurve3">(0, 0)
    <constraints>
      <constrainToGrid dx="0.2" dy="5" />
    </constraints>
  </point>
  <point name="B3" styleNumber='3' hide="not $showCurve3">(3,4)
    <constraints>
      <constrainToGrid dx="0.2" dy="5" />
    </constraints>
  </point>
  <point name="C3" styleNumber='3' hide="not $showCurve3">(5,6)
    <constraints>
      <constrainToGrid dx="0.2" dy="5" />
    </constraints>
  </point>
  <function styleNumber='3' through="$A3 $B3 $C3" domain="($(P31{prop='x'}),40)" name="f3" hide="not $showCurve3" />


</graph>

<setup>
  <sort assignNames="P11 P12 P13">$A1$B1$C1</sort>
  <function through="$A1 $B1 $C1" domain="($(P11{prop='x'}),40)" name="f1" />
  <sort assignNames="P21 P22 P23">$A2$B2$C2</sort>
  <function stylenumber="2" through="$A2 $B2 $C2" domain="($(P21{prop='x'}),40)" name="f2" />
  <sort assignNames="P31 P32 P33">$A3$B3$C3</sort>

</setup>



<p>Actually, we got a little too carried away and drew the solution of <m>V(t)</m> for too much time.  In an action potential, the sodium conductance is very high for just a brief moment, say 1 ms, before it inactivates and shuts off.  So, we should draw the above curve only for <m>t</m> between 0 and 1.  Change the maximum value to show this curve to <m>t < </m> <answer><mathinput name="f1Max" prefill="20" /><award>1</award></answer>.</p>


</li>

<li>
<p>At <m>t=1</m>, the sodium conductance decreases to zero and the potassium conductance increases to <m>g_K = $gKd </m> mS. This modifies our equation <ref tname="equationGeneric" /> so that it has yet another set of parameters.  Solve the differential equation with <m>g_{Na}=0</m> mS and <m>g_K = $gKd </m> mS.  This time, use the initial condition that you got from the previous part at <m>t=1</m>, i.e., use the initial condition <m>V(1) = <copy prop="submittedResponse" componentType="math" tname="Vtu1ans" /></m> mV.</p>



<p><m>V(t) =</m> 
<answer>
<award allowedErrorInNumbers='0.01'>$Vtd </award>
<award allowedErrorInNumbers='0.01' credit='0' name='award24'>$Vtd_from0 </award>
</answer>
 mV</p>
<feedback condition="$award24">That would be correct if the initial condition were for <m>t=0</m>.  However, the initial condition is for <m>t=1</m>. Make sure <m>V(1)</m> is the value of <m>V(1)</m> you calculated in the previous part.</feedback>

<hint>
The tricky part is that you have to use the value of <m>V(1)</m> calculated above as your initial condition for this part.  Your current answer is <m>V(1) = <copy prop="submittedResponse" componentType="math" tname="Vtu1ans" /></m> mV.  If you haven't entered in a value, it will look like <m>V(1) = ＿</m> mV, and nothing you enter here will be correct.
</hint>


<p>At <m>t=4</m>, the voltage is <m>V(4) =</m> 
<answer name="Vtd4ans">
<award allowedErrorInNumbers='0.01'>$Vtd4 </award>
</answer>
 mV.</p>


<p>To plot this segment of the solution, click <updateValue label="Show curve 2" type="boolean" tname="showCurve2" newValue="true" disabled="$showCurve2" />
    to reveal the <copy prop="styleDescription" tname="f2" /> curve on the above graph and move the three points so that it represents the graph of <m>V(t)</m> for <m>t>1</m> ms.
  <answer matchPartial name="checkCurve2">
    <award><when>
      <boolean name="initial2">$P21 = (1, $Vtu1ansRound)</boolean>
      and 
      <boolean name="final2">$$f2(40) = $EKRound</boolean>
      and
      <boolean name="middle2">$P22 = (4, $Vtd4Round) or $P23 = (4,$Vtd4Round)
      </boolean>
    </when></award>
  </answer>
  </p>

  <feedback condition="$showCurve2 and not $initial2" updateWithTname="checkCurve2">
    <p>The initial condition is incorrect.</p>
  </feedback>
  <feedback condition="$showCurve2 and not $final2" updateWithTname="checkCurve2">
    <p>The value after a long time is incorrect.</p>
  </feedback>
  <feedback condition="$showCurve2 and $initial2 and $final2 and not $middle2" updateWithTname="checkCurve2">
    <p>The curve most go through the specified value (rounded to the nearest 5 mV) at <m>t=4</m>.</p>
  </feedback>
  




<p>We drew the solution of <m>V(t)</m> for too much time, again.  After an action potential, the potassium conductance is very high for just a short period of time, say 4 ms after the start of the actional potential, before it returns to its original value.  We should draw the second segment, show as a <copy prop="styleDescription" tname="f2" /> curve, only for <m>t</m> between 1 and 4.  Change the maximum value to show this curve to <m>t < </m> <answer><mathinput name="f2Max" prefill="20" /><award>4</award></answer>.</p>
</li>

<li>
Finally, for <m>t \ge 4</m>, the sodium and potassium conductances return to their resting values <m>g_{Na}=$gNar </m> mS and <m>g_K = $gKr </m> mS.  Solve the differential equation <ref tname="equationGeneric" /> with <m>g_{Na}=$gNar </m> mS and <m>g_K = $gKr </m> mS.  For this last segment, the previous value of <m>V</m> calculated at <m>t=4</m> for the initial condition, i.e., use the initial condition <m>V(4) = <copy prop="submittedResponse" componentType="math" tname="Vtd4ans" /></m> mV.

<p><m>V(t)=</m> 
<answer name="answer16">
<award allowedErrorInNumbers='0.01'>$Vta </award>
<award allowedErrorInNumbers='0.01' credit='0' name='award27'>$Vta_from0 </award>
</answer>
 mV.</p>
<feedback condition="$award27">That would be correct if the initial condition were for <m>t=0</m>.  However, the initial condition is for <m>t=4</m>. Make sure <m>V(4)</m> is the value of <m>V(4)</m> you calculated in the previous part.</feedback>


<hint>
Similar to the previous part, you have to use the value of <m>V(4)</m> calculated in the previous part as your initial condition for this part, which is <m>V(4) = <copy prop="submittedResponse" tname="Vtd4ans" componentType="math" /></m> mV.  If you haven't entered in a value, it will look like <m>V(4) = ＿</m> mV, and nothing you enter here will be correct. 
</hint>


<p>To plot the final segment of the solution for <m>t>4</m>, click <updateValue label="Show curve 3" type="boolean" tname="showCurve3" newValue="true" disabled="$showCurve3" />
    to reveal the <copy prop="styleDescription" tname="f3" /> curve and move the three points so that it represents the graph of <m>V(t)</m> .
  <answer matchPartial name="checkCurve3">
    <award><when>
      <boolean name="initial3">$P31 = (4, $Vtd4ansRound)</boolean>
      and 
      <boolean name="final3">$$f3(40) = $ErRound</boolean>
      and
      <boolean name="middle3">$final3 and <isBetween limits="$Vtd4ansRound $ErRound">$(B3{prop='y'})</isBetween>
       and <isBetween limits="$Vtd4ansRound $ErRound">$(C3{prop='y'})</isBetween>
      </boolean>
    </when></award>
  </answer>
  </p>

  <feedback condition="$showCurve3 and not $initial3" updateWithTname="checkCurve3">
    <p>The initial condition is incorrect.</p>
  </feedback>
  <feedback condition="$showCurve3 and not $final3" updateWithTname="checkCurve3">
    <p>The value after a long time is incorrect.</p>
  </feedback>
  <feedback condition="$showCurve3 and $initial3 and $final3 and not $middle3" updateWithTname="checkCurve3">
    <p>The shape of the solution is incorrect.</p>
  </feedback>
  



</li>




</ol>


<solution>


<ol>

<li>
<p><m>V(t) = $(singleChannel/Vt1_uneval) </m></p>


<graph width='500' height='450' xmin="$(singleChannel/tmin1)" xmax="$(singleChannel/tmax1)" ymin='$EK-3' ymax='$ENa+3'  showNavigation='false' grid xlabel="time (ms)" ylabel="V (mv)">
  <function variables="t" domain='($(singleChannel/t01), $(singleChannel/tmax1))' >$(singleChannel/Vt1_uneval)</function>
</graph>

</li>

<li>
<p>At steady state, <m>\displaystyle V=$Eeff </m>.</p>
</li>

<li><p>
<m>\displaystyle E_r = \frac{ $gNar  \cdot $ENa  + $gKr  \cdot $EK  }{ $gNar  + $gKr  } \approx <round numberdigits="3"><number>$Er </number></round></m> mV
</p></li>

<li><p>
<m>\displaystyle V(t) \approx <round numberdigits="3"><copy prop="formula" tname="Vtu" /></round></m> mV</p>

<p><m>V(1) \approx <round numberdigits="3"><number>$Vtu1 </number></round></m> mV</p>

<graph width='500' height='450' xmin="-1" xmax="20" ymin='$EK-3' ymax='$ENa+3'  showNavigation='false' grid xlabel="time (ms)" ylabel="V (mv)">
  <function domain="(0,1)" variables="t"><copy prop="formula" tname="Vtu" /></function>

  <function domain="(1,4)" variables="t" styleNumber="2"><copy prop="formula" tname="Vtdactual" /></function>

  <function domain="(4,40)" variables="t" styleNumber="3"><copy prop="formula" tname="Vtaactual" /></function>
</graph>

</li>

<li><p>
Given that <m>V(1) = <round numberdigits="3"><number>$Vtu1 </number></round></m> mV,
</p>
<p>
<m>V(t) \approx <round numberdigits="3"><copy prop="formula" tname="Vtdactual" /></round></m> for <m>1 \le t \le 4</m>.</p>

<p><m>V(4) \approx<round numberdigits="3"><number>$Vtd4actual </number></round></m> mV</p>



</li>

<li><p>
Given that <m>V(4) = <round numberdigits="3"><number>$Vtd4actual </number></round></m> mV,
</p>
  
<p>
<m>V(t) = <round numberdigits="4"><copy prop="formula" tname="Vtaactual" /></round></m> mv, for <m>t \ge 4</m>.</p>
</li>




</ol>

</solution>


</problem>