was trying to force use of <tag>when</tag> outside of an <tag>award</tag> but was never necessary.  WOuld still make interesting illustration. This could be done with or without groups

<example newNameSpace>
<setup>
  <point name="a">(-4,-4)</point>
  <point name="b">(0,4)</point>
  <point name="c">(4,-4)</point>
  <point name="d">(4,4)</point>
  <point name="e">(4,0)</point>
  <point name="f">(-4,4)</point>
  <rectangle vertices="$a $d" draggable="false" name="square"/>
  
  <group name="triangleUp">$a $b $c</group>
  
  <group name="userGroup">
    <point name="userA">(0,0)
      <constraints><constrainToGrid/></constraints>
    </point>
    <point name="userB">(0,0)
      <constraints><constrainToGrid/></constraints>
    </point>
    <point name="userC">(0,0)
      <constraints><constrainToGrid/></constraints>
    </point>
 <!--   <point name="userD">(0,0)
      <constraints><constrainToGrid/></constraints>
    </point>
    <point name="userE">(0,0)
      <constraints><constrainToGrid/></constraints>
    </point>-->
  </group>

</setup>
  
<graph grid="dense">
  $userGroup $square
  <triangle hide="!$placed" vertices="$userA $userB $userC"/>
</graph>

<!--<boolean name="placed">
  <when unorderedCompare>
    ($a,$b) = ($userA, $userB)
  </when>
</boolean>-->

Nope, still don't need a when!  
<boolean name="placed" unorderedCompare>
    ($a,$b,$c) = ($userA, $userB, $userC)
  or ($a, $e, $f) = ($userA, $userB, $userC)
</boolean>
  
<p>List of user-placed vertices: $userGroup</p>
<p>List of predefined vertices: $triangleUp</p>

</example>
