<problem>
<!-- <title>Bifurcation with cubic, via plots of function</title> -->

<setup>

<select assignNames='f' >f g</select>
<select assignNames='par' >a b c alpha beta gamma</select>
<select assignNames='x' >x y z s u v w</select>
<selectFromSequence assignNames='a_mag' from='1' to=' 5' />
<selectFromSequence assignNames='b_mag' from='4' to=' 10' />
<selectFromSequence assignNames='c' from='-10' to=' 10' exclude='0' />
<selectFromSequence assignNames='a_sign b_sign vard_sign par_effect_sign' from='-1' to=' 1' step='2' numberToSelect="4" withReplacement />
  

<selectFromSequence assignNames='d_mag' from='max(2, 10-$b_mag)' to='max(4, 10-$b_mag)' />

<number name='a'>$a_mag *$a_sign </number>
<number name='b'>$b_mag *$b_sign </number>
<number name='d'>-$d_mag *$b_sign </number>
<number name='reorder'>(1-$a_sign *$par_effect_sign )/2</number>
<function name='line_of_zeros' variables='p' symbolic><math simplify>$d +$vard_sign *($c +p*$par_effect_sign +$a )/$a </math></function>

<function name='fun' variables='$x $par' symbolic simplify="numbers"><math simplify>0.01*($x -$$line_of_zeros($par ))*($a *($x -$b )^2+$c +$par *$par_effect_sign )</math></function>
<number name='parvalbif'>-$c *$par_effect_sign </number>
<number name='parval1'>(-$c -$a *4)*$par_effect_sign </number>
<number name='parval2'>(-$c -$a )*$par_effect_sign </number>
<number name='parval3'>(-$c +$a )*$par_effect_sign </number>
<function name='fun_at_bif' variables='$x'>$$fun($x ,$parvalbif )</function>
<p>
<number name='xmin' >min(-2,floor(min($b +$b_sign *3,$d -4)/2)*2-1)</number>
<number name='xmax'>max(2,ceil(max($b +$b_sign *3,$d +4)/2)*2+1)</number>
</p>

<function name='fun_at_val1' variables='$x'>$$fun($x ,$parval1 )</function>
<function name='fun_at_val2' variables='$x'>$$fun($x ,$parval2 )</function>
<function name='fun_at_val3' variables='$x'>$$fun($x ,$parval3 )</function>
<number name='val1_zero1'>$b -2</number>
<number name='val1_zero2'>$b +2</number>
<evaluate name="val1_zero3" forceNumeric function="$line_of_zeros" input="$parval1" />
<!-- <number name='val1_zero3'>$d +$vard_sign *(2*sqrt(6)-3)</number> -->
<number name='val2_zero1'>$b -1</number>
<number name='val2_zero2'>$b +1</number>
<evaluate name="val2_zero3" forceNumeric function="$line_of_zeros" input="$parval2" />
<evaluate name="valbif_zero2" forceNumeric function="$line_of_zeros" input="$parvalbif" />
<evaluate name="val3_zero" forceNumeric function="$line_of_zeros" input="$parval3" />


<!--   
<number name='val1_critical_point_sub1'>$val1_zero1 +$val1_zero2 +$val1_zero3 </number>
<number name='val1_critical_point_sub2'>sqrt($val1_zero1 ^2+$val1_zero2 ^2+$val1_zero3 ^2-$val1_zero1 *$val1_zero2 -$val1_zero1 *$val1_zero3 -$val1_zero2 *$val1_zero3 )</number>
<number name='val1_critical_point1'>1/3*($val1_critical_point_sub1 +$val1_critical_point_sub2 )</number>
<number name='val1_critical_point2'>1/3*($val1_critical_point_sub1 -$val1_critical_point_sub2 )</number>
<number name='fun_at_val1_critical_point1'>$$fun_at_val1($val1_critical_point1 )</number>
<number name='fun_at_val1_critical_point2'>$$fun_at_val1($val1_critical_point2 )</number> -->
<number name='val2_critical_point_sub1'>$val2_zero1 +$val2_zero2 +$val2_zero3 </number>
<number name='val2_critical_point_sub2'>sqrt($val2_zero1 ^2+$val2_zero2 ^2+$val2_zero3 ^2-$val2_zero1 *$val2_zero2 -$val2_zero1 *$val2_zero3 -$val2_zero2 *$val2_zero3 )</number>
<number name='val2_critical_point1'>1/3*($val2_critical_point_sub1 +$val2_critical_point_sub2 )</number>
<number name='val2_critical_point2'>1/3*($val2_critical_point_sub1 -$val2_critical_point_sub2 )</number>
<number name='fun_at_val2_critical_point1'>$$fun_at_val2($val2_critical_point1 )</number>
<number name='fun_at_val2_critical_point2'>$$fun_at_val2($val2_critical_point2 )</number>
<number name='bif_critical_point1'>1/3*($b +2*$d )</number>
<number name='fun_at_bif_critical_point1'>$$fun_at_bif($bif_critical_point1 )</number>
<number name='fun_at_val3_bif_critical_point1'>$$fun_at_val3($bif_critical_point1 )</number>


<number name='ymax_sub'>max(<!--$fun_at_val1_critical_point1, $fun_at_val1_critical_point2 ,-->
$fun_at_val2_critical_point1 ,$fun_at_val2_critical_point2 ,$fun_at_val3_bif_critical_point1 ,$fun_at_bif_critical_point1 )</number>
<number name='ymin_sub'>min(<!--$fun_at_val1_critical_point1 ,$fun_at_val1_critical_point2 ,-->
$fun_at_val2_critical_point1 ,$fun_at_val2_critical_point2 ,$fun_at_val3_bif_critical_point1 ,$fun_at_bif_critical_point1 )</number>

<number name="ymax">max($ymax_sub, -0.2$ymin_sub)</number>
<number name="ymin">min($ymin_sub, -0.2$ymax_sub)</number>


<number name='parval_reorder1'>(1-$reorder )*$parval1 +$reorder *$parval3 </number>
<number name='parval_reorder2'>(1-$reorder )*$parval2 +$reorder *$parvalbif </number>
<number name='parval_reorder3'>(1-$reorder )*$parvalbif +$reorder *$parval2 </number>
<number name='parval_reorder4'>(1-$reorder )*$parval3 +$reorder *$parval1 </number>
<function name='fun_at_val_reorder1' variables='$x'>$$fun($x ,$parval_reorder1 )</function>
<function name='fun_at_val_reorder2' variables='$x'>$$fun($x ,$parval_reorder2 )</function>
<function name='fun_at_val_reorder3' variables='$x'>$$fun($x ,$parval_reorder3 )</function>
<function name='fun_at_val_reorder4' variables='$x'>$$fun($x ,$parval_reorder4 )</function>
  

<!-- Required Condition $xmax -$xmin  < 20 -->

<conditionalContent assignNames="(num_equilibria_1 num_equilibria_2)">
  <case condition="$reorder = 1">
    <number>1</number><number>3</number>
  </case>
  <else>
    <number>3</number><number>1</number>
  </else>
</conditionalContent>

<conditionalContent assignNames="(upperStable)">
  <case condition="($a_sign > 0 and $d > $b) or ($a_sign < 0 and $d < $b)">
    <boolean>true</boolean>
  </case>
  <else><boolean>false</boolean></else>
</conditionalContent>

<boolean name='line_stable'>$a_sign < 0</boolean>
  
<min name='parminsub' forceNumeric>$parval1 $parval3</min>
<max name='parmaxsub' forceNumeric>$parval1 $parval3</max>
<number name='parmin'>min(-2, round($parminsub -($parmaxsub -$parminsub )*0.2), round(-0.2*$parmaxsub))</number>
<number name='parmax'>max(2, round($parmaxsub +($parmaxsub -$parminsub )*0.2), round(-0.2*$parminsub))</number>

 <!--  
<math name='pmin' simplify='full'  unordered='true'>min(-1,$parval_reorder1 -1)</math>
<math name='pmax' simplify='full'  unordered='true'>max(1,$parval_reorder4 +1)</math>
<math name='one' simplify='full' >1</math>
<math name='upper_stable' simplify='full'  unordered='true'>if(Or(And($a_is_pos , $d  > $b ),And($a_is_neg , $d  < $b )),1,0)</math>
<math name='lower_stable' simplify='full' >1-$upper_stable </math>
<math name='b_upper' simplify='full' >-$a *$par_effect_sign </math>
<math name='b_lower' simplify='full' >-$a *$par_effect_sign </math>
<math name='theline' simplify='full'  unordered='true'>Line(Point($parval1 ,$$line_of_zeros($parval1 )),Point($parval3 ,$$line_of_zeros($parval3 )))</math>
<math name='line_stable' simplify='full'  unordered='true'>if($a_is_neg ,1,0)</math>
<function name='upper_branch' variables='pp'>$b +sqrt((-$c -pp*$par_effect_sign )/$a )</function>
<function name='lower_branch' variables='pp'>$b -sqrt((-$c -pp*$par_effect_sign )/$a )</function>
<math name='A' simplify='full'  unordered='true'>Point($parvalbif ,$b )</math>
<math name='B1' simplify='full'  unordered='true'>Point($parval2 ,$b +1)</math>
<math name='B2' simplify='full'  unordered='true'>Point($parval2 ,$b -1)</math>
<math name='C1' simplify='full'  unordered='true'>Point($parval1 ,$$line_of_zeros($parval1 ))</math>
<math name='C2' simplify='full'  unordered='true'>Point($parval3 ,$$line_of_zeros($parval3 ))</math>
<math name='p_test' simplify='full'  unordered='true'>if($a *$par_effect_sign  >0,$pmin , $pmax )</math>
<math name='line_below_on_edge' simplify='full' >$b -$b_sign *sqrt((-$c -$p_test *$par_effect_sign )/$a ) > $d +$vard_sign *($c +$p_test *$par_effect_sign +$a )/$a </math>
<math name='line_not_cross_parabola' simplify='full' >Xor($line_below_on_edge , $d  > 0)</math> -->
<!-- Required Condition Xor($line_below_on_edge , $d  > 0) -->


 <styledefinitions>
  <styledefinition stylenumber="2" lineWidth="3" />
  <styledefinition styleNumber="9" markerColor="red" markerSize="4" markerStyle="circle" lineColor="red" lineWidth="3" />
  <styledefinition styleNumber="10" markerColor="red" markerSize="1" markerStyle="circle" lineColor="red" lineWidth="3" />
</styledefinitions>



</setup>



<p>For the dynamical system 
 <m>\frac{ d$x }{ dt } = $f ($x ,$par ),</m>
the function <m>$f</m> of <m>$x </m> depends on a parameter <m>$par </m>.  Rather than show the formula for <m>$f</m>, you can see its behavior through these graphs for <m>$par =$parval_reorder1 , $parval_reorder2 , $parval_reorder3 , $parval_reorder4 </m>.
</p>

<p>You can change the value of $par in the first graph using this slider: </p>

<slider name="pslider" from="$parmin" to="$parmax" step="0.1" initialValue="$parval_reorder1" width="250" />

<sbsGroup>
<sideBySide>

<stack>
<p><m>$par = $pslider</m></p>
<graph width='280' height='200' xmin='$xmin' xmax='$xmax' ymin='$ymin' ymax='$ymax' fixAxes grid xlabel="$x" ylabel="$f">
  <function name='fun_at_val_pslider' variables='$x'>$$fun($x ,$pslider )</function>
</graph>
</stack>

<stack>
<p><m>$par = $parval_reorder2</m></p>
<graph width='280' height='200' xmin='$xmin' xmax='$xmax' ymin='$ymin' ymax='$ymax' fixAxes grid xlabel="$x" ylabel="$f">
  $fun_at_val_reorder2
</graph>
</stack>

</sideBySide>

<sideBySide>
<stack>
<p><m>$par = $parval_reorder3</m></p>
<graph width='280' height='200' xmin='$xmin' xmax='$xmax' ymin='$ymin' ymax='$ymax' fixAxes grid xlabel="$x" ylabel="$f">
  $fun_at_val_reorder3
</graph>
</stack>

<stack>
<p><m>$par = $parval_reorder4</m></p>
<graph width='280' height='200' xmin='$xmin' xmax='$xmax' ymin='$ymin' ymax='$ymax' fixAxes grid xlabel="$x" ylabel="$f">
  $fun_at_val_reorder4
</graph>
</stack>

</sideBySide>
</sbsGroup>
  
<p>For values of <m>$par </m> in between those shown, <m>$f</m> changes smoothly, so its graph will be somewhere in between the snapshots shown (as you can see by changing the value of $par using the slider).</p>



<ol>

<li>

<p>There is a bifurcation that occurs for a particular value of <m>$par </m>, which we'll denote by <m>$par ^*</m>.  What is the value of <m>$par ^*</m>?  <m>$par ^*=</m> 
<answer>$parvalbif</answer>
</p>




</li>

<li>
<p>At the bifurcation point, the number of equilibria changes.</p>

<p>For <m>$parval_reorder1  \le $par  \lt  $par ^*</m>, the number of equilibria = 
<answer weight="2">$num_equilibria_1</answer>
.</p>

<p>For <m>$par ^* \lt  $par  \le $parval_reorder4 </m>, the number of equilibria = 
<answer weight="2">$num_equilibria_2</answer>
.</p>


</li>

<li>
<p>Use the below applet to sketch a bifurcation diagram with respect to the parameter <m>$par </m>.  The bifurcation diagram should represent how the number, location, and stability of the equilibria depend on the value of <m>$par </m> for <m>$parval_reorder1  \le $par  \le $parval_reorder4 </m>.</p>



<p>First, click 
<updateValue name="revealBifPoint" label="Show point" type="boolean" tname="showBifPoint" newValue="true" disabled="$showBifPoint" /> and move the point to the location of the bifurcation point.
<answer name="ansBifPoint" disableAfterCorrect disabled="not $showBifPoint">
  <award>
    <when>
      $BP = <math>($parvalbif, $b)</math>
    </when>
  </award>
</answer>
</p>

<hint>
  <p>The horizontal coordinate of the point should be the bifurcation value <m>$par^* = </m> <answer weight="0" name="parvalhint">$parvalbif</answer></p>

  <p>The vertical coordinate of the point should be the value <m>$x</m> of the equilibrium right at the bifurcation, i.e, right when <m>$par = $par^*</m>.  At the bifurcation, the equilibrium is at the value <m>$x = </m> <answer weight="0" name="bhint">$b</answer>.</p>

  <conditionalContent condition="$(parvalhint{prop='creditAchieved'})=1 and $(bhint{prop='creditAchieved'})=1" >
    <p>Therefore, move the bifurcation point on the graph to <m>($par, $x) = ($parvalbif, $b)</m>.</p>
  </conditionalContent>
</hint>


<setup>
  <boolean name="showBifPoint">false</boolean>
  <boolean name="showEqFromBif">false</boolean>
  <boolean name="showCurvesFromBif">false</boolean>
  <boolean name="showLineEq">false</boolean>
  <boolean name="showLineCurve">false</boolean>
</setup>

<graph xmin='$parmin' xmax='$parmax' ymin="$xmin" ymax="$xmax" fixAxes grid xlabel="$par" ylabel="$x">

  <conditionalContent condition="$showBifPoint">
    
    <conditionalContent>
      <case condition="$(ansBifPoint{prop='creditAchieved'}) < 1">
        <equilibriumPoint name="BP" styleNumber="9" x="-0.5" y="0.5" label="($par, $x) = $(BP{prop='coords' displayDigits='3'})" labelPosition="top" showCoordsWhenDragging="false" stable="false">
          <constraints>
            <attractTo thresholdRelativeToGraph threshold="0.03">
              <point>($parvalbif, $b)</point>
            </attractTo>
          </constraints>
        </equilibriumPoint>
      </case>
      <else>
        <equilibriumPoint name="BPa" styleNumber="9" fixed stable="false" hide="$(ansBifCurves{prop='creditAchieved'}) = 1">
          ($parvalbif, $b)
        </equilibriumPoint>
      </else>
    </conditionalContent>

  </conditionalContent>


  <conditionalContent condition="$showEqFromBif">
    
    <conditionalContent>
      <case condition="$(ansEqFromBif{prop='creditAchieved'}) < 1">
        <equilibriumpoint name="BEa" styleNumber="9" x="-1.5" y="1.5" switchable>
          <constraints name="attractTo4">
            <attractTo thresholdRelativeToGraph threshold="0.03">
              <point>($parval2, $val2_zero1)</point>
              <point>($parval2, $val2_zero2)</point>
              <point>($parval1, $val1_zero1)</point>
              <point>($parval1, $val1_zero2)</point>
            </attractTo>
          </constraints>
        </equilibriumpoint>
        <equilibriumpoint name="BEb" styleNumber="9" x="1.5" y="1.5" switchable>
          <copy tname="attractTo4" />
        </equilibriumpoint>
        <equilibriumpoint name="BEc" styleNumber="9" x="-1.5" y="-1.5" switchable>
          <copy tname="attractTo4" />
        </equilibriumpoint>
        <equilibriumpoint name="BEd" styleNumber="9" x="1.5" y="-1.5" switchable>
          <copy tname="attractTo4" />
        </equilibriumpoint>
      </case>
      <else>
        <equilibriumPoint name="BE11" styleNumber="9" fixed stable="not $upperStable" hide="$(ansBifCurves{prop='creditAchieved'}) = 1">
          ($parval1, $val1_zero1)
        </equilibriumPoint>
        <equilibriumPoint name="BE12" styleNumber="9" fixed stable="$upperStable" hide="$(ansBifCurves{prop='creditAchieved'}) = 1">
          ($parval1, $val1_zero2)
        </equilibriumPoint>
        <equilibriumPoint name="BE21" styleNumber="9" fixed stable="not $upperStable" hide="$(ansBifCurves{prop='creditAchieved'}) = 1">
          ($parval2, $val2_zero1)
        </equilibriumPoint>
        <equilibriumPoint name="BE22" styleNumber="9" fixed stable="$upperStable" hide="$(ansBifCurves{prop='creditAchieved'}) = 1">
          ($parval2, $val2_zero2)
        </equilibriumPoint>
      </else>
    </conditionalContent>

  </conditionalContent>


  <conditionalContent condition="$showCurvesFromBif">
    <point layer="3" hide="$(ansBifCurves{prop='creditAchieved'}) = 1" styleNumber="10" name="C11" x="-1.9" y="1.9">
      <constraints name="attractTo5">
        <attractTo>$BE11 $BE12 $BE21 $BE22 $BPa</attractTo>
      </constraints>
    </point>
    <point layer="3" hide="$(ansBifCurves{prop='creditAchieved'}) = 1" styleNumber="10" name="C12" x="-0.5" y="0.3">
      <copy tname="attractTo5" />
    </point>
    <point layer="3" hide="$(ansBifCurves{prop='creditAchieved'}) = 1" styleNumber="10" name="C13" x="1.9" y="0.2">
      <copy tname="attractTo5" />
    </point>
    <point layer="3" hide="$(ansBifCurves{prop='creditAchieved'}) = 1" styleNumber="10" name="C21" x="-1.9" y="-0.1">
      <copy tname="attractTo5" />
    </point>
    <point layer="3" hide="$(ansBifCurves{prop='creditAchieved'}) = 1" styleNumber="10" name="C22" x="-0.5" y="-1.7">
      <copy tname="attractTo5" />
    </point>
    <point layer="3" hide="$(ansBifCurves{prop='creditAchieved'}) = 1" styleNumber="10" name="C23" x="1.9" y="-1.9">
      <copy tname="attractTo5" />
    </point>

    <setup>
      <conditionalContent assignNames="(extrapFor1 extrapBack1)">
        <case condition="$(C11{prop='x'})*$par_effect_sign*$a_sign > $(C13{prop='x'})*$par_effect_sign*$a_sign">
          <boolean>true</boolean><boolean>false</boolean>
        </case>
        <else>
          <boolean>false</boolean><boolean>true</boolean>
        </else>
      </conditionalContent>
      <conditionalContent assignNames="(extrapFor2 extrapBack2)">
        <case condition="$(C21{prop='x'})*$par_effect_sign*$a_sign > $(C23{prop='x'})*$par_effect_sign*$a_sign">
          <boolean>true</boolean><boolean>false</boolean>
        </case>
        <else>
          <boolean>false</boolean><boolean>true</boolean>
        </else>
      </conditionalContent>
    </setup>

    <equilibriumCurve name="C1" fixed="$(ansBifCurves{prop='creditAchieved'}) = 1" styleNumber="9" switchable through="$C11 $C12 $C13" extrapolateForward="$extrapFor1" extrapolateBackward="$extrapBack1" layer="2">
      <conditionalContent condition="$C11=$BPa">
        <bezierControls>
          <controlVectors pointNumber="1" hide>
            <vector>(($(C11{prop='x'}) - $(C12{prop='x'}))/32, ($(C11{prop='y'}) - $(C12{prop='y'}))/4  )</vector>
          </controlVectors>
          <controlVectors pointNumber="3" hide>
            <vector>(($(C12{prop='x'}) - $(C13{prop='x'}))/2, ($(C12{prop='y'}) - $(C13{prop='y'}))/8  )</vector>
          </controlVectors>
        </bezierControls>
      </conditionalContent>
      <conditionalContent condition="$C13=$BPa">
        <bezierControls hide>
          <controlVectors pointNumber="3" hide>
            <vector>(($(C12{prop='x'}) - $(C13{prop='x'}))/32, ($(C12{prop='y'}) - $(C13{prop='y'}))/4  )</vector>
          </controlVectors>
          <controlVectors pointNumber="1" hide>
            <vector>(($(C11{prop='x'}) - $(C12{prop='x'}))/2, ($(C11{prop='y'}) - $(C12{prop='y'}))/8  )</vector>
          </controlVectors>
        </bezierControls>
      </conditionalContent>
    </equilibriumCurve>

    <equilibriumCurve name="C2" fixed="$(ansBifCurves{prop='creditAchieved'}) = 1" styleNumber="9" switchable through="$C21 $C22 $C23" extrapolateForward="$extrapFor2" extrapolateBackward="$extrapBack2" layer="2">
      <conditionalContent condition="$C21=$BPa">
        <bezierControls>
          <controlVectors pointNumber="1" hide>
            <vector>(($(C21{prop='x'}) - $(C22{prop='x'}))/32, ($(C21{prop='y'}) - $(C22{prop='y'}))/4  )</vector>
          </controlVectors>
          <controlVectors pointNumber="3" hide>
            <vector>(($(C22{prop='x'}) - $(C23{prop='x'}))/2, ($(C22{prop='y'}) - $(C23{prop='y'}))/8  )</vector>
          </controlVectors>
        </bezierControls>
      </conditionalContent>
      <conditionalContent condition="$C23=$BPa">
        <bezierControls hide>
          <controlVectors pointNumber="3" hide>
            <vector>(($(C22{prop='x'}) - $(C23{prop='x'}))/32, ($(C22{prop='y'}) - $(C23{prop='y'}))/4  )</vector>
          </controlVectors>
          <controlVectors pointNumber="1" hide>
            <vector>(($(C21{prop='x'}) - $(C22{prop='x'}))/2, ($(C21{prop='y'}) - $(C22{prop='y'}))/8  )</vector>
          </controlVectors>
        </bezierControls>
      </conditionalContent>
    </equilibriumCurve>

  </conditionalContent>


  <conditionalContent condition="$showLineEq">
    
    <conditionalContent>
      <case condition="$(ansLineEq{prop='creditAchieved'}) < 1">
        <equilibriumpoint name="LEa" styleNumber="9" x="-1.5" y="1.5" switchable>
          <constraints name="attractToLE">
            <attractTo thresholdRelativeToGraph threshold="0.03">
              <point>($parval1, $val1_zero3)</point>
              <point>($parval2, $val2_zero3)</point>
              <point>($parvalbif, $valbif_zero2)</point>
              <point>($parval3, $val3_zero)</point>
            </attractTo>
          </constraints>
        </equilibriumpoint>
        <equilibriumpoint name="LEb" styleNumber="9" x="1.5" y="1.5" switchable>
          <copy tname="attractToLE" />
        </equilibriumpoint>
        <equilibriumpoint name="LEc" styleNumber="9" x="-1.5" y="-1.5" switchable>
          <copy tname="attractToLE" />
        </equilibriumpoint>
        <equilibriumpoint name="LEd" styleNumber="9" x="1.5" y="-1.5" switchable>
          <copy tname="attractToLE" />
        </equilibriumpoint>
      </case>
      <else>
        <equilibriumPoint name="LE1" styleNumber="9" fixed stable="$line_stable" hide="$(ansLineCurve{prop='creditAchieved'}) = 1">
          ($parval1, $val1_zero3)
        </equilibriumPoint>
        <equilibriumPoint name="LE2" styleNumber="9" fixed stable="$line_stable" hide="$(ansLineCurve{prop='creditAchieved'}) = 1">
          ($parval2, $val2_zero3)
        </equilibriumPoint>
        <equilibriumPoint name="LEbif" styleNumber="9" fixed stable="$line_stable" hide="$(ansLineCurve{prop='creditAchieved'}) = 1">
          ($parvalbif, $valbif_zero2)
        </equilibriumPoint>
        <equilibriumPoint name="LE3" styleNumber="9" fixed stable="$line_stable" hide="$(ansLineCurve{prop='creditAchieved'}) = 1">
          ($parval3, $val3_zero)
        </equilibriumPoint>
      </else>
    </conditionalContent>

  </conditionalContent>


  <conditionalContent condition="$showLineCurve">
    <point layer="3" hide="$(ansLineCurve{prop='creditAchieved'}) = 1" styleNumber="10" name="CLE1" x="-1.9" y="1.9">
      <constraints name="attractToLE2">
        <attractTo>$LE1 $LE2 $LEbif $LE3</attractTo>
      </constraints>
    </point>
    <point layer="3" hide="$(ansLineCurve{prop='creditAchieved'}) = 1" styleNumber="10" name="CLE2" x="-1" y="0.2">
      <copy tname="attractToLE2" />
    </point>
    <point layer="3" hide="$(ansLineCurve{prop='creditAchieved'}) = 1" styleNumber="10" name="CLE3" x="0.5" y="-0.2">
      <copy tname="attractToLE2" />
    </point>
    <point layer="3" hide="$(ansLineCurve{prop='creditAchieved'}) = 1" styleNumber="10" name="CLE4" x="1.9" y="-1.9">
      <copy tname="attractToLE2" />
    </point>


    <equilibriumCurve name="CLE" fixed="$(ansLineCurve{prop='creditAchieved'}) = 1" styleNumber="9" switchable through="$CLE1 $CLE2 $CLE3 $CLE4" extrapolateForward extrapolateBackward layer="2" />
   
  </conditionalContent>


</graph>


<p>For <m>$par = $parval2</m>, there are two equilibria close to the equilibrium value (<m>$x = $b</m>) from the bifurcation.  There is a stable equilibrium at <m>$x =</m> 
  <answer>
    <award>
      <conditionalContent>
        <case condition="$upperStable">$val2_zero2</case>
        <else>$val2_zero1</else>
      </conditionalContent>
    </award>
    <conditionalContent condition="$line_stable">
      <award credit="0" name="extraEq21">$val2_zero3</award>
    </conditionalContent>
  </answer>
  and an unstable equilibrium at
  <answer>
    <award>
      <conditionalContent>
        <case condition="$upperStable">$val2_zero1</case>
        <else>$val2_zero2</else>
      </conditionalContent>
    </award>
    <conditionalContent condition="not $line_stable">
      <award credit="0" name="extraEq22">$val2_zero3</award>
    </conditionalContent>
  </answer>
  .</p>

<feedback condition="$extraEq21">
  It is true that there is a stable equilibrium at <m>$x = $val2_zero3</m> when <m>$par=$parval2</m>.  However, here we are looking for the equilibria that are closest to the bifurcation that occurred at <m>$x = $b</m>.
</feedback>
<feedback condition="$extraEq22">
  It is true that there is an unstable equilibrium at <m>$x = $val2_zero3</m> when <m>$par=$parval2</m>.  However, here we are looking for the equilibria that are closest to the bifurcation that occurred at <m>$x = $b</m>.
</feedback>


<p>For <m>$par = $parval1</m>, there are two equilibria a little further away from the equilibrium value (<m>$x = $b</m>) from the bifurcation.  There is a stable equilibrium at <m>$x =</m> 
<answer>
  <award>
    <conditionalContent>
      <case condition="$upperStable">$val1_zero2</case>
      <else>$val1_zero1</else>
    </conditionalContent>
  </award>
  <conditionalContent condition="$line_stable">
    <award credit="0" name="extraEq11">$val1_zero3</award>
  </conditionalContent>
</answer>
and an unstable equilibrium at
<answer>
  <award>
    <conditionalContent>
      <case condition="$upperStable">$val1_zero1</case>
      <else>$val1_zero2</else>
    </conditionalContent>
  </award>
  <conditionalContent condition="not $line_stable">
    <award credit="0" name="extraEq12">$val1_zero3</award>
  </conditionalContent>
</answer>
.</p>

<feedback condition="$extraEq11">
  It is true that there is a stable equilibrium at <m>$x = $val1_zero3</m> when <m>$par=$parval1</m>.  However, here we are looking for the equilibria that are closest to the bifurcation that occurred at <m>$x = $b</m>.
</feedback>
<feedback condition="$extraEq12">
  It is true that there is an unstable equilibrium at <m>$x = $val1_zero3</m> when <m>$par=$parval1</m>.  However, here we are looking for the equilibria that are closest to the bifurcation that occurred at <m>$x = $b</m>.
</feedback>

<!-- <setup>
  <conditionalContent assignNames="(stabilityCreditFourEs)">
    <case condition="$fourELocations"><number>0.5</number></case>
    <else><number>0</number></else>
  </conditionalContent>
</setup> -->


<p>Click 
<updateValue name="revealEqFromBif" label="Show points" type="boolean" tname="showEqFromBif" newValue="true" disabled="$showEqFromBif" /> and move the points to the locations of the above equilibria for <m>$par=$parval2</m> and <m>$par = $parval1</m>.  The horizontal coordinate should be the value of the parameter <m>$par</m> and the vertical coordinate should be the location of the equilibrium <m>$x</m>.  Click the points to toggle between a stable equilibrium (filled circle) and an unstable equilibrium (unfilled circle).
<answer name="ansEqFromBif" disableAfterCorrect matchPartial nAwardsCredited="2" disabled="not $showEqFromBif">
  <conditionalContent condition="$showEqFromBif">
    <award credit="0.5">
      <when name="fourELocations">
        <mathlist>$BEa $BEb $BEc $BEd</mathlist> = 
        <mathlist unordered>
          <math>($parval2, $val2_zero1)</math>
          <math>($parval2, $val2_zero2)</math>
          <math>($parval1, $val1_zero1)</math>
          <math>($parval1, $val1_zero2)</math>
        </mathlist>
      </when>
    </award>
    <conditionalContent condition="$fourELocations">
      <award credit="0.5">
        <when>
          <copy prop="stable" tname="BEa" />
          = 
          <boolean>
            ($upperStable and $(BEa{prop='y'}) > $b) or (not $upperStable and $(BEa{prop='y'}) < $b)
          </boolean>
          and
          <copy prop="stable" tname="BEb" />
          = 
          <boolean>
            ($upperStable and $(BEb{prop='y'}) > $b) or (not $upperStable and $(BEb{prop='y'}) < $b)
          </boolean>
          and
          <copy prop="stable" tname="BEc" />
          = 
          <boolean>
            ($upperStable and $(BEc{prop='y'}) > $b) or (not $upperStable and $(BEc{prop='y'}) < $b)
          </boolean>
          and
          <copy prop="stable" tname="BEd" />
          = 
          <boolean>
            ($upperStable and $(BEd{prop='y'}) > $b) or (not $upperStable and $(BEd{prop='y'}) < $b)
          </boolean>
        </when>
      </award>
    </conditionalContent>
  </conditionalContent>
</answer>
</p>
<feedback updateWithTname="ansEqFromBif" condition="not $fourELocations and $(ansEqFromBif{prop='creditAchieved'}) < 1">
  At least one of the equilibria is not in the correct location.
</feedback>
<feedback updateWithTname="ansEqFromBif" condition="$fourELocations and $(ansEqFromBif{prop='creditAchieved'}) < 1">
  The stability of at least one of the equilibria is incorrect.  (Click an equilibrium to toggle its stability.)
</feedback>


<p hide="$(ansEqFromBif{prop='creditAchieved'}) = 1 and $(ansBifPoint{prop='creditAchieved'}) = 1"><em>Correctly place the bifurcation point and the equilibria around the bifurcation point to continue.</em></p>


<p>Click 
<updateValue name="revealCurvesFromBif" label="Show curves" type="boolean" tname="showCurvesFromBif" newValue="true" disabled="$showCurvesFromBif or $(ansEqFromBif{prop='creditAchieved'}) < 1 or $(ansBifPoint{prop='creditAchieved'}) < 1" />
 to reveal two curves that you can use to fill in the locations of the equilibria near the bifurcation point for all the values of $par.  You can click the curves to change between stable equilibria (represented as a solid line) and unstable equilibria (represented as a dash line).
<answer matchPartial nAwardsCredited="2" name="ansBifCurves" disabled="not $showCurvesFromBif">
  <conditionalContent condition="$showCurvesFromBif">
    <award credit="0.6">
      <when>
        (
          <boolean name="C1lower">
            <boolean>$C11 = ($parvalbif, $b) and $C12 = ($parval2, $val2_zero1) and $C13 = ($parval1, $val1_zero1)</boolean>
            or
            <boolean>$C13 = ($parvalbif, $b) and $C12 = ($parval2, $val2_zero1) and $C11 = ($parval1, $val1_zero1)</boolean>
          </boolean>
          and 
          <boolean name="C2upper">
            <boolean>$C21 = ($parvalbif, $b) and $C22 = ($parval2, $val2_zero2) and $C23 = ($parval1, $val1_zero2)</boolean>
            or
            <boolean>$C23 = ($parvalbif, $b) and $C22 = ($parval2, $val2_zero2) and $C21 = ($parval1, $val1_zero2)</boolean>
          </boolean>
        )
        or
        (
          <boolean name="C1upper">
            <boolean>$C11 = ($parvalbif, $b) and $C12 = ($parval2, $val2_zero2) and $C13 = ($parval1, $val1_zero2)</boolean>
            or
            <boolean>$C13 = ($parvalbif, $b) and $C12 = ($parval2, $val2_zero2) and $C11 = ($parval1, $val1_zero2)</boolean>
          </boolean>
          and 
          <boolean name="C2lower">
            <boolean>$C21 = ($parvalbif, $b) and $C22 = ($parval2, $val2_zero1) and $C23 = ($parval1, $val1_zero1)</boolean>
            or
            <boolean>$C23 = ($parvalbif, $b) and $C22 = ($parval2, $val2_zero1) and $C21 = ($parval1, $val1_zero1)</boolean>
          </boolean>
        )
      </when>
    </award>
    <award credit="0.4">
      <when>
        <boolean>
        ($C1upper and (
          ($upperStable and <copy prop="stable" tname="C1" />)
          or 
          (not $upperStable and not <copy prop="stable" tname="C1" />)
        ))
        or
        ($C2upper and (
          ($upperStable and <copy prop="stable" tname="C2" />)
          or
          (not $upperStable and not <copy prop="stable" tname="C2" />)
        ))
        </boolean>
        and
        <boolean>
        ($C1lower and (
          ($upperStable and not <copy prop="stable" tname="C1" />)
          or
          (not $upperStable and <copy prop="stable" tname="C1" />)
        ))
        or
        ($C2lower and (
          ($upperStable and not <copy prop="stable" tname="C2" />)
          or
          (not $upperStable and <copy prop="stable" tname="C2" />)
        ))
        </boolean>
      </when>
    </award>
  </conditionalContent>
</answer>

</p>



<feedback updateWithTname="ansBifCurves" condition="not ($C1upper and $C2lower or $C1lower and $C2upper)">
  At least one curve is not connecting the correct equilibrium points in sequence.
</feedback>
<feedback updateWithTname="ansBifCurves" condition="($C1upper and $C2lower or $C1lower and $C2upper) and $(ansBifCurves{prop='creditAchieved'}) < 1">
  The stability of the curves is not correct.  You can click them to switch between a solid curve (representing stable equilibria) and a dashed curve (representing unstable equilibria).
</feedback>


<p>We have one more piece to add to the bifurcation diagram.  We have to account for the additional equilibrium that is present for all values of the parameter $par (and is not involved with a bifurcation).  When <m>$par = $parval1</m>, this equilibrium is at <m>$x = </m> <answer>$val1_zero3</answer>.  When <m>$par = $parval2</m>, this equilibrium is at <m>$x = </m> <answer>$val2_zero3</answer>.  When <m>$par = $parvalbif</m>, this equilibrium is at <m>$x = </m> <answer>$valbif_zero2</answer>.  Finally, when <m>$par = $parval3</m>, this equilibrium is the only one and is at <m>$x=</m> <answer>$val3_zero</answer>.  In all cases the equilibriumm is 
<answer>
  <choiceinput inline>
    <choice credit="$line_stable">stable</choice>
    <choice credit="not $line_stable">unstable</choice>
  </choiceinput>
</answer>.
</p>


<p>Click 
<updateValue name="revealLineEq" label="Show points" type="boolean" tname="showLineEq" newValue="true" disabled="$showLineEq" /> and move the points to the locations of the equilibria.  Click the points so to give them their proper stability.
<answer name="ansLineEq" disabled="not $showLineEq" disableAfterCorrect matchPartial nAwardsCredited="2">
  <conditionalContent condition="$showLineEq">
    <award credit="0.8" name="LEinLocation">
      <when>
        <mathlist>
          $LEa $LEb $LEc $LEd
        </mathlist>
        =
        <mathlist unordered>
          <math>($parval1, $val1_zero3)</math>
          <math>($parval2, $val2_zero3)</math>
          <math>($parvalbif, $valbif_zero2)</math>
          <math>($parval3, $val3_zero)</math>
        </mathlist>
      </when>
    </award>
    <award credit="0.2">
      <when>
        <copy prop="stable" tname="LEa" /> = $line_stable
        and
        <copy prop="stable" tname="LEb" /> = $line_stable
        and
        <copy prop="stable" tname="LEc" /> = $line_stable
        and
        <copy prop="stable" tname="LEd" /> = $line_stable
      </when>
    </award>
  </conditionalContent>
</answer>
</p>

<feedback updateWithTname="ansLineEq" condition="not $LEinLocation">
  At least one equilibrium is in the incorrect location.
</feedback>
<feedback updateWithTname="ansLineEq" condition="$LEinLocation and $(ansLineEq{prop='creditAchieved'}) < 1">
  At least one equilibrium has the incorrect stability.  (Click an equilibrium point to toggle between stable and unstable.)
</feedback>

<p hide="$(ansLineEq{prop='creditAchieved'}) = 1">
  <em>Correctly place all above equilibria to continue.</em>
</p>

<p>Click 
<updateValue name="revealLineCurve" label="Show curve" type="boolean" tname="showLineCurve" newValue="true" disabled="$showLineCurve or $(ansLineEq{prop='creditAchieved'}) < 1" />
 to reveal a curve that you can use to fill in the locations of the equilibria that aren't involved in the bifurcation.
 <answer name="ansLineCurve" nAwardsCredited="2" disabled="not $showLineCurve" disableAfterCorrect>
  <conditionalContent condition="$showLineCurve">
    <award credit="0.8" name="CLElocation">
      <when>
        <boolean>
          $CLE1 = $LE1 and $CLE2 = $LE2 and $CLE3 = $LEbif and $CLE4 = $LE3
        </boolean>
        or
        <boolean>
          $CLE1 = $LE3 and $CLE2 = $LEbif and $CLE3 = $LE2 and $CLE4 = $LE1
        </boolean>
      </when>
    </award>
    <award credit="0.2">
      <when>
        <copy prop="stable" tname="CLE" /> = $line_stable
      </when>
    </award>
  </conditionalContent>
 </answer>
</p>

<feedback updateWithTname="ansLineCurve" condition="not $CLElocation">
  The curve must connect the equilibria in seqeuence.
</feedback>
<feedback updateWithTname="ansLineCurve" condition="$CLElocation and $(ansLineCurve{prop='creditAchieved'}) < 1" >
  The stability of the curve is incorrect.  Click the curve to toggle its stability.
</feedback>


</li>


</ol>


<!-- <solution> -->


<ol>

<li>
There is a bifurcation point at <m>$par^*=$parvalbif </m>.
</li>

<li>
At the bifurcation point at <m>$par^*=$parvalbif </m>, the number of equilibria changes from
<conditionalcontent>
<case condition='$reorder'>
one to three
</case>
<else>
three to one
</else>
</conditionalcontent>
.   Therefore For <m>$par  \lt  $par ^*</m>, the number of equilibria = $num_equilibria_1  , and for <m>$par  \gt  $par ^*</m>, the number of equilibria = $num_equilibria_2  .

</li>

<li>
A bifurcation diagram is shown below, where stable equilibria are drawn with solid lines and unstable equilibria are drawn with dashed lines.  There is a bifurcation point at <m>$par =$parvalbif </m>, where the number of equilibria changes from
<conditionalcontent>
<case condition='$reorder'>
one to three
</case>
<else>
three to one
</else>
</conditionalcontent>
. 


<graph xmin='$parmin' xmax='$parmax' ymin="$xmin" ymax="$xmax" fixAxes grid xlabel="$par" ylabel="$x">

    
  <equilibriumPoint name="sBPa" styleNumber="9" fixed stable="false">
    ($parvalbif, $b)
  </equilibriumPoint>


    
  <equilibriumPoint name="sBE11" styleNumber="9" fixed stable="not $upperStable">
    ($parval1, $val1_zero1)
  </equilibriumPoint>
  <equilibriumPoint name="sBE12" styleNumber="9" fixed stable="$upperStable">
    ($parval1, $val1_zero2)
  </equilibriumPoint>
  <equilibriumPoint name="sBE21" styleNumber="9" fixed stable="not $upperStable">
    ($parval2, $val2_zero1)
  </equilibriumPoint>
  <equilibriumPoint name="sBE22" styleNumber="9" fixed stable="$upperStable">
    ($parval2, $val2_zero2)
  </equilibriumPoint>


  <equilibriumCurve name="sC1" fixed styleNumber="9" stable="not $upperStable" through="$sBPa $sBE21 $sBE11" extrapolateForward layer="2">
    <bezierControls>
      <controlVectors pointNumber="1" hide>
        <vector>(($(sBPa{prop='x'}) - $(sBE21{prop='x'}))/32, ($(sBPa{prop='y'}) - $(sBE21{prop='y'}))/4  )</vector>
      </controlVectors>
      <controlVectors pointNumber="3" hide>
        <vector>(($(sBE21{prop='x'}) - $(sBE11{prop='x'}))/2, ($(sBE21{prop='y'}) - $(sBE11{prop='y'}))/8  )</vector>
      </controlVectors>
    </bezierControls>
  </equilibriumCurve>

  <equilibriumCurve name="sC2" styleNumber="9" stable="$upperStable" through="$sBPa $sBE22 $sBE12" extrapolateForward layer="2">
    <bezierControls>
      <controlVectors pointNumber="1" hide>
        <vector>(($(sBPa{prop='x'}) - $(sBE22{prop='x'}))/32, ($(sBPa{prop='y'}) - $(sBE22{prop='y'}))/4  )</vector>
      </controlVectors>
      <controlVectors pointNumber="3" hide>
        <vector>(($(sBE22{prop='x'}) - $(sBE12{prop='x'}))/2, ($(sBE22{prop='y'}) - $(sBE12{prop='y'}))/8  )</vector>
      </controlVectors>
    </bezierControls>
  </equilibriumCurve>



    
  <equilibriumPoint name="sLE1" styleNumber="9" fixed stable="$line_stable">
    ($parval1, $val1_zero3)
  </equilibriumPoint>
  <equilibriumPoint name="sLE2" styleNumber="9" fixed stable="$line_stable">
    ($parval2, $val2_zero3)
  </equilibriumPoint>
  <equilibriumPoint name="sLEbif" styleNumber="9" fixed stable="$line_stable">
    ($parvalbif, $valbif_zero2)
  </equilibriumPoint>
  <equilibriumPoint name="sLE3" styleNumber="9" fixed stable="$line_stable">
    ($parval3, $val3_zero)
  </equilibriumPoint>


  <equilibriumCurve name="sCLE" fixed styleNumber="9" stable="$line_stable" through="$sLE1 $sLE2 $sLEbif $sLE3" extrapolateForward extrapolateBackward layer="2" />
   

</graph>


<p>For <m>$par = $parval2</m>, the stable equilibrium near the bifurcation is at <m>$x =
  <conditionalContent>
    <case condition="$upperStable">$val2_zero2</case>
    <else>$val2_zero1</else>
  </conditionalContent>
  </m>
  and the unstable equilibrium is at <m>$x =
  <conditionalContent>
    <case condition="$upperStable">$val2_zero1</case>
    <else>$val2_zero2</else>
  </conditionalContent>
  </m>.</p>



<p>For <m>$par = $parval1</m>, the stable equilibria near the bifurcation point is at <m>$x = 
  <conditionalContent>
    <case condition="$upperStable">$val1_zero2</case>
    <else>$val1_zero1</else>
  </conditionalContent>
  </m>
  and the unstable equilibrium is at <m>x =
  <conditionalContent>
    <case condition="$upperStable">$val1_zero1</case>
    <else>$val1_zero2</else>
  </conditionalContent>
  </m>.</p>

<p>For the additional equilibrium that is present for all values of the parameter $par (and is not involved with a bifurcation):  When <m>$par = $parval1</m>, this equilibrium is at <m>$x =  $val1_zero3</m>.  When <m>$par = $parval2</m>, this equilibrium is at <m>$x =  $val2_zero3</m>.  When <m>$par = $parvalbif</m>, this equilibrium is at <m>$x =  $valbif_zero2</m>.  Finally, when <m>$par = $parval3</m>, this equilibrium is the only one and is at <m>$x= $val3_zero</m>.  In all cases the equilibriumm is 
<conditionalContent>
  <case condition="$line_stable">stable</case>
  <else>unstable</else>
</conditionalContent>.
</p>

</li>


</ol>


<!-- </solution> -->


</problem>