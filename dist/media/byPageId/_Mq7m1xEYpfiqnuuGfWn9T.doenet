<problem>
<!-- <title>extrema of pollution spill, alpha function and similar</title> -->

<setup>

<select assignNames='x' >t</select>
<selectFromSequence assignNames='a_base' from='1' to=' 5' />
<select assignNames="a">$a_base 1/$a_base</select>
<selectFromSequence assignNames='b' from='1' to=' 10' />
<selectFromSequence assignNames='n_sub dint1 dint2' from='1' to=' 3' numberToSelect="3" withReplacement />


<selectFromSequence assignNames='n_odd' from='0' to=' 1' />
<number name='n'>$n_sub *2-$n_odd </number>

<function name='fun' variables='$x'><math simplify="numbersPreserveOrder">$b *$x ^$n *e^(<math simplify>-$a *$x</math>)</math></function>
<conditionalContent assignNames="(fun_prime_poly_F)">
  <case condition="$n=1">
    <math simplify="numbers">$b <math simplify>1 -$a *$x</math></math>
  </case>
  <else>
    <math simplify="numbers">$b <math simplify>$n *$x^($n -1)-$a *$x^$n</math></math>
  </else>
</conditionalContent>
<function name='fun_prime_poly' variables='$x' symbolic>$fun_prime_poly_F</function>
<function name='fun_prime' variables='$x'><math>$$fun_prime_poly($x )*e^(<math simplify>-$a *$x</math>)</math></function>

<number name="cp1">0</number>
<number name="fun_cp1">0</number>
<number name="cp2">$n/$a</number>
<evaluate name="fun_cp2" function="$fun" input='$cp2' forceNumeric displayDigits="5" />


</setup>


<p>After a nearby chemical spill, the pollution level of a bay is monitored.  The pollution level <m>t</m> weeks after the spill is given <m>p(t)=<copy prop="formula" tname="fun" /></m>.</p>

<p>For how long after the spill does the pollution level in the bay continue to rise? What is the maximum pollution level?</p>

<p>The pollution level continues to rise for 
<answer>
<award>$cp2 </award>
</answer>
 weeks.</p>

<p>The maximum pollution level is 
<answer>
<award allowedErrorInNumbers='0.001'>$fun_cp2 </award>
</answer>
.  (If rounding, keep at least four digits.) </p>


<solution>
<setup>
  <math simplify name='fun_prime_poly_factor2'>$n -$a *$x</math>
  <number name='auxpoint3'>ceil($cp2 +1)</number>
  <number name='auxpoint2a'>($cp1 +$cp2 )/2</number>
  <number name='auxpoint2b'>floor($auxpoint2a )</number>
  <number name='auxpoint2c'>ceil($auxpoint2a )</number>
  <conditionalContent assignNames="(auxpoint2)">
    <case condition="$auxpoint2b > $cp1">$auxpoint2b</case>
    <case condition="$auxpoint2c < $cp2">$auxpoint2c</case>
    <else>$auxpoint2a</else>
  </conditionalContent>

  <evaluate function="$fun_prime" input="$auxpoint2" name="fun_prime_a2" />
  <evaluate function="$fun_prime" input="$auxpoint3" name="fun_prime_a3" />

  <number name='n_minus_one' >$n -1</number>

</setup>


<p>The wording of the problem indicates the pollution level might rise and then decay.  We'll look for a local maximum, but only looking at positive values of <m>t</m>.</p>

<p>First, we find the critical points.  The derivative is
<me>p'(t) = <copy prop="formula" tname="fun_prime" />.</me>
<m>p'(t)</m> always exists, so the critical points are where <m>p'(t)=0</m>.</p>

<p>To solve <me><copy prop="formula" tname="fun_prime" />=0,</me>
we observe that the exponential can never be zero.  The only way for the <m>p'(t)</m> to be zero is if
<me><copy prop="formula" tname="fun_prime_poly" />=0.</me>

<conditionalcontent>
<case condition='$n=1'>
The one critical point is <m>t = $cp2 </m>.

</case>
<else>
Factoring out a <math simplify="numbers">t^($n-1)</math>, the condition is
<me><math simplify="numbers">$b t^($n-1)</math>\left($fun_prime_poly_factor2\right).</me>
Either <m>t=0</m> or <m>$fun_prime_poly_factor2=0</m>.  The critical points are <m>$cp1 </m> and <m>$cp2 </m>.

</else>
</conditionalcontent>

</p>

<p>Since we care only about positive times, we need to check the sign of <m>p'(t)</m> on the intervals <m>(0, $cp2 )</m> and <m>($cp2 ,\infty)</m>.</p>

<p>To test the sign of <m>p'(t)</m> in the interval <m>(0,$cp2 )</m>, we could pick the point <m>t=$auxpoint2 </m>.  <m>p'($auxpoint2 ) = $fun_prime_a2  
<conditionalcontent>
<case condition='$fun_prime_a2 > 0'>
\gt 
</case>
<else>
\lt 
</else>
</conditionalcontent>
 0</m>.  <m>p(t)</m> is 
<conditionalcontent>
<case condition='$fun_prime_a2 > 0'>
increasing
</case>
<else>
decreasing
</else>
</conditionalcontent>
 on the interval <m>(0,$cp2 )</m>.</p>

<p>To test the sign of <m>p'(t)</m> in the interval <m>($cp2 ,\infty)</m>, we could pick the point <m>t=$auxpoint3 </m>.  <m>p'($auxpoint3 ) = $fun_prime_a3  
<conditionalcontent>
<case condition='$fun_prime_a3 > 0'>
\gt 
</case>
<else>
\lt 
</else>
</conditionalcontent>
 0</m>.  <m>p'(t)</m> is 
<conditionalcontent>
<case condition='$fun_prime_a3 > 0'>
increasing
</case>
<else>
decreasing
</else>
</conditionalcontent>
 on the interval <m>($cp2 ,\infty)</m>.</p>

<p>(Since the exponential is always positive, you can take a shortcut on all the above answers and just calculate the sign of the polynomial <m><copy prop="formula" tname="fun_prime_poly" /></m> at each auxiliary point.)</p>

<p>Since <m>p(t)</m> is increasing on the interval <m>(0,$cp2 )</m> and <m>p(t)</m> is decreasing on the interval <m>($cp2 ,\infty)</m>, the local maximum does occur at <m>t=$cp2 </m>.  In fact, it is the maximum for all positive time <m>t</m>, since <m>p(t)</m> continues to decrease for all later times.</p>

<p>The maximum pollution level is <m>p($cp2 ) \approx $fun_cp2</m>.</p>


</solution>


</problem>