<title>Function iteration applet</title>

<p>The below applet shows the result of repeated applying a function <m>f($varName)</m> to the starting value <m>$(varName)_0</m>.</p>

<p>Enter the desired function and starting value.  Clicking the iterate button will calculate <m>$(varName)_1 = f($(varName)_0)</m>, then <m>$(varName)_2 = f($(varName)_1)</m>, and so on.</p>

<setup>
  <number name="nIterations">0</number>
  <function variables="$varName" name="f">$fformula</function>
  <number name="zeroFixed" fixed>0</number>
  <functionIterates initialValue="$initialValue" function="$f" nIterates="$nIterations" name="fIterates" />
  <copy prop="iterates" tname="fIterates" name="allIterates" displayDigits="4" />
  <map name="iterateVertices">
    <template><point draggable="false" styleNumber="2">($i, $v)</point></template>
    <sources alias="v" indexAlias="i">$allIterates</sources>
  </map>
  <copy prop="finalIterate" tname="fIterates" assignNames="finalValue" displayDigits="4" />
</setup>

<sideBySide>
  <stack>
    <p><m>f($varName) =</m> <mathinput name="fformula" prefill="0.8x" /> <m>$(varName)_0 = </m> <mathinput name="initialValue" prefill="5" displayDigits="4" /></p>
    
    <updateValue label="iterate" tName="nIterations" newValue="$nIterations+1" />
    <updateValue label="reset" tName="nIterations" newValue="0" />
    
    <graph xmin="-0.1$tmax" xmax="$tmax" ymin="$xmin" ymax="$xmax" xlabel="n" ylabel="$varName" >
      <linesegment endpoints="(0,$xmin) (0, $xmax)" fixed name="stateLine" />
    
      <point label="$(varName)_0" name="x0">($zeroFixed, $initialValue)</point>
      <polyline draggable="false" vertices="(0, $initialValue) $iterateVertices" styleNumber="2"/>
      $iterateVertices
      <point draggable="false" styleNumber="3" name="xn" label='$(varName)_{$nIterations} = $finalValue' hide="$nIterations = 0">($zeroFixed, $finalValue)</point>
      <lineSegment endpoints="$xn ($nIterations, $finalValue)" hide="$nIterations=0" styleNumber="3" draggable="false" name="linkLine" />
    </graph>
  </stack>

  <stack>
    <tabular halign="right">
      <row header><cell>Iterate values</cell></row>
      <row><cell>
        <md>
          <mrow>$(varName)_0 \amp = $initialValue</mrow>
      <map>
        <template><mrow>$(varName)_{$i} \amp = $v</mrow></template>
        <sources alias="v" indexAlias="i">$allIterates</sources>
      </map>
        </md>
      </cell>
      </row>
    </tabular>
  </stack>
</sideBySide>

<aside><title>Additional controls</title>

<p>Variable name: <mathinput name="varName" prefill = "x" /></p>
<p><m>$(varName)_{min}</m>: <mathinput name="xmin" prefill="-10" /></p>
<p><m>$(varName)_{max}</m>: <mathinput name="xmax" prefill="10" /></p>
<p><m>t_{max}</m>: <mathinput name="tmax" prefill="20" /></p>

</aside> 


<p>
  Each time you click the iterate button, the function <m>f($varName)</m> is iterated by apply <m>f</m> to the previous value, using the recursion <m>$(varName)_n = f($(varName)_{n-1})</m>.  The new iterate <m>$(varName)_n</m> appears in the list at the right, and the new point <m>(n, $(varName)_n)</m> appears on the graph at the left.
</p>

<p>The values of <m>$varName</m> live on the vertical axis shown by the <copy prop="styleDescription" tname="stateLine" /> line.  You can change the starting point <m>$(varName)_0</m> by dragging the <copy prop="styleDescription" tname="x0" /> point or by typing a value in the box.</p>

<p>To help you remember that all the action is really happening along the <copy prop="styleDescription" tname="stateLine" /> vertical axis, we map the last iterate back to the vertical axis, shown by the <copy prop="styleDescriptionWithNoun" tname="xn" />.  (The horizontal <copy prop="styleDescription" tname="linkLine" /> line is there just to help you link it to the point to the right.)</p>