<problem>
<!-- <title>extrema of alpha function and similar</title> -->

<setup>

<selectFromSequence assignNames='a_base' from='1' to=' 5' />
<select assignNames="a">$a_base 1/$a_base</select>
<selectFromSequence assignNames='n_sub dint1 dint2' from='1' to=' 3' numberToSelect="3" withReplacement />
<selectFromSequence assignNames='b' from='-10' to=' 10' exclude="0" />


<selectFromSequence assignNames='n_odd' from='0' to=' 1' />
<number name='n'>$n_sub *2-$n_odd </number>

<function name='fun' variables='x'><math><math simplify="numbers">$b *x^$n</math> *e^(<math simplify>-$a*x</math>)</math></function>
<conditionalContent assignNames="(fun_prime_poly_F)">
  <case condition="$n=1">
    <math simplify>$b -$a *$b *x</math>
  </case>
  <else>
    <math simplify>$b *$n *x^($n -1)-$a *$b *x^$n</math>
  </else>
</conditionalContent>
<function name='fun_prime_poly' variables='x' symbolic>$fun_prime_poly_F</function>
<function name='fun_prime' variables='x'><math>$$fun_prime_poly(x)*e^(<math simplify>-$a *x</math>)</math></function>

<number name="cp2">$n/$a</number>
<conditionalContent assignNames="(cp1_characterization cp2_characterization)">
  <case condition="$b>0"><text>minimum</text><text>maximum</text></case>
  <else><text>maximum</text><text>minimum</text></else>
</conditionalContent>

<evaluate name="fun_cp2" function="$fun" input='$cp2' forceNumeric displayDigits="4" />

<conditionalContent maximumNumberToShow="1" assignNames="(nCps cp1 fun_cp1 critical_points extrema_locations extrema_values extrema_characterizations)">
  <case condition="$n=1">
    <number>1</number> $cp2 $fun_cp2 $cp2 $cp2 $fun_cp2 $cp2_characterization
  </case>
  <case condition="$n_odd=1">
    <number>2</number> <number>0</number> <number>0</number> <math>$cp1,$cp2</math> $cp2 $fun_cp2 $cp2_characterization
  </case>
  <else>
    <number>2</number> <number>0</number> <number>0</number> <math>$cp1,$cp2</math> <math>$cp1,$cp2</math> <math>$fun_cp1, $fun_cp2</math> <textlist>$cp1_characterization $cp2_characterization</textlist>
  </else>
</conditionalContent>


<number name='I1'>$dint1 *$cp2 /4</number>
<number name='I2'>ceil($cp2 *(1+$dint2 /4))</number>
<evaluate name="fun_I1" function="$fun" input='$I1' forceNumeric displayDigits="4" />
<evaluate name="fun_I2" function="$fun" input='$I2' forceNumeric displayDigits="4" />


<max name='global_maximum_numeric' forceNumeric>$fun_I1$fun_I2$fun_cp2</max>

<conditionalContent assignNames="(global_maximum global_maximum_location)">
  <case condition="$fun_I1=$global_maximum_numeric">$fun_I1$I1</case>
  <case condition="$fun_I2=$global_maximum_numeric">$fun_I2$I2</case>
  <case condition="$fun_cp2=$global_maximum_numeric">$fun_cp2$cp2</case>
</conditionalContent>

<min name='global_minimum_numeric' forceNumeric>$fun_I1$fun_I2$fun_cp2</min>
<conditionalContent assignNames="(global_minimum global_minimum_location)">
  <case condition="$fun_I1=$global_minimum_numeric">$fun_I1$I1</case>
  <case condition="$fun_I2=$global_minimum_numeric">$fun_I2$I2</case>
  <case condition="$fun_cp2=$global_minimum_numeric">$fun_cp2$cp2</case>
</conditionalContent>


</setup>


Let <m>f(x) =<copy prop="formula" tname="fun" /></m>.



<ol>

<li>
<p>Calculate <m>f'(x)</m>.</p>

<p><m>f'(x) =</m> 
<answer>
<award>$fun_prime </award>
</answer>
</p>



</li>

<li>
<p>Find the critical points of <m>f</m>. </p>

<p>Critical points = 
<answer>
<award matchPartial='true' unorderedCompare>$critical_points </award>
</answer>
  (If there are multiple answers, separate by commas; do not round.)</p>


</li>

<li>
<p>Find the local extrema of <m>f</m>.  (Extrema just means either a maximum or a minimum.)  For each extremum calculate three things: the location of the extremum (i.e., value of <m>x</m>), the value of the extremum (i.e., value of <m>f(x)</m>), and whether it is a local maximum or a local minimum.</p>

<p>Locations of the local extrema: 
<answer>
<award matchPartial='true'>$extrema_locations </award>
<award credit='0.8' name='award6' matchPartial unorderedCompare>$extrema_locations </award>
</answer>
 (If multiple answers, enter in increasing order, separated by commas; if no answers, enter <alert>none</alert>.)</p>
<feedback condition="$award6">Entering in increasing order</feedback>

<p>Values of the local extrema: 
<answer>
<award matchPartial allowedErrorInNumbers='0.001'>$extrema_values </award>
<award credit='0.8' name='award7' matchPartial unorderedCompare allowedErrorInNumbers='0.001'>$extrema_values </award>
</answer>
 (If multiple answers, enter in the same order as above, separated by commas; if no answers, enter <alert>none</alert>.  If rounding, keep at least four digits.)</p>
<feedback condition="$award7">Entering in the same order as the extrema locations.</feedback>

<p>For each extremum, enter either <alert>maximum</alert> or <alert>minimum</alert> to indicate if the extremum is a local maximum or local minimum, respectively.  (If multiple answers, enter in the same order as above, separated by commas; if no answers, enter <alert>none</alert>.)</p>

<p>Characterization of extrema= 
<answer type="text">
  <textinput name="tiExt" size="15" />
<award>
  <when><split splitBy="comma">$tiExt</split> = $extrema_characterizations</when>
</award>
</answer>
</p>


<hint>
For example, imagine that there were local extrema at <m>x=-4</m>, <m>x=-1</m>, and <m>x=3</m>.  Imagine moreover, that <m>f(-4)=0</m>, <m>f(-1)=-3</m>, and <m>f(3)=4</m>, and that these extrema were a local maximum, a local minimum, and a local maximum, respectively.  Then, the correct answer would be to enter <c>-4,-1, 3</c> in the locations blank, enter <c>0, -3, 4</c> in the values blank, and <c>maximum, minimum, maximum</c> in the characterization blank.
</hint>

</li>

<li>
<p>Find the global maximum and global minimum of the function <m>f(x)</m> on the interval <m>$I1  \le x \le $I2 </m>.  Also indicate the location (the value of <m>x</m>) of the global maximum and global minimum.</p>

<p>Global maximum: 
<answer>
<award allowedErrorInNumbers='0.001'>$global_maximum </award>
</answer>
 (If rounding, keep at least four digits.)</p>

<p>Location of global maximum: <m>x =</m> 
<answer>
<award>$global_maximum_location </award>
</answer>
</p>

<p>Global minimum: 
<answer>
<award allowedErrorInNumbers='0.001'>$global_minimum </award>
</answer>
 (If rounding, keep at least four digits.)</p>

<p>Location of global minimum: <m>x=</m> 
<answer>
<award>$global_minimum_location </award>
</answer>
</p>



</li>


</ol>


<solution>

<setup>
  <math simplify="numbers" name='fun_prime_poly_factor2'>$b *$n -$a *$b *x</math>
  <number name='auxpoint1'>floor($cp1 -1)</number>
  <number name='auxpoint3'>ceil($cp2 +1)</number>
  <number name='auxpoint2a'>($cp1 +$cp2 )/2</number>
  <number name='auxpoint2b'>floor($auxpoint2a )</number>
  <number name='auxpoint2c'>ceil($auxpoint2a )</number>
  <conditionalContent assignNames="(auxpoint2)">
    <case condition="$auxpoint2b > $cp1">$auxpoint2b</case>
    <case condition="$auxpoint2c < $cp2">$auxpoint2c</case>
    <else>$auxpoint2a</else>
  </conditionalContent>

  <evaluate function="$fun_prime" input="$auxpoint1" name="fun_prime_a1" />
  <evaluate function="$fun_prime" input="$auxpoint2" name="fun_prime_a2" />
  <evaluate function="$fun_prime" input="$auxpoint3" name="fun_prime_a3" />


</setup>

<ol>

<li>
<m>f'(x) = <copy prop="formula" tname="fun_prime" /></m>

</li>

<li>
<p>The derivative always exists, so the critical points are where <m>f'(x)=0</m>.</p>

<p>To solve <me><copy prop="formula" tname="fun_prime" />=0,</me>
we observe that the exponential can never be zero.  The only way for the <m>f'(x)</m> to be zero is if
<me><copy prop="formula" tname="fun_prime_poly" />=0.</me>

<conditionalcontent>
<case condition='$n = 1'>
  The one critical point is <m>x = $cp1 </m>.
</case>
<else>
  Factoring out a <m><math simplify="numbers">x^($n-1)</math></m>, the condition is
  <me><math simplify="numbers">x^($n-1)</math>\left($fun_prime_poly_factor2 \right).</me>
  Either <m>x=0</m> or <m>$fun_prime_poly_factor2 =0</m>.  The critical points are <m>$cp1 </m> and <m>$cp2 </m>.
</else>
</conditionalcontent>

</p>

</li>

<li>
<p>
<conditionalcontent>
<case condition='$n = 1'>
  The candidate for the local extrema is the critical point <m>x=$cp1 </m>. 
</case>
<else>
  The candidates for the local extrema are the critical points <m>x=$cp1 </m> and <m>x=$cp2 </m>. 
</else>
</conditionalcontent>

To determine if the critical points are local extrema, we check to see if <m>f</m> switches from increasing to decreasing or vice versa at the critical point.</p>

<p>Since <m>f'(x)</m> cannot change sign away from the critical points, i.e., in the intervals <m>(-\infty, $cp1 )</m>
<conditionalcontent>
<case condition='$n != 1'>
  , <m>($cp1 ,$cp2 )</m>,
</case>
</conditionalcontent>
or <m>($cp2 ,\infty)</m>, we check the sign of <m>f'(x)</m> in each of those intervals.</p>

<p>To test the sign of <m>f'(x)</m> in the interval <m>(-\infty,$cp1 )</m>, we could pick the point <m>x=$auxpoint1 </m>.  <m>f'($auxpoint1 ) = $fun_prime_a1  
<conditionalcontent>
<case condition='$fun_prime_a1 > 0'>
  \gt 
</case>
<else>
  \lt 
</else>
</conditionalcontent>
 0</m>.  <m>f(x)</m> is 
<conditionalcontent>
<case condition='$fun_prime_a1 > 0'>
  increasing
</case>
<else>
  decreasing
</else>
</conditionalcontent>
on the interval <m>(-\infty,$cp1 )</m>.</p>


<conditionalcontent>
<case condition='$n != 1'>

  <p>To test the sign of <m>f'(x)</m> in the interval <m>($cp1 ,$cp2 )</m>, we could pick the point <m>x=$auxpoint2 </m>.  <m>f'($auxpoint2 ) = $fun_prime_a2  
  <conditionalcontent>
  <case condition='$fun_prime_a2 > 0'>
    \gt 
  </case>
  <else>
    \lt 
  </else>
  </conditionalcontent>
  0</m>.  <m>f(x)</m> is 
  <conditionalcontent>
  <case condition='$fun_prime_a2 > 0'>
    increasing
  </case>
  <else>
    decreasing
  </else>
  </conditionalcontent>
  on the interval <m>($cp1 ,$cp2 )</m>.</p>

</case>
</conditionalContent>

<p>To test the sign of <m>f'(x)</m> in the interval <m>($cp2 ,\infty)</m>, we could pick the point <m>x=$auxpoint3 </m>.  <m>f'($auxpoint3 ) = $fun_prime_a3  
<conditionalcontent>
<case condition='$fun_prime_a3 > 0'>
  \gt 
</case>
<else>
  \lt 
</else>
</conditionalcontent>
0</m>.  <m>f(x)</m> is 
<conditionalcontent>
<case condition='$fun_prime_a3 > 0'>
  increasing
</case>
<else>
  decreasing
</else>
</conditionalcontent>
on the interval <m>($cp2 ,\infty)</m>.</p>

<p>(Since the exponential is always positive, you can take a shortcut on all the above answers and just calculate the sign of the polynomial <m><copy prop="formula" tname="fun_prime_poly" /></m> at each auxiliary point.)</p>


<conditionalcontent>
<case condition='$n = 1'>

  <p>Since <m>f(x)</m> is 
  <conditionalcontent>
  <case condition='$fun_prime_a2 > 0'>
    increasing
  </case>
  <else>
    decreasing
  </else>
  </conditionalcontent>
  on the interval <m>(-\infty,$cp2 )</m> and <m>f(x)</m> is 
  <conditionalcontent>
  <case condition='$fun_prime_a3 > 0'>
    increasing
  </case>
  <else>
    decreasing
  </else>
  </conditionalcontent>
  on the interval <m>($cp2 ,\infty)</m>, the sign of <m>f'(x)</m> does indeed change at the critical point <m>x=$cp2 .</m>  <m>f</m> has a local $cp2_characterization  at the point <m>x=$cp2 </m>.  The value of the $cp2_characterization  is <m>f($cp2 ) \approx $fun_cp2</m>.</p>

</case>
<else>

  <p>Since <m>f(x)</m> is 
  <conditionalcontent>
  <case condition='$fun_prime_a1 > 0'>
    increasing
  </case>
  <else>
    decreasing
  </else>
  </conditionalcontent>
  on the interval <m>(-\infty,$cp1 )</m> and <m>f(x)</m> is 
  <conditionalcontent>
  <case condition='$fun_prime_a2 > 0'>
    increasing
  </case>
  <else>
    decreasing
  </else>
  </conditionalcontent>
  on the interval <m>($cp1 ,$cp2 )</m>, the sign of <m>f'(x)</m> does 
  <conditionalcontent>
  <case condition='$n_odd=1'>
    not
  </case>
  <else>
    indeed
  </else>
  </conditionalcontent>
  change at the critical point <m>x=$cp1 .</m>  
  <conditionalcontent>
  <case condition='$n_odd=1'>
    <m>f</m> does not have a local extremum at the point <m>x=$cp1 </m>.
  </case>
  <else>
    <m>f</m> has a local $cp1_characterization  at the point <m>x=$cp1 </m>.  The value of the $cp1_characterization  is <m>f($cp1 ) \approx $fun_cp1</m>.
  </else>
  </conditionalcontent>
  </p>

  <p>Since <m>f(x)</m> is 
  <conditionalcontent>
  <case condition='$fun_prime_a2 > 0'>
    increasing
  </case>
  <else>
    decreasing
  </else>
  </conditionalcontent>
  on the interval <m>($cp1 ,$cp2 )</m> and <m>f(x)</m> is 
  <conditionalcontent>
  <case condition='$fun_prime_a3 > 0'>
    increasing
  </case>
  <else>
    decreasing
  </else>
  </conditionalcontent>
  on the interval <m>($cp2 ,\infty)</m>, the sign of <m>f'(x)</m> does indeed change at the critical point <m>x=$cp2 .</m>  <m>f</m> has a local $cp2_characterization  at the point <m>x=$cp2 </m>.  The value of the $cp2_characterization  is <m>f($cp2 ) \approx $fun_cp2</m>.</p>

</else>
</conditionalcontent>


<p>In summary, the locations of the extrema are: 
<conditionalcontent>
<case condition='$n_odd=0'>
  <m>$cp1 </m> ,
</case>
</conditionalcontent>
<m>$cp2 </m>.  The values of the extrema are: 
<conditionalcontent>
<case condition='$n_odd=0'>
  <m>$fun_cp1 </m>, 
</case>
</conditionalcontent>
<m>$fun_cp2 </m>.  The characterization of the extrema are: 
<conditionalcontent>
<case condition='$n_odd=0'>
  $cp1_characterization, 
</case>
</conditionalcontent>
$cp2_characterization.</p>
</li>

<li>
<p>The global extrema must occur at a critical point within the interval or an endpoint of the interval.  Since one critical point is in the interval, the possibilities for global extremum locations are <m>x=$I1 </m>, <m>x=$cp2 </m>, and <m>x=$I2 </m>.  We plug those values into <m>f</m> to determine which location gives the largest and smallest value.</p>
<md>
  <mrow>f\left($I1 \right)\amp \approx $fun_I1</mrow>
  <mrow>f\left($cp2 \right)\amp \approx $fun_cp2</mrow>
  <mrow>f\left($I2 \right)\amp \approx $fun_I2</mrow>
</md>

<p>The global maximum occurs when <m>x= $global_maximum_location </m>, and the global maximum is <m>f($global_maximum_location ) \approx $global_maximum</m>.</p>

<p>The global minimum occurs when <m>x= $global_minimum_location </m>, and the global minimum is <m>f($global_minimum_location ) \approx $global_minimum</m>.</p>

</li>


</ol>

</solution>


</problem>