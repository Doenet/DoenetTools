<module>
  <setup>
    <selectFromSequence numberToSelect="5" from="15" to="50" assignNames="a1 a2 a3 a4 a5" />
    <selectFromSequence numberToSelect="5" from="3" to="7" assignNames="n1 n2 n3 n4 n5" />
  </setup>
  <p>
    It turns out to be incredibly useful in practice to perform operations using just [equivalence classes of] integers that leave the same remainder when divided by a fixed number <m>n</m>.
  </p>
  <p>
    <alert>Definition 2:</alert>
    Let <m>n\in \mathbb N</m>. Then two integers <m>a</m> and <m>b</m> are said to be <em>congruent modulo <m>n</m></em> if <m>a=q\cdot n +r</m> and <m>b=q'\cdot n + r'</m> with <m>0\leq r,r'<n</m> implies that <m>r=r'</m>. That is, if they leave the same remainder when applying the division algorithm.
  </p>
  <p>
    <alert>Remark:</alert> In class, we will prove an equivalent definition that may be more useful in <em>proving</em> properties of congruence, but this definition is natural and will suffice for now.
  </p>
  <aside>
    <title>A first example</title>
    <p>
      Applications do not only apply to cryptography (although we will use congruences extensively for the rest of the semester), they often arise naturally in physics (when you want to compute many transitions but only care about the final state of a particle, for instance). A simple example would be taking a binary light switch. I can flip the light switch 409 times, but if I only care what the final state is, I only need to know that the starting state and that the number of transitions was an odd number. In the language of congruences, I only care that
      <me> 409 \equiv 1 \mod 2,</me>
      (read 409 is congruent to 1 modulus 2)
      which tells me that if I flip the switch 409 times (or any other number leaving remainder 1 when divided by 2), then I will be in the opposite state from where I started at the end.
    </p>
    <p>
      In fact, you often encounter situations where all you care about is congruence, which I will ask you to elaborate on in the short answer questions at the end of the Guided Practice.
    </p>
  </aside>
  <p>
    Another important concept when discussing congruences is that of a <em>transversal</em> or sometimes called a <em>cross-section</em>.
  </p>
  <p>
    <alert>Definition 3:</alert>
    When computing congruences, we often represent them as the remainder after division as above. That is, if computing congruences <m>\mod n</m>, then we use the numbers
    <me>\{0,1,2,3,\dots,n-2,n-1\}.</me>
    This is the <em>standard transversal</em> modulo <m>n</m>. We will use this for now, but we will use a different transversal shortly for computations to get used to the idea that how we represent them is less important than that we <em>fix</em> a set that represents every possible remainder exactly once.
  </p>

  <p>
    <alert>Practice Problems:</alert>
    <aside>
      <title>Instructions</title>
      Compute each congruence using the standard transversals <m>\{0,1,2,\dots,n-1\}</m>.
      With the <em>standard set of transversals</em> you can intuitively think of these (for example in the first problem) as what is the remainder when "$a1 is divided by $n1". This is how the mod operator is implemented in many programming languages, as well, and is the most common use of it.
    </aside>
  </p>
  <p>
    <alert>Problem 1:</alert>
    <module name="ModProblems">
      <setup>
        <customAttribute componentType="math"
        attribute="num"
        assignNames="num"
        defaultValue="$a1"  />
        <customAttribute componentType="math"
        attribute="mod"
        assignNames="mod"
        defaultValue="$n1"  />
      </setup>
      <m>\quad $num \equiv</m>
      <mathInput name="m" />
      <m>\mod $mod</m>.
      <answer>
        <award targetsAreResponses="m">
          <when symbolicEquality><math simplify>mod($num,$mod)</math>=$m</when>
        </award>
      </answer>
    </module>
  </p>
  <p>
    <alert>Problem 2:</alert>
    <copy tname="ModProblems" num="$a2" mod="$n2" />
  </p>
  <p>
    <alert>Problem 3:</alert>
    <copy tname="ModProblems" num="$a3" mod="$n3" />
  </p>
  <p>
    <alert>Problem 4:</alert>
    <copy tname="ModProblems" num="$a4" mod="$n4" />
  </p>
  <p>
    <alert>Problem 5:</alert>
    <copy tname="ModProblems" num="$a5" mod="$n5" />
  </p>
  <p>
    <alert>Follow-up Question:</alert>
    What are three different occurences you can think of where modular arithmetic naturally arises in your life? (There is one incredibly obvious one, but many more with a little thought!) Write them down, you'll be asked to enter them on the Google form at the end!
  </p>
</module>