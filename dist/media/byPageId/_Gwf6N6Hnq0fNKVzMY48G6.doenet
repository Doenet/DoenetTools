
<ref createButton="true" uri="doenet:doenetId=DG5JOeFNTc5rpWuf2uA-q">Back to Component Index</ref>

<document><title><tage>mathInput</tage> component</title>

<section><title>Associated Attributes</title>
<ul>
  <li><attr>prefill</attr>  <em>(math)</em></li>
  <li><attr>format</attr>  <em>(text)</em></li>
  <li><attr>format</attr>  <em>(text)</em></li>
  <li><attr>functionSymbols</attr>  <em>(textList)</em></li>
  <li><attr>splitSymbols</attr>  <em>(boolean)</em></li>
  <li><attr>displayDigits</attr>  <em>(integer)</em></li>
  <li><attr>displayDecimals</attr>  <em>(integer)</em></li>
  <li><attr>displaySmallAsZero</attr> <em>(number)</em></li>
  <li><attr>bindValueTo</attr>  <em>(math)</em></li>
  <li><attr>unionFromU</attr>  <em>(boolean)</em></li>
</ul>

</section>


<section><title>Description</title>
<!--use <ref> on all component names (other than the one indexed from this file) in this section only-->
  <p>The <tage>mathInput</tage><idx><tage>mathInput</tage></idx> component renders a form entry field in the viewer that stores mathematical content. Note the distinction between an <ref uri="doenet:doenetId=oqsskIj4WFljMigaogOCM"><tag>answer</tag></ref> and a <tage>mathInput</tage> : the <tage>mathInput</tage> has no built-in evaluation but can be used in further code if evaluation is desired.</p>
</section> 

  
<section><title>Usage Examples</title>

<subsection><title>Example 1: basic <tage>mathInput</tage> without attributes</title>
<p>In the sample code below, a named <tage>mathInput</tage> is used to store a numerical value from the user and then is referenced using the <c>&dollar;name</c> notation in computation. </p>

<example boxed="true"><title>Sample DoenetML code (Example 1)</title>
<pre>
&lt;p&gt;Type in any number: &lt;mathInput name="userNumber"/&gt;&lt;/p&gt;

&lt;p&gt;The square of your number is &lt;math simplify&gt;&dollar;userNumber^2&lt;/math&gt; &lt;/p&gt;

</pre>
 
  </example>  
</subsection>
  
<!--*******************************************************-->
 
<example><title>What Doenet Renders (Example 1)</title>
<p>Type in any number: <mathInput name="userNumber"/></p>

<p>The square of your number is <math simplify>$userNumber^2</math> </p>
</example> 

<!--******************************************************-->
 
<subsection><title>Example 2:  <tage>mathInput</tage> compared to <tage>textInput</tage></title>
<p>In the sample code below, the use of the <tage>mathInput</tage> component named <c>mathPi</c> is compared to the <tage>textInput</tage> named <c>stringPi</c> to illustrate their difference.  Any <tage>mathInput</tage> can be named using the <c>&dollar;name</c> notation and stored for future use in computations or numerical evaluation.  If a value stored as a string is used within a <ref uri="doenet:doenetId=BYXQro7P7NJrtKyTCxJcX"><tag>math</tag></ref> component, Doenet will ignore it. Finally, in the final line of code, the <c>stringPi</c> appears in the font of a <c>math</c> type component in the viewer, however its behavior is still that of a string - this is the result of being nested within a mathematical display component, or <ref uri="doenet:doenetId=GCM8z3SDsbj9yZSkHW3YB"><tag>m</tag></ref>.</p>

<example boxed="true"><title>Sample DoenetML code (Example 2)</title>
<pre>
&lt;p&gt;What is the number &lt;m&gt;\pi&lt;/m&gt; rounded to two decimal places?: &lt;mathInput name="mathPi"/&gt;&lt;/p&gt;
  
&lt;p&gt;Now, type it in as a string: &lt;textInput name="stringPi"/&gt;&lt;/p&gt;
  
&lt;p&gt;You answered: &dollar;mathPi and &dollar;stringPi&lt;/p&gt;

&lt;p&gt;Now, let's try to do some math with your &lt;m&gt;\pi&lt;/m&gt;s:&lt;/p&gt;
&lt;p&gt;&lt;m&gt;&dollar;mathPi + 2 = &lt;math simplify&gt;&dollar;mathPi + 2&lt;/math&gt;&lt;/m&gt;&lt;/p&gt;
&lt;p&gt;&lt;m&gt;&dollar;stringPi + 2 = &lt;math simplify&gt;&dollar;stringPi + 2&lt;/math&gt;&lt;/m&gt;&lt;/p&gt;
</pre>
 
  </example>  
</subsection>
 
<!--*******************************************************-->
 
<example><title>What Doenet Renders (Example 2)</title>
<p>What is the number <m>\pi</m> rounded to two decimal places?: <mathInput name="mathPi"/></p>
<p>Now, type it in as a string: <textInput name="stringPi"/></p>
<p>You answered: $mathPi and $stringPi</p>

<p>Now, let's try to do some math with your <m>\pi</m>s:</p>
<p><m>$mathPi + 2 = <math simplify>$mathPi + 2</math></m></p>
<p><m>$stringPi + 2 = <math simplify>$stringPi + 2</math></m></p>
</example>

<!--******************************************************-->
<!--    
  
<subsection><title>Example 2: </title>
<p>In the sample code below...</p>

<example boxed="true"><title>Sample DoenetML code (Example 2)</title>
<pre>

</pre>
 
        </example>  
      </subsection>
   -->
<!--*******************************************************-->
<!-- 

<example><title>What Doenet Renders (Example 2)</title>

</example>
    -->
 

<!--******************************************************-->
<!--    
  
<subsection><title>Example 3: </title>
<p>In the sample code below...</p>

<example boxed="true"><title>Sample DoenetML code (Example 3)</title>
<pre>

</pre>
 
        </example>  
      </subsection>
    -->
<!--*******************************************************-->
<!-- 
 
<example><title>What Doenet Renders (Example 3)</title>

</example>
-->


<!--******************************************************-->
    
<!--  
<subsection><title>Example 4: </title>
<p>In the sample code below...</p>

<example boxed="true"><title>Sample DoenetML code (Example 4)</title>
<pre>

</pre>
 
        </example>  
      </subsection>
    -->
<!--*******************************************************-->
 
<!-- 
<example><title>What Doenet Renders (Example 4)</title>

</example>
    -->

</section>
</document>














