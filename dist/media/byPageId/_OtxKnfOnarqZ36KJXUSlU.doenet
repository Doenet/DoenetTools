<section>
  <title>Simplest form (sugared answers)</title>
  
<p>The default type is math.</p>

<p>Numerically evaluated answer, so anything
mathematicall equivalent is correct:
What is <m>2x+2x</m>? <answer>4x</answer></p>

<p>Symbolic evaluation with no simplication,
so need correct form:
What is <m>2x+2x</m>? <answer symbolicEquality>4x</answer></p>
  
<p>Symbolic evaluation with simplication:
  What is <m>2x+2x</m>? 
<answer symbolicEquality simplifyOnCompare>4x</answer></p>
  
<p>Symbolic evaluation with numbers simplication:
  What is <m>2x+2x</m>? 
<answer symbolicEquality simplifyOnCompare="numbers">4x</answer></p>



<p>Text answer. Must be exact except for whitespace
on either side.
  A dog is a type of <answer type="text">animal</answer></p>

</section>


<section>
  <title>Simple form using award</title>
  
  <p>You can give answer one or more award children.
    If the answer type is math (the default),
    the award child must be a math.
    If you set the answer type to be text,
    the award child must be a text.</p>
  <p>The student earns the maximum credit from
    any awards that are matched.</p>


  
  <p>What is <m>2x+2x</m>?
  <answer>
    <award><math>4x</math></award>
    <award credit="0.5"><math>4</math></award>
  </answer>
  </p>

  <p>A dog is a type of
    <answer type="text">
      <award><text>animal</text></award>
      <award credit="0.5"><text>being</text></award>
    </answer>
  </p>

  <p><select assignNames="(c)" hide>
    <option><math>a</math></option>
    <option><math>b</math></option>
    <option><math>c</math></option>
</select></p>
  <p>What is <m>$c+$c</m>?
    <answer>
      <award>
		<math>2$c</math>
      </award>
    </answer>
</p>



  
</section>

<section>
  <title>Multiple choice</title>
  
  <p>Use a choiceinput inside of a answer to
    create a multiple choice question.
    The choice children default to zero credit
    (as opposed to award children that default to full credit).
  </p>

  
  <p>A dog is a type of 
    <answer>
      <choiceinput>
		<choice credit="1">animal</choice>
		<choice>vegetable</choice>
		<choice>mineral</choice>
		<choice credit="0.25">being</choice>
      </choiceinput>

    </answer>   

  </p>
  
  <p>The default is to randomly reorder choices.
    You can use the fixedOrder attribute to turn that off.</p>


  <p>A dog is a type of 
    <answer fixedOrder>
      <choiceinput>
		<choice credit="1">animal</choice>
		<choice>vegetable</choice>
		<choice>mineral</choice>
		<choice credit="0.5">being</choice>
      </choiceinput>

    </answer>

  </p>  
    <p>A dog is a type of 
    <answer fixedOrder inline>
      <choiceinput>
		<choice credit="1">animal</choice>
		<choice>vegetable</choice>
		<choice>mineral</choice>
		<choice credit="0.5">being</choice>
      </choiceinput>

    </answer>

  </p>  
  
    <p>A Minnesota spring is 
    <answer inline>
      <choiceinput>
		<choice>cold</choice>
		<choice credit="1">fun</choice>
		<choice credit="0.25">long</choice>
		<choice credit="0.5">warm</choice>
      </choiceinput>

    </answer>

  </p>  


</section>


<section>
  <title>Answers with arbitrary logic</title>
  
  <p>To include arbitrary logic in answer,
    give each award a &lt;when&gt; child that contains
    the criteria for achieving credit.
    In this case, the answer is not automatically
    given an mathinput or textinput child,
    so you must manually include an input
    if you want one.
  </p>
  
  <p>Note: it is recommend to use the prop "immediateValue"
    of inputs so that the check work button
    changes as soon as the input is modified.
    Using prop "value" works, but leads to a strange
UI experience when trying to click the submit button.</p>


  <p>Enter a number between 0 and 1:
    <answer>
      <mathinput name="myNum" />
      <award>
        <when>
          <copy tname="myNum" prop="immediateValue" /> >= 0
            and
          <copy tname="myNum" prop="immediateValue" /> &lt;= 1
        </when>
      </award>
    </answer>
  </p>
  <p>Note: Needed to use &amp;lt; for the less than sign.</p>

  
  <p>An answer allows only one input child.
    If you want an answer based on multiple inputs,
    you must place them outside the answer.</p>
  
  <p>Since the inputs are not inside the answer,
    the answer cannot automatically determine what
    is the student's response.
    In this case, to gather data correctly,
    you need to explictly denote what values you want
    recorded as the student's response.
</p>



  <p>Enter two values than add up to 1:
    <mathinput name="num1" />
    <mathinput name="num2" />
    <answer>
      <award>
        <when>
          <copy prop="immediateValue" tname="num1" isResponse />
          +
          <copy prop="immediateValue" tname="num2" isResponse />
          = 1
        </when>
      </award>
    </answer>
  </p>


  <p>One can base an award on any value,
    including those from graphs. </p>
  
  <p>Move the point to be in the first quadrant.</p>
  <graph>
    <point name="A">(-1,3)</point>
  </graph>
  <answer>
    <award>
      <when>
        <copy prop="x" tname="A" isResponse /> > 0
        and
        <copy prop="y" tname="A" isResponse /> > 0
      </when>
    </award>
  </answer>

</section>









