<ref createButton="true" uri="doenet:doenetId=DG5JOeFNTc5rpWuf2uA-q">Back to Component Index</ref>

<document><title><tage>polyline</tage> component</title>

<section><title>Associated Attributes</title>
<ul>
  <li><attr>draggable</attr> <em>(boolean)</em></li>
  <li><attr>vertices</attr> <em>(_pointListComponent)</em></li>
  <aside startOpen="true"><title><alert>Inherited from parent component/  <c>GraphicalComponent</c>:</alert></title>
  <li><attr>label</attr> <em>(text)</em></li>
  <li><attr>showLabel</attr> <em>(boolean)</em></li>
  <li><attr>layer</attr> <em>(number)</em></li>
  </aside>
</ul>

</section>


<section><title>Description</title>
  <p>The <tage>polyline</tage><idx><tag>polyline</tag></idx> component renders a polyline when nested inside a <ref><tag>graph</tag></ref> component.  A polyline is a <tag><ref>polygon</ref></tag> that is not closed (in contrast, the <tag>polygon</tag> provides this closure automatically).  Points are drawn in the order they are specified in the <attr>vertices</attr> attribute. The <tag>polyline</tag> tag is self-closing and the <attr>vertices</attr> attribute is required. Polylines are by default draggable for interactive activities.  See examples below for details on specific attribute usage. </p>
</section> 
  
<section><title>Usage Examples</title>

<subsection newNameSpace><title>Example 1: <tage>polyline</tage> with <attr>vertices</attr> and <attr>draggable</attr> attributes</title> 
<p>In the sample code below, a <tage>polyline</tage> is defined by specifying a list of four points within the <attr>vertices</attr> attribute. This <tage>polyline</tage> cannot be modified by the user since the <attr>draggable</attr> attribute has been set to <c>false</c>.</p>
<example boxed="true"><title>Sample DoenetML code (Example 1)</title>
<pre> 
&lt;graph width="300px" height="300px"&gt;
    &lt;polyline vertices="(0,0) (2,2) (-1,5) (-5,1)" draggable="false"/&gt;
&lt;/graph&gt;
</pre>
</example>
</subsection>

<!--*******************************************************-->
 

<example><title>What Doenet Renders (Example 1)</title>
<graph width="300px" height="300px">
    <polyline vertices="(0,0) (2,2) (-1,5) (-5,1)" draggable="false"/>
</graph>
  
</example>

<!--*******************************************************-->

<subsection><title>Example 2:  Construct a <tage>polyline</tage> with user-input points</title>
<p>In the sample code below, the user is prompted to provide coordinate data for three points using a <ref uri="doenet:doenetId=p_qPrnY-jhcqqrG2LcodH"><tage>mathInput</tage></ref>.  The <c>math</c> content stored in the <tage>mathInput</tage>s are then rendered as <ref uri="doenet:doenetId=gN8NlDY3WLRc7jgAvXKXm"><tag>point</tag></ref>s within the <ref uri="doenet:doenetID=W7UM-eMckhRS3ktGSUR6B"><tag>graph</tag></ref>. The <tage>polyine</tage> component references these points within the <attr>vertices</attr> attribute using the <c>&dollar;name</c> notation.</p>

<example boxed="true"><title>Sample DoenetML code (Example 2)</title>
<pre>
&lt;p&gt;Create a polyline by typing in coordinates for 3 points, or by dragging 
  the 3 points away from the origin.&lt;/p&gt;
&lt;p&gt;Point 1: &lt;mathInput name="userPoint1" prefill="(0,0)"/&gt;&lt;/p&gt;
&lt;p&gt;Point 2: &lt;mathInput name="userPoint2" prefill="(0,0)"/&gt;&lt;/p&gt;
&lt;p&gt;Point 3: &lt;mathInput name="userPoint3" prefill="(0,0)"/&gt;&lt;/p&gt;
  
&lt;graph&gt;
  &lt;point name="graphPoint1"&gt;&dollar;userPoint1&lt;/point&gt;
  &lt;point name="graphPoint2"&gt;&dollar;userPoint2&lt;/point&gt;
  &lt;point name="graphPoint3"&gt;&dollar;userPoint3&lt;/point&gt;
  &lt;polyline name="myPolyLine" vertices="&dollar;graphPoint1 &dollar;graphPoint2 &dollar;graphPoint3"/&gt;
&lt;/graph&gt;

</pre>
</example> 
</subsection>

<!--*******************************************************-->

<example><title>What Doenet Renders (Example 2)</title>
<p>Create a polyline by typing in coordinates for 3 points, or by dragging the 3 points away from the origin.</p>
<p>Point 1: <mathInput name="userPoint1" prefill="(0,0)"/></p>
<p>Point 2: <mathInput name="userPoint2" prefill="(0,0)"/></p>
<p>Point 3: <mathInput name="userPoint3" prefill="(0,0)"/></p>
  
<graph>
  <point name="graphPoint1">$userPoint1</point>
  <point name="graphPoint2">$userPoint2</point>
  <point name="graphPoint3">$userPoint3</point>
  <polyline name="myPolyLine" vertices="$graphPoint1 $graphPoint2 $graphPoint3"/>
</graph>

</example>

<!--*******************************************************-->
<!--future - example with draggable points constrained to gridlines
<subsection><title>Example 3: </title>
<p>In the sample code below...</p>

<example boxed="true"><title>Sample DoenetML code (Example 3)</title>
<pre>

</pre>
 
  </example>  
</subsection>-->
  
<!--*******************************************************-->
 
<!--
<example><title>What Doenet Renders (Example 3)</title>

</example>-->
   

<!--******************************************************-->
    

  
</section>
</document>


