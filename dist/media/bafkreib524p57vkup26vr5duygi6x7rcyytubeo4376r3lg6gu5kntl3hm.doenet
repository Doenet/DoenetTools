
<title>Using the Forward Euler algorithm to solve pure-time differential equations</title>

<description>
By pretending that the slope of a function is constant over small intervals, we following tangent lines to estimate the solution to pure-time differential equations.
</description>




<section><title>Introductory video</title>

<figure>
<video youtube="POvY3bTQmAg" width="640px" height="360px"/>
<caption>Solving pure-time differential equations with the Forward-Euler algorithm</caption>
</figure>

<p><alert>Video transcript: </alert></p>
<p>The Forward Euler algorithm is an algorithm to estimate the solution to differential equations.  Let's illustrate how to use it to solve the pure-time differential equation <m>x'(t) = t^3-5t-2</m> with the initial condition that <m>x(t)</m> is 10 at time <m>t=0</m>.  Our goal is to estimate the solution <m>x(t)</m>.
</p>

<p>We know we must start at <m>x(0)=10</m>, and the next question is to determine how fast <m>x(t)</m> is changing at <m>t=0</m>.  This rate of change is simply the slope, or derivative, of the function <m>x(t)</m> at the initial time <m>t=0</m>.  We can calculate this derivative directly from the differential equation, by plugging in <m>t=0</m>.  We calculate that <m>x'(0)</m> is zero cubed minus five times zero minus two, or negative two.</p>

<p>The slope of the graph of <m>x(t)</m> is negative two only at <m>t=0</m>.  For larger values of <m>t</m>, it will change according to the equation <m>x'(t)=t^3-5t-2</m>.  But, let's pretend that we don't realize that fact; let's pretend that the slope <m>x'(t)</m> stays fixed at the value negative two.  A function with constant slope is a line, so let's use the 
<ref uri='doenet:tangent_line_linear_approximation'>linear approximation</ref>
 to <m>x(t)</m> evaluated at <m>t=0</m>.  We denote this linear approximation as <m>L_0(t)</m>, where the zero indicates we are matching the function and its derivative at <m>t=0</m>.  We obtain the equation for a line with a slope of negative two and <m>y</m>-intercept of ten.  The graph of the linear approximation looks like this.  The slope looks shallower than negative two because the vertical scale is much larger than the horizontal scale.  But, indeed, it drops by eight units by the time we get to <m>t=4</m>.</p>

<p>We could claim that <m>L_0(t)</m> is a good approximation to the solution if the derivative <m>x'(t)</m> stayed constant at negative two for all time, or at least didn't change much.  However, if we look at the formula for <m>x'(t)</m>, it's pretty clear that <m>x'(t)</m> is not constantly negative two but instead changes to much different values.  Since <m>x'(t)</m> is continuous, though, we can expect it to stay relatively close to negative two for a short amount of time; we can expect the linear approximation <m>L_0(t)</m> to be an OK approximation to the real solution <m>x(t)</m> for small values of <m>t</m>.
</p>

<p>If we are OK with approximating <m>x(t)</m> by the linear function <m>10-2t</m> for a small amount of time, how can we estimate values of the solution for longer times.  One option is the Forward Euler algorithm, in which we pick some small length of time <m>\Delta t</m> and use <m>L_0(t)</m> for that small interval of time.  Then, we'll calculate a new linear approximation and continue the process.  Let's illustrate the Forward Euler algorithm by choosing an interval length <m>\Delta t</m> of one.
</p>

<p>We use our linear approximation that we calculated from <m>t=0</m>, i.e., our <m>L_0(t)</m>, to estimate the value of the solution at <m>t=1</m>.  This approximation for <m>x(1)</m> is ten minus two times one, or eight.  I've highlighted this result in red on the graph.</p>

<p>Now that we've estimated <m>x(1)</m> to be eight, we can repeat the process by calculating a new linear approximation at <m>t=1</m>.  We call this linear approximation <m>L_1(t)</m> to emphasize it is calculated at <m>t=1</m>.  The value of <m>x</m> and its derivative are calculated at <m>t=1</m> and we subtract one from <m>t</m>, as highlighted in red.  This linear approximation is the equation for the line that is equal to <m>x(1)</m> when <m>t=1</m> and has a slope equal to <m>x'(1)</m>.  We have an estimate of <m>x(1)</m>; the only new piece of information we need is <m>x'(1)</m>.  We calculate this derivative directly from the differential equation.  Plugging in <m>t=1</m> into the differential equation, we find that <m>x'(1)</m> is equal to negative six.  The derivative decreases from negative two at <m>t=0</m> to negative six at <m>t=1</m>; the function <m>x(t)</m> is beginning to decrease more steeply. 
</p>

<p>Plugging <m>x(1)=8</m> and <m>x'(1)=-6</m> into the linear approximation formula, we obtain a new approximation for <m>x(t)</m> for <m>t\gt 1</m>.  When we graph this second linear approximation, we see how the estimate of <m>x(t)</m> decreases more steeply.  Since we are using time intervals of length <m>\Delta t=1</m>, we'll use this linear approximation for a step of that length and estimate the value of <m>x(t)</m> at <m>t=2</m>.  The linear approximation yields <m>x(2)=2</m>, which we plot on the graph with another red point.
</p>

<p>To summarize our result so far with <m>\Delta t=1</m>, we used the linear approximation at <m>t=0</m> to estimate that <m>x(1)</m> is eight, then used the linear approximation at <m>t=1</m> to estimate that <m>x(2)</m> is two.  Let's continue this process for two more time steps to estimate <m>x(t)</m> at <m>t=3</m> and at <m>t=4</m>.  For these steps, I won't describe all the calculations; you can pause the video if you'd like to follow all the details.
</p>

<p>We write down a linear approximation for <m>x(t)</m> at <m>t=2</m>.  The important fact to note in this calculation is that <m>x'(2)</m> is negative four; the derivative has increased a little bit.  We draw a line sloping downward with slope negative 4.  From this line, we estimate that <m>x(3)</m> is about negative two.
</p>

<p>For the fourth and final step using <m>\Delta t=1</m>, we write down a linear approximation for <m>x(t)</m> at <m>t=3</m>.  Note that the estimate for <m>x'(3)</m> is ten. The slope has become large and positive and this last linear approximation increases rapidly.  The Forward Euler estimate of <m>x(4)</m> is eight.
</p>

<p>When <m>\Delta t=1</m>, the Forward Euler algorithm took four steps to get to <m>t=4</m>.  I've gathered formulas for all four steps together.  Let's massage them to make them prettier and easier to remember.  First, let's get rid of some extra information and just keep the final formulas.  Next, notice that in each step, we are multiplying the derivative by the same number.  One minus zero, two minus one, three minus two, etc., are all the length of the time interval, <m>\Delta t</m>, which in this case is one.  Let's rewrite the formula to show this dependence on <m>\Delta t</m>.
</p>

<p>We evaluated the functions and derivatives at the points <m>0,1,2</m>, etc., which are all multiples of the time interval <m>\Delta t</m>.  Let's define the time points <m>t_0</m>, <m>t_1</m>, <m>t_2</m>, etc., as these multiples of <m>\Delta t</m>, and replace the numbers with these time points.  In this way, our formulas are no longer specific to <m>\Delta t=1</m>.  In fact, let's remove any reference to value one and just keep definitions in terms of <m>\Delta t</m>.  Now our formulas for Forward Euler will work for any value of the time interval <m>\Delta t</m>.
</p>

<p>Of course, we can continue this process beyond the fourth time point.  If we like, we can write the Forward Euler formula for an arbitrary time point <m>t_i</m>.  The value <m>x(t_{i+1})</m> at the next time point is approximated as the value <m>x(t_i)</m> of the previous time point plus the value of the derivative times <m>\Delta t</m>.
</p>

<p>More important than memorizing this formula is understanding the idea behind the Forward Euler algorithm.  In each step, we simply calculate the slope of the function as the derivative given by the differential equation.  Then, we take a step of size <m>\Delta t</m> with that slope.  We can continue this process for as long as we want, though if we are calculating the Forward Euler algorithm by hand, there is always the danger we might fall asleep in the middle of repeating these tedious steps.
</p>

<p>The Forward Euler algorithm is nice in that it gives us an answer.  You might have some lingering doubts about the accuracy of the crude approximation of assuming the slope does not change in the middle of these intervals of length <m>\Delta t</m>.  Rather than directly trying to estimate its accuracy here, though, let's think about how we could improve the accuracy of the Forward Euler algorithm.  We could increase the accuracy by taking smaller time steps <m>\Delta t</m> so that we recalculate the slope of the function more frequently.</p>

<p>For example, we could cut the time interval in half to <m>\Delta t=1/2</m>.  This sounds like a good idea, but the cost is that we have to take twice as many steps.   To get to <m>t=4</m>, we have to take eight steps of the algorithm.  Ready to crunch some numbers?  There, those calculations weren't so bad.  OK, I don't feel like reading those numbers either.  Let's just summarize the results of this graphically.
</p>

<p>We start off with this same slope of negative two, but this time only use this slope until <m>t=1/2</m>.  Then, we recalculate the slope at <m>t=1/2</m> and find that the function already should be decreasing more rapidly.  This change in slope was undetected by the first calculation with <m>\Delta t=1</m>.  For the next three time steps, the slopes don't change much, and the new calculation with <m>\Delta t=1/2</m> isn't too different from the first calculation with <m>\Delta t=1</m>.  We see that the slope already becomes positive at <m>t=2.5</m>.  When we get to <m>t=3.5</m>, we see that slope has increased dramatically and that the we significantly underestimated the value of <m>x(4)</m> in the first calculation with <m>\Delta t=1</m>.  In fact, we exceeded the scale of the graph, so let's increase the vertical scale so that everything fits.
</p>

<p>The second calculation, with <m>\Delta t=1/2</m> (the green curve), is more accurate than the first calculation with <m>\Delta t=1</m> (the blue curve).  Because we took a smaller time step, we could adjust the direction more frequently.  However, the improved accuracy came at a cost, as we had to do twice as much work.
</p>

<p>We should really estimate the solution with even smaller <m>\Delta t</m>, but that would be a big pain to do by hand.  Instead, we wrote a computer program to the calculation for us.  The solution with <m>\Delta t=1/4</m> (16 steps total) is shown by the cyan curve.  We could even try <m>\Delta t=1/8</m> (32 steps total), as shown by the thin magenta curve.  Again, we see that we've been underestimating the value of <m>x(4)</m>, as the last curve exceeded our scale again.  The calculations with larger time steps <m>\Delta t</m> have been significantly underestimating this value, and we must increase the vertical scale of the graph even further.
</p>

<p>In summary, the Forward Euler algorithm is a fairly simple algorithm to estimate the solution of a differential equation.  However, for accuracy, one needs to take many small time steps, which is best done with a computer program.
</p>
<p><alert>End video transcript</alert></p>






</section>

<section><title>A pure-time differential equation</title>


<p>A pure-time differential equation is an equation of the form
<mdn>
  <mrow name='pure_time' >\frac{ dy }{ dt }\amp = f(t)</mrow>
  <mrow>y(t_0)\amp = y_0, \notag</mrow>
</mdn>
where the second equation is the initial condition.  We prescribe that <m>y(t_0)</m> is the value <m>y_0</m>, and we need to determine <m>y(t)</m> for <m>t \gt  t_0</m>.  We can think of <m>f(t)</m> as a measurement of the rate of change of <m>y(t)</m> at the time <m>t</m>.  Given this measured rate of change, we want to <q>add up</q> all the changes that have happened to <m>y</m> since the initial time <m>t_0</m> in order to determine the value <m>y(t)</m> at time <m>t</m>.
</p>

<!--reference below commented out, need to add page on developing intuition for the indefinite integral from math insight first-->
<p>If we can find an <em>antiderivative</em> <m>F(t)</m> of <m>f(t)</m>, i.e., a function <m>F(t)</m> such that <m>\frac{ dF }{ dt }=f(t)</m>, then the solution to the differential equation(1) shown above<!--<ref tname='pure_time' />--> is simple.  We can use the 
<!--<ref uri='doenet:indefinite_integral_intuition'>indefinite integral</ref>-->indefinite integral
 to calculate <m>y(t)</m>.  We know that 
<me>y(t) = \int f(t) dt = F(t) + c,</me>
for some arbitrary constant <m>c</m>.  The value of the constant is determined by the initial condition, i.e., <m>c</m> is chosen so that
<me>y_0=y(t_0) = F(t_0) + c</me>
is satisfied, i.e., <m>c = y_0-F(t_0)</m>.  The solution to the pure-time differential equation is 
<men name='antidervative_solution' >y(t)= F(t) + y_0 - F(t_0).</men>
</p>

<p>Finding an antiderivative <m>F(t)</m> of <m>f(t)</m>, however, isn't always the simplest thing to do.  And, for some (most?) functions <m>f(t)</m>, it's an impossible task. Here we introduce an approximate method, the Forward Euler method, to determine the solution <m>y(t)</m>.  Now only does the Forward Euler method give us a way to estimate <m>y(t)</m>, it will also help us understand how an integral works.
</p>
</section>



<section><title>The basis of Forward Euler: keeping the rate of change constant</title>

<!--ref tag commented out below-->
<p>Given the differential equation (1) <!--<ref tname='pure_time' />-->, we know what the initial rate of change of <m>y</m> must be.  This initial slope of <m>y(t)</m> is <m>f(t_0)</m>.  Unless <m>f(t)</m> happens to be a constant function, <m>f(t)</m> will change to different values for <m>t\gt t_0</m>.  But, let's not worry about such realities.  Let's close our eyes and pretend that <m>f(t)</m> does not change and is frozen at the number <m>f(t_0)</m>.  If <m>\frac{ dy }{ dt }</m> is the constant <m>f(t_0)</m>, then <m>y(t)</m> must be a line with slope <m>f(t_0)</m>.  The equation for this line is
<men name='tangentline_t0' >y(t) \approx y_0 + f(t_0)(t-t_0),</men>
which is actually the formula for the tangent line to <m>y(t)</m> at <m>t=t_0</m> (since <m>y'(t_0)=f(t_0)</m>).  By closing our eyes and pretending that <m>f(t)</m> was a constant fixed at its initial value <m>f(t_0)</m>, we've replaced the true solution <m>y(t)</m> with its tangent line calculated at <m>t=t_0</m>.  
</p>

<p>To be concrete, we'll think about the example differential equation
<mdn>
  <mrow name='exampletsquared' >\frac{ dy }{ dt }\amp = t^2-10</mrow>
  <mrow>y(0)\amp = 50. \notag</mrow>
</mdn>
Starting at <m>t=t_0=0</m>, the initial slope is <m>-10</m>, as <m>\frac{ dy }{ dt }=f(t_0) = f(0)=-10</m>.  Its tangent line at <m>t=0</m> is 
<md>
  <mrow>y(t)\amp \approx y_0 + f(0)(t-0)</mrow>
  <mrow>\amp =50 -10t.</mrow>
</md>
This tangent line is shown thin gray line in the right panel of the below applet when it is first started.
</p>

<p>The tangent approximation will be a bad approximation of <m>y(t)</m> for <m>t</m> much larger than <m>t_0</m>.  But, if we choose a small enough <m>\Delta t</m> so that the slope <m>f(t)</m> doesn't change much in the range <m>t_0 \lt  t \lt  t_0 + \Delta t</m>, then the approximation shouldn't be too bad if we don't go past <m>t=t_0+\Delta t</m>.  The idea is that we'll just close our eyes for a short period of time, pretending that <m>f(t)</m> is constant.  After an interval of length <m>\Delta t</m>, we are allowed to open our eyes again.
</p>

<p>When we open our eyes at time <m>t_0+\Delta t</m>, we can take stock of the situation.  We had started at <m>y(t_0)= y_0</m>, and having followed the tangent line approximation (4)<!--<ref tname='tangentline_t0' />--> for a time of <m>\Delta t</m>, we see that we have arrived at
<mdn>
  <mrow>y(t_0+\Delta t)\amp \approx y(t_0) + f(t_0)((t_0+\Delta t)-t_0)\notag</mrow>
  <mrow name='step1' >\amp = y(t_0) + f(t_0) \Delta t.</mrow>
</mdn>
</p>

<p>In terms of the example system (5)<!-- <ref tname='exampletsquared' />-->, we find ourselves at <md>
  <mrow>y(0+\Delta t)\amp \approx y(0) + f(0)((0+\Delta t)-t_0)</mrow>
  <mrow>\amp = 50 -10 \Delta.</mrow>
</md>
With <m>\Delta t=1</m>, as in the default setting of the applet, we estimate that <m>y(1)</m> is approximately <m>50-10\cdot 1=40</m>.
</p>
</section>

<p><alert>Applet:  the Forward Euler Approximation</alert></p>
<!--<standinForFutureLayoutTag>-->

  <embed width="700 px" height="350 px" encodedGeogebraContent = "" />
  
<p><alert>Applet Details:</alert></p>
<p>Illustration of how the Forward Euler algorithm estimates the solution to a pure time differential equation <m>\frac{ dy }{ dt }=f(t)</m> with initial condition <m>y(t_0)=y_0</m>.  The function <m>f(t)</m> is plotted by the blue curve in the left panel.  In the Forward Euler algorithm, the function <m>f(t)</m> is approximated as though it were constant on intervals of length <m>\Delta t</m>, as illustrated by the horizontal length segments coming from the graph of <m>f</m>.  The height of each line segment is determined by the value of <m>f(t)</m> at its left  (green dots).  When we assume <m>f(t)</m> is a constant, the solution to <m>\frac{ dy }{ dt }=f(t)</m> is a line whose slope is the value of <m>f</m>.  The approximate solution is illustrated by the green curve in the right panel.  Each segment of the green curve has a slope given by the height of the corresponding line segment in the left panel.  To see this correspondence, you can move the pink points in either panel.  The matching segments of the approximated <m>f(t)</m> (at left) and estimate of <m>y(t)</m> (at right) are highlighted in pink.  Gray lines emphasize how we are are viewing <m>y(t)</m> as a line with slope given by the constant value of <m>f(t)</m>, i.e., we make <m>y(t)</m> be a tangent line to what the true solution would be. The calculation for the value of <m>y(t)</m> at the end of the highlighted segment can be seen by opening the <em>step details</em> section.  The calculation is based on the tangent line formula using the slope <m>f</m>.  If you check the <q>exact</q> box, the exact solution computed by the antiderivative is <m>f</m> is shown in red (assuming <m>f(t)</m> is simple enough for its antiderivative to be computed).  The <em>error estimate</em> section shows the approximate and exact value of <m>y(t)</m> at the position of the pink point along with the error between them. Clearing the <q>details</q> box hides the points indicating the endpoints, as well as the line segments and pink point in the left panel.  This view reduces the clutter when <m>\Delta t</m> is small and the number of segments is large. You can change the function <m>f(t)</m>, the initial condition <m>y_0</m>, and other parameters by typing values in the corresponding boxes in the <em>control panel</em> section.  You can also change the initial condition <m>y_0</m> by dragging the blue point in the right panel and the axes bound by holding down <c>Shift</c> and dragging.  (Shift-dragging on an axis stretches that axes; shift-dragging on the background moves the entire graph.)
</p>
<!--</standinForFutureLayoutTag>-->

<section><title>The basis of Forward Euler: keeping the rate of change constant (continued)</title>
<p>When we open our eyes after time <m>\Delta t</m>, not only do we discover our new position <m>y(t_0+\Delta t)</m>, but we also look and discover that <m>f(t)</m> has changed during the interval we had our eyes closed.  We observe its new value of <m>f(t+\Delta t)</m> and realize we need to change our slope <m>\frac{ dy }{ dt }</m> to match the new information.  Rather than following the tangent line (4) <!--<ref tname='tangentline_t0' />--> calculated at <m>t=t_0</m>, we instead will follow the tangent line based on our new position <m>y(t_0+\Delta)</m> and our new slope <m>f(t_0 + \Delta t)</m>. This new tangent line is
<men name='tangentline_t1' >y(t) \approx y(t_0+\Delta t) + f(t_0 + \Delta t)(t-(t_0+\Delta t)).</men>
With this calculation, we close our eyes again and move along the tangent line for another time step of <m>\Delta t</m>.  At the end of that interval, i.e., at time <m>t_0 + 2 \Delta t</m>, we arrive at the position
<mdn>
  <mrow>y(t_0+2\Delta t)\amp \approx y(t_0+\Delta t) + f(t_0 + \Delta t)(t_0+2\Delta t-(t_0+\Delta t))\notag</mrow>
  <mrow name='step2' >\amp = y(t_0+\Delta t) + f(t_0 + \Delta t)\Delta t</mrow>
</mdn>
</p>

<p>In terms of our example system (5) <!--<ref tname='exampletsquared' />-->, since <m>t_0=0</m> and <m>\Delta t=1</m>, the new slope is 
<me>f(t_0+ \Delta t)=f(1)= 1^2-10 = -9.</me>
Since our position at the end of the first step was <m>y(1) \approx 40</m>, the new tangent line equation is
<md>
  <mrow>y(t)\amp \approx y(t_0+\Delta t) + f(t_0 + \Delta t)(t-(t_0+\Delta t))</mrow>
  <mrow>\amp = y(1)+f(1)(t-1)</mrow>
  <mrow>\amp =40 -9(t-1).</mrow>
</md>
Plugging in  <m>t=t_0+2\Delta t = 0 + 2\cdot 1 = 2</m>, our new location is
<me>y(2) \approx 40 -9(2-1) = 31.</me>
</p>

<p>By closing our eyes during each of these two steps, we were taking steps according the Forward Euler algorithm.  To write this algorithm more clearly, we combine step one <em>(see equation(8) )</em><!--<ref tname='step1' />--> with step two <em>(see equation (11) )</em><!-- <ref tname='step2' />--> by substituting the estimate <m>y(t_0) + f(t_0) \Delta t</m> for <m>y(t_0 + \Delta t)</m> obtained in step one into the equation for step two.  The result is
<md>
  <mrow>y(t_0+2\Delta t)\amp \approx y(t_0+\Delta t) + f(t_0 + \Delta t)\Delta t</mrow>
  <mrow>\amp \approx y(t_0) + f(t_0) \Delta t + f(t_0 + \Delta t)\Delta t</mrow>
</md>
This equation shows that to go from <m>y(t_0)</m> to <m>y(t_0+2\Delta t)</m>, we add 
<m>f(t_0) \Delta t</m> from the first step plus  <m>f(t_0 + \Delta t)\Delta t</m>.
</p>

<p>We can continue this process. To go <m>t=t_0+3\Delta t</m>, we take another step, closing our eyes for an interval of width <m>\Delta t</m>.  During this interval, we fix the slope at <m>\frac{ dy }{ dt }=f(t_0+2\Delta t)</m>, the value of the slope before closing our eyes.  In this step we will add <m>f(t_0+2\Delta t)\Delta t</m>, and our estimate will be
<me>y(t_0+3\Delta t) \approx   y(t_0) + f(t_0) \Delta t + f(t_0 + \Delta t)\Delta t + f(t_0+2\Delta t)\Delta t.</me>
</p>

<p>Do you see the pattern?  In the Forward Euler algorithm, to go from <m>y(t_0+i\Delta t)</m> to <m>y(t_0 + (i+1)\Delta t)</m>, we add <m>f(t_0+i\Delta t)\Delta t</m>.  So far, we took  steps for <m>i=0</m>, <m>i=1</m>, and <m>i=2</m>.  You can follow this pattern and write out the Forward Euler formula to estimate <m>y(t_0+5\Delta t)</m> by taking two more steps.  The formula should be the same as the previous equation, only with two more terms added on the end. After writing the general formula, use it to compute <m>y(5)</m> for the example system <em>(equation (5) )</em><!--<ref tname='exampletsquared' />--> with <m>\Delta t=1</m>.  You answer should agree with the above applet.
</p>
</section>



<section><title>Summation notation</title>


<p>If we asked you to write out the formula for <m>y(t_0+20 \Delta t)</m>, you could do it, but it'd be a pain and you might get writer's cramp.  You'd get a nice result that looked something like
<me>y(t_0+20\Delta t) \approx   y(t_0) + f(t_0) \Delta t + f(t_0 + \Delta t)\Delta t + f(t_0+2\Delta t)\Delta t+ f(t_0+3\Delta t)\Delta t...</me><me>... + f(t_0+4\Delta t)\Delta t + f(t_0+5\Delta t)\Delta t + f(t_0+6\Delta t)\Delta t...</me><me>... + f(t_0+7\Delta t)\Delta t + f(t_0+8\Delta t)\Delta t + f(t_0+9\Delta t)\Delta t...</me><me>... + f(t_0+10\Delta t)\Delta t + f(t_0+11\Delta t)\Delta t + f(t_0+12\Delta t)\Delta t...</me><me>... + f(t_0+13\Delta t)\Delta t + f(t_0+14\Delta t)\Delta t + f(t_0+15\Delta t)\Delta t...</me><me>... + f(t_0+16\Delta t)\Delta t + f(t_0+17\Delta t)\Delta t + f(t_0+18\Delta t)\Delta t...</me><me> + f(t_0+19\Delta t)\Delta t.</me>
</p>

<p>To make writing such sums easier, we can use summation notation.  In summation notation, a capital Greek sigma, <m>\Sigma</m>, is used to stand for <q>sum.</q>  An example of such a sum is
<me>\sum_{i=1}^3 i^2 = 1^2+2^2+3^3</me>
The <m>i=1</m> below the <m>\Sigma</m> means that <m>i</m> is the variable that we are going to sum over, and its first value is 1.  The 3 above the <m>\Sigma</m> means the last value of <m>i</m> is 3.  The <m>i^2</m> means for each value of <m>i=1,2,3</m>, we will add the term <m>i^2</m>.  Putting this together, we see that the sum represented above is <m>1^2+2^2+3^2</m>.
</p>

<p>Here are other such sums.
<md>
  <mrow>\sum_{j=1}^5 \frac{1}{j}\amp = 1 + \frac{1}{2} + \frac{1}{3} + \frac{1}{4} + \frac{1}{5}</mrow>
  <mrow>\sum_{k=0}^3 g(k)\amp = g(0) + g(1)+g(2) +g(3)</mrow>
  <mrow>\sum_{\bigstar=5}^7 z^{\bigstar}\amp = z^5 + z^6 + z^7</mrow>
</md>
In the last sum, the variable <m>z</m> was not given as a variable to sum over, so we just leave it alone as a <m>z</m>.</p>

<p>As a quick practice, write out the sums
<md>
  <mrow>\sum_{i=1}^5 i</mrow>
  <mrow>\sum_{j=2}^4 e^j</mrow>
  <mrow>\sum_{\clubsuit = 0}^2 h(\clubsuit y).</mrow>
</md>
Can you rewrite the expression <m>\ln(x) + \ln(2x) + \ln(3x)</m> in summation notation?
</p>


</section>

<section><title>Forward Euler in summation notation</title>


<p>The Forward Euler algorithm can be written nicely using summation notation.  If we take three steps of size <m>\Delta t</m> starting at <m>t_0</m>, we showed the results was 
<me>y(t_0+3\Delta t) \approx   y(t_0) + f(t_0) \Delta t + f(t_0 + \Delta t)\Delta t + f(t_0+2\Delta t)\Delta t.</me>
The only thing that changes in these terms is the coefficient in front of the <m>\Delta t</m> inside <m>f</m>.  If we use <m>i</m> to represent the coefficient, then each term is of the form <m>f(t_0 + i \Delta t)\Delta t</m>.  To estimate a solution for Forward Euler, you just start with <m>y(t_0)</m> and sum up the steps you make with closed eyes, which we can write with summation notation:
<me>y(t_0+3\Delta t) \approx   y(t_0) + \sum_{i=0}^2 f(t_0 + i\Delta t)\Delta t.</me>
Now it's easy to write the formula for a fourth step.
<me>y(t_0+4\Delta t) \approx   y(t_0) + \sum_{i=0}^3 f(t_0 + i\Delta t)\Delta t,</me>
or even to go all way to an arbitrary number <m>n</m> steps
<men name='fe_sum' >y(t_0+n\Delta t) \approx   y(t_0) + \sum_{i=0}^{n-1}f(t_0 + i\Delta t)\Delta t.</men>
We just have to remember that the last value of the index <m>i</m> is <m>n-1</m>, not <m>n</m>, as we don't need to evaluate the slope <m>f(t_0+n\Delta t)</m> if we aren't going past <m>t=t_0+n\Delta t</m>.
</p>

<p>For the example system (5)<!--<ref tname='exampletsquared' />--> with <m>\Delta t=1</m>, write out the formula for using Forward Euler to estimate <m>y(10)</m> using summation notation.  What should the top value of the summation index <m>i</m> be? What is your estimate of <m>y(10)</m>? (The applet can help here, as it'd be a bit laborious to do by hand.) If you change <m>\Delta t</m> to 0.5, how does the formula change?  What's your new estimate of <m>y(10)</m>?
</p>




</section>

<section><title>Error analysis</title>


<p>For a simple function <m>f(t)</m> such as <m>f(t)=t^2-10</m>, it's easy to compute an antiderivative <m>F(t)</m>.  For this <m>f(t)</m>, what is one possibility for <m>F(t)</m>?  Using this value and the analytic solution <em>(see equation (3) )</em><!--<ref tname='antidervative_solution' />-->, calculate the exact solution <m>y(t)</m> to the example system (5)<!-- <ref tname='exampletsquared' />--> and the exact value of <m>y(10)</m>.  Your answer should agree with the exact solution calculated by the applet.
</p>

<p>With the exact solution in hand, it's a simple matter to calculate the error in the Forward Euler estimates.  Just subtract off the exact solution from the estimated solution and take the absolute value.  What errors did your Forward Euler estimates have for <m>y(10)</m> with <m>\Delta t=1</m> and <m>\Delta t=0.5</m>?
</p>

<p>When you cut the time step in half, going from <m>\Delta t=1</m> to <m>\Delta t=0.5</m>, by approximately what factor did the error in <m>y(10)</m> shrink?  (We are looking for a round answer here, not the exact ratio in the measured errors.)  Use this observation to predict the error if you cut <m>\Delta t</m> in half once again to <m>\Delta t = 0.25</m>.  Is your prediction born out?  How small must you make <m>\Delta t</m> to get the error less than 1?
</p>

<p>Does it seem reasonable that as <m>\Delta t</m> shrinks to zero, the error in the estimate of <m>y(t)</m> will shrink to zero?
</p>

</section>


<section><title>Looking ahead</title>

<p>A friend tells you that it's pretty stupid to close your eyes and fix the slope at <m>f(t_0 + i \Delta t)</m> when going from <m>t=i\Delta t</m> to <m>t=(i+1)\Delta t</m>.  If you do this, you've fixed the slope to be the value at the beginning of the interval.  Why not, before you close you eyes, look ahead and see what the slope is at the end of the interval?  So, starting out, you'd use the slope <m>f(t_0 + \Delta t)</m> (rather than the slope <m>f(t_0)</m>) to take the first step to <m>f(t_0 + \Delta t)</m>.  The resulting algorithm is called the Backward Euler algorithm or the Implicit Euler Algorithm.  We can write the formula as
<me>y(t_0+n\Delta t) \approx   y(t_0) + \sum_{i=0}^{n-1}f(t_0 + (i+1)\Delta t)\Delta t.</me>
where the only difference is that the slope is the ending slope <m>f(t_0 + (i+1) \Delta t)</m> rather than the beginning slope <m>f(t_0 + i \Delta t)</m>.
</p>

<p>The following applet implements the Backward Euler algorithm.  You can see that it fixes the value of <m>f(t)</m> over an interval using the value of <m>f</m> from the right side of the interval.  Does this do any better than the Forward Euler algorithm?  How does the error compare?  We are particularly interested in what happens  if you cut the step size <m>\Delta t</m> in half.  What happens to the error in the estimate of <m>y(10)</m> if you cut <m>\Delta t</m> from 1 to 0.5?  By what factor does the error go down?  How about if you cut <m>\Delta t</m> in half again?  If you make <m>\Delta t=0.1</m>, how does the error compare to Forward Euler?
</p>




<p><alert>Applet:  the Backward Euler Approximation</alert></p>
  <embed width="700 px" height="400 px" encodedGeogebraContent = "" />
<p><alert>Applet Details:  </alert></p> 
  
<p>Illustration of how the Backward Euler algorithm estimates the solution to a pure time differential equation <m>\frac{ dy }{ dt }=f(t)</m> with initial condition <m>y(t_0)=y_0</m>.  The function <m>f(t)</m> is plotted by the blue curve in the left panel.  In the Backward Euler algorithm, the function <m>f(t)</m> is approximated as though it were constant on intervals of length <m>\Delta t</m>, as illustrated by the horizontal length segments coming from the graph of <m>f</m>.  The height of each line segment is determined by the value of <m>f(t)</m> at its right  (green dots).  When we assume <m>f(t)</m> is a constant, the solution to <m>\frac{ dy }{ dt }=f(t)</m> is a line whose slope is the value of <m>f</m>.  The approximate solution is illustrated by the green curve in the right panel.  Each segment of the green curve has a slope given by the height of the corresponding line segment in the left panel.  To see this correspondence, you can move the pink points in either panel.  The matching segments of the approximated <m>f(t)</m> (at left) and estimate of <m>y(t)</m> (at right) are highlighted in pink.  Gray lines emphasize how we are are viewing <m>y(t)</m> as a line with slope given by the constant value of <m>f(t)</m>. The calculation for the value of <m>y(t)</m> at the end of the highlighted segment is shown in the upper right corner, which is based on the equation for a line with slope <m>f</m>.  The estimate of the value of <m>y</m> at the pink point is also shown. If you check the <q>exact</q> box, the exact solution computed by the antiderivative is <m>f</m> is shown in red (assuming <m>f(t)</m> is simple enough for its antiderivative to be computed).  In addition, the exact value of <m>y(t)</m> at the position of the pink point is displayed along with the error between the approximate and exact values.  Clearing the <q>details</q> box hides the points indicating the endpoints, as well as the line segments and pink point in the left panel.  This view reduces the clutter when <m>\Delta t</m> is small and the number of segments is large. You can change the function <m>f(t)</m> and other parameters by typing values in the corresponding boxes.  You can also change the initial condition <m>y_0</m> by dragging the blue point in the right panel.
</p>
</section>

<section><title>Looking ahead (continued)</title>
<p>Another friend says you are both stupid.  You shouldn't close your eyes and fix the slope to either the slope at the beginning or the slope at the end.  Instead, you should fix the slope to a value at the middle of the interval.  When taking a step from <m>t=t_0+i\Delta t</m> to <m>t=t_0+(i+1)\Delta t</m>, take the slope at some intermediate time <m>t= t_0 + (i+p)\Delta t</m>, where <m>p</m> is a number between 0 and 1.  If <m>p=0</m>, you get Forward Euler, and if <m>p=1</m>, you get Backward Euler.  Maybe some intermediate value works better.
</p>

<p>The following modified scheme
<me>y(t_0+n\Delta t) \approx   y(t_0) + \sum_{i=0}^{n-1}f(t_0 + (i+p)\Delta t)\Delta t.</me>
is implemented in the following applet.  Verify that you get the same results as above when you set <m>p=0</m> and <m>p=1</m>.
</p>

<p>Can you find a value of <m>p</m> that is better than <m>p=0</m> or <m>p=1</m>?   What would be really great would be to find a value of <m>p</m> that reduces the error by a lot more when you cut the step size <m>\Delta t</m> in half.  Find a value of <m>p</m> that reduces the error in <m>y(10)</m> by the largest value when you cut <m>\Delta t</m> from 1 to 0.5.  Is the error further reduced by the same factor when you cut <m>\Delta t</m> in half again?  For the best value of <m>p</m>, if you make <m>\Delta t=0.1</m>, how does the error compare to Forward Euler and Backward Euler?
</p>


<p><alert>Applet:  Modifying the Forward and Backward Euler Approximation</alert></p>
  <embed width="700 px" height="400 px" encodedGeogebraContent = "" />

<p><alert>Applet details:  </alert></p>
<p>Illustration of modifications of Euler algorithm to estimate the solution to a pure time differential equation <m>\frac{ dy }{ dt }=f(t)</m> with initial condition <m>y(t_0)=y_0</m>.  The function <m>f(t)</m> is plotted by the blue curve in the left panel.  Like the forward and backward Euler algorithms, the function <m>f(t)</m> is approximated as though it were constant on intervals of length <m>\Delta t</m>, as illustrated by the horizontal length segments coming from the graph of <m>f</m>.  In this modification, the height of each line segment is determined by the value of <m>f(t)</m> at a fraction <m>p</m> from the left of the interval (green dots).  In this way, <m>p=0</m> corresponds to Forward Euler and <m>p=1</m> corresponds to Backward Euler.  When we assume <m>f(t)</m> is a constant, the solution to <m>\frac{ dy }{ dt }=f(t)</m> is a line whose slope is the value of <m>f</m>.  The approximate solution is illustrated by the green curve in the right panel.  Each segment of the green curve has a slope given by the height of the corresponding line segment in the left panel.  To see this correspondence, you can move the pink points in either panel.  The matching segments of the approximated <m>f(t)</m> (at left) and estimate of <m>y(t)</m> (at right) are highlighted in pink.  Gray lines emphasize how we are are viewing <m>y(t)</m> as a line with slope given by the constant value of <m>f(t)</m>. The calculation for the value of <m>y(t)</m> at the end of the highlighted segment is shown in the upper right corner, which is based on the equation for a line with slope <m>f</m>.  The estimate of the value of <m>y</m> at the pink point is also shown. If you check the <q>exact</q> box, the exact solution computed by the antiderivative is <m>f</m> is shown in red (assuming <m>f(t)</m> is simple enough for its antiderivative to be computed).  In addition, the exact value of <m>y(t)</m> at the position of the pink point is displayed along with the error between the approximate and exact values.  Clearing the <q>details</q> box hides the points indicating the endpoints, as well as the line segments and pink point in the left panel.  This view reduces the clutter when <m>\Delta t</m> is small and the number of segments is large. You can change the function <m>f(t)</m> and other parameters by typing values in the corresponding boxes.  You can also change the initial condition <m>y_0</m> by dragging the blue point in the right panel.
</p>
<!-- django tag comment, , , , ,  -->

</section>


<section><title>Using Forward Euler to predict change</title>


<p>For the pure-time dynamical system of equation (1) <!-- <ref tname='pure_time' />-->, we need an initial condition in order to know the value of <m>y(t)</m>.  For the analytic solution (3) <!--<ref tname='antiderivative_solution' />--> involving the antiderivative, the arbitrary constant was important so that we could match this initial condition.
</p>

<!-- Incomplete closing sentence was commented out.-->
<p>However, what if we just wanted to predict the change in <m>y(t)</m> from the beginning point <m>t=t_0</m> to some ending point <m>t_f</m>?  In this case, does the actual value of the initial condition <m>y(t_0)</m> matter?  The change in <m>y</m> over this interval is <m>y(t_f)-y(t_0)</m>.  <!--According-->
</p>

<p>To be concrete, let's focus on the effects of varying our initial condition on the change in the approximate solution for <m>y(t)</m>.</p>

<!--the applet is in terms of x(t) rather than y(t)--> 
<p><alert>Applet:  Investigating the effects of <m>y(t_0)</m></alert></p>
  <embed width="800 px" height="350 px" encodedGeogebraContent = "" />

<p><alert>Applet details:  </alert></p>

<p>An approximate solution to the differential equation <m>\frac{ dy }{ dt }=f(t)</m> with initial condition <m>y(t_0)=y_0</m> is calculated with the Forward Euler algorithm up to time <m>t=t_f</m>.  With time step <m>\Delta t</m>, the solution <m>y(t)</m> is computed by iterating <m>y(t+\Delta t) = y(t)+\Delta t \, f(t)</m> and is plotted by the green line segments.  Specify <m>f(t)</m> by entering a function in the box.  Enter values for <m>\Delta t</m>, <m>t_0</m> and <m>t_f</m> by entering values in their corresponding boxes.  Since the number of iterations <m>n_{iter} \geq \frac{(t_f-t_0)}{\Delta t}</m> is limited in this applet to be less than 10,000, <m>\Delta t</m> is increased if the current values would lead to too many iterations.  You can specify the initial condition <m>y(t_0)</m> by moving the blue point or entering a value in the box. Clearing the <q>details</q> checkbox removes the points showing individual time steps, making the plot more readable for small <m>\Delta t</m>.  Checking the <q>exact</q> box will plot the exact solution by a thick red curve in cases where <m>y(t)</m> can be found by integrating <m>f(t)</m>. You can zoom the vertical axis with the + and - buttons and pan up and down with the buttons labeled by arrows.</p>

</section>

<!-- django tag endcomment, , , , ,  -->




<section><title>Summary of questions</title>

<p>To aid you in writing up a report on your results, we summarize the main questions posed above that you should be able to answer and added a few more questions.</p>

<p><alert>1.  The basis of Forward Euler: keeping the rate of change constant</alert></p>
  <ol>
    <li>Why does closing our eyes and pretending that     
      <m>f(t)</m> does not change equivalent to following 
      the tangent line for <m>y(t)?</m>
    </li> 
    <li> Follow the pattern outlined above and write out 
      the general Forward Euler formula to 
      estimate: <m>y(t_0+5\Delta t)</m>.
    </li>
    <li> Using this formula, compute <m>y(5)</m>for the 
      example system (5) <!--<ref tname='exampletsquared' />-->   
      with<m>\Delta t=1</m>.  Does your answer agree with 
      the above applet?
    </li> 
  </ol>




<p><alert>2. Summation notation</alert></p>
  <ol>
    <li> Write out the sums<m>\displaystyle \sum_{i=1}^5 i</m>,  
      <m>\displaystyle\sum_{j=2}^4 e^j</m>, 
      and<m>\displaystyle\sum_{\clubsuit = 0}^2 h(\clubsuit y)</m>. 
    </li>
    <li> Rewrite the expression <m>\ln(x) + \ln(2x) + \ln(3x)</m> in summation notation
    </li> 
  </ol> 
  
<p><alert>3. Forward Euler in summation notation</alert></p>
   <ol>
      <li> For the example system (5) <!-- <ref tname='exampletsquared' />--> with <m>\Delta t=1</m>, write out the formula for using Forward Euler to estimate  <m>y(10) </m>  using summation notation.  What should the top value of the summation index <m>i</m> be?
      </li> 
      <li> What is your estimate of<m>y(10)</m>? (The applet can help here.)
      </li>
      <li> If you change <m>\Delta t</m> to 0.5, how does the formula change?  What's your new estimate of <m>y(10)</m>?
      </li> 
    </ol> 

<p><alert>3. Error analysis</alert></p>
   <ol>
      <li> For<m>f(t)=t^2-10</m>, what is one possibility for <m>F(t)</m>?
      </li>
      <li> Using this value and the analytic solution (3) <!--<ref 
         tname='antiderivative_solution' />-->, calculate the exact solution <m>y(t)</m> to the example system (5)<!-- <ref tname='exampletsquared' />--> and the exact value of <m>y(10)</m>.  Your answer should agree with the exact solution calculated by the applet.
      </li>
      <li> What errors did your Forward Euler estimates have for <m>y(10)</m> with <m>\Delta t=1</m> and <m>\Delta t=0.5</m>?
      </li> 
      <li> When you cut the time step in half, going from <m>\Delta t=1</m> to <m>\Delta t=0.5</m>, by approximately what factor did the error in <m>y(10)</m> shrink?  (We are looking for a round answer here, not the exact ratio in the measured errors.)
      </li> 
      <li> Use this observation to predict the error if you cut <m>\Delta t</m> in half once again to <m>\Delta t = 0.25</m>.  Is your prediction born out?  How small must you make <m>\Delta t</m> to get the error less than 1?
      </li> 
      <li> Based on these observations, does it seem reasonable that as <m>\Delta t</m> shrinks to zero, the error in the estimate of <m>y(t)</m> will shrink to zero?  Why or why not?
      </li>  
    </ol>
 

<p><alert>4. Looking ahead</alert></p>
    <ol>
      <li> Does the Backward Euler algorithm do any better than the Forward Euler algorithm?  How does the error compare?  Is it much better or much worse, or does it give approximately the same amount of error? (If their performances are with 10%-20% of each other, categorize as approximately the same.)</li>
     <li> What happens to the error in the estimate of <m>y(10)</m> if you cut <m>\Delta t</m> from 1 to 0.5 using Backward Euler?  By what factor does the error go down?  How about if you cut <m>\Delta t</m> in half again?
     </li>
     <li> If you make<m>\Delta t=0.1</m>, how does the error in Backward Euler compare to Forward Euler?
     </li>
     <li> For the method where you can use the slope in the middle of the interval, were you able to reproduce Forward Euler and Backward Euler with <m>p=0</m> and <m>p=1</m>?</li> 
     <li> Can you find a value of <m>p</m> that is better than <m>p=0</m> or <m>p=1</m>? 
     </li> 
     <li> For what value of <m>p</m> does the error in <m>y(10)</m> get reduced by the largest value when you cut <m>\Delta t</m> from 1 to 0.5.  Is the error further reduced by the same factor when you cut <m>\Delta t</m> in half again?
     </li>
     <li> For the best value of <m>p</m>, if you make <m>\Delta t=0.1</m>, how does the error compare to Forward Euler and Backward Euler?  Is it much better or much worse, or does it give approximately the same amount of error? (If their performances are with 10%-20% of each other, categorize as approximately the same.)
     </li>
    </ol>
</section>
