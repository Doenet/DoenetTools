<ref createButton="true" uri="doenet:doenetId=DG5JOeFNTc5rpWuf2uA-q">Back to Component Index</ref>
<document><title><tag>abs</tag> component</title>

<section><title>Associated Attributes</title>
<ul>
  <li>none exclusive to this component</li>
    <aside><title>Attributes inherited from parent component <tag><ref>math</ref></tag> </title>
    <li><attr>simplify</attr>
      <em>(text)</em></li>
    <li><attr>format</attr>  <em>(text)</em></li>
    <li><attr>expand</attr>  <em>(boolean)</em></li>
    <li><attr>displayDigits</attr>  <em>(integer)</em></li>
    <li><attr>displayDecimals</attr>  <em>(integer)</em></li>
    <li><attr>displaySmallAsZero</attr>  <em>(number)</em></li>
    <li><attr>renderMode</attr>  <em>(text)</em></li>
    <li><attr>unordered</attr>  <em>(boolean)</em></li>
    <li><attr>createVectors</attr>  <em>(boolean)</em></li>
    <li><attr>createIntervals</attr>  <em>(boolean)</em></li>
    <li><attr>functionSymbols</attr>  <em>(textList)</em></li>
    <li><attr>targetsAreFunctionSymbols</attr>  <em>(textList)</em></li>
    <li><attr>splitSymbols</attr> <em>(boolean)</em></li>
    <li><attr>groupCompositeReplacements</attr> <em>(boolean)</em></li></aside>
</ul>

</section>


<section><title>Description</title>
<!--use <ref> on all component names (other than the one indexed from this file) in this section only-->
  <p>The <tag>abs</tag><idx><tag>abs</tag></idx> component renders the result of the absolute value function evaluated at the argument if the argument is a <tag><ref>number</ref></tag> or a numerical mathematical expression, and returns a symbolic expression if the argument is a <tag><ref>function</ref></tag> with the <attr>symbolic</attr> attribute specified.  See examples below.</p>
</section> 

  
<section><title>Usage Examples</title>


<subsection><title>Example 1:  basic use of <tag>abs</tag> component</title>
<p>In the sample code below, the <tag>abs</tag> component is used nested within a mathematical display, or <tag><ref>m</ref></tag> component.</p>
<example boxed="true"><title>Sample DoenetML code (Example 1)</title>
<pre>
&lt;p&gt;
  &lt;m&gt;|-5| = &lt;abs&gt;-5&lt;/abs&gt;&lt;/m&gt; 
&lt;/p&gt;
</pre>
  </example>
</subsection>
   
<!--*******************************************************-->
 
<example><title>What Doenet Renders (Example 1)</title>
<p>
  <m>|-5| = <abs>-5</abs></m>
</p>
      </example>
   

<!--******************************************************-->

<subsection><title>Example 2: <tag>abs</tag> use within a <tag>function</tag></title>
<p>In the sample code below, two functions are defined with the 
<tag><ref>function</ref></tag> component:  function <m>g(x)</m> 
which does not include the <tag>abs</tag> component and function 
<m>f(x)</m> which does include the <tag>abs</tag> component. The 
function formulas are displayed using the <tag><ref>copy</ref></tag>
component.</p>
<example boxed="true"><title>Sample DoenetML code (Example 2)</title>
<pre>
&lt;setup&gt;
  &lt;function name="g" variables="x"&gt;cos(x+(pi/3))&lt;/function&gt;
  &lt;function name="f" variables="x"&gt;&lt;abs&gt;cos(x+(pi/3))&lt;/abs&gt;&lt;/function&gt;
  &lt;variable name="x_input"&gt;pi/2&lt;/variable&gt;
&lt;/setup&gt;

&lt;p&gt;
  Let &lt;m&gt;x = &dollar;x_input&lt;/m&gt;.  Then,
  &lt;me&gt;
    g(x) = &lt;copy prop="formula" tname="g"/&gt; = 
      &lt;evaluate function="&dollar;g" input="&dollar;x_input" displayDecimals="3"/&gt;
  &lt;/me&gt;
  &lt;me&gt;
    f(x) = &lt;copy prop="formula" tname="f"/&gt; = 
      &lt;evaluate function="&dollar;f" input="&dollar;x_input" displayDecimals="3"/&gt;
  &lt;/me&gt;
&lt;/p&gt;

</pre>
        </example>
      </subsection>

<!--*******************************************************-->
 
 
<example><title>What Doenet Renders (Example 2)</title>
<setup>
  <function name="g" variables="x">cos(x+(pi/3))</function>
  <function name="f" variables="x"><abs>cos(x+(pi/3))</abs></function>
  <variable name="x_input">pi/2</variable>
</setup>

<p>
  Let <m>x = $x_input</m>.  Then,
  <me>
    g(x) = <copy prop="formula" tname="g"/> = 
      <evaluate function="$g" input="$x_input" displayDecimals="3"/>
  </me>
  <me>$g</me>
  <me>
    f(x) = <copy prop="formula" tname="f"/> = 
      <evaluate function="$f" input="$x_input" displayDecimals="3"/>
  </me>
</p>
      </example>
   

<!--******************************************************-->    
 
<subsection><title>Example 3: Application of <tag>abs</tag> with user input and two types of output.</title>
<p>In the sample code below, the <tag>abs</tag> component is used
within a <tag>function</tag>.  A <tag><ref>mathInput</ref></tag>
supplies values for two variables, <m>x</m> and <m>y</m>, and then
the <tag><ref>evaluate</ref></tag> component is used to render
solutions to the function evaluation in both numerical and
symbolic format.</p>
<example boxed="true"><title>Sample DoenetML code (Example 3)</title>
<pre>
&lt;p&gt;We define a function &lt;m&gt;f(x,y) = &lt;/m&gt;&lt;function name="f" variables="x y"&gt;&lt;abs&gt;x - y&lt;/abs&gt;^3&lt;/function&gt;&lt;/p&gt;

&lt;p&gt;
  &lt;m>&gt;x = &lt;/m&gt;&lt;mathInput name="user_x"/&gt;
&lt;/p&gt;
&lt;p&gt;
  &lt;m&gt;y = &lt;/m&gt;&lt;mathInput name="user_y"/&gt;
&lt;/p&gt;

&lt;p&gt;Default Numerical Ouptut:
  &lt;m&gt;f(x,y) = |x - y|^3 = &lt;evaluate function="&dollar;f" input="&dollar;user_x &dollar;user_y"/&gt;&lt;/m&gt;
&lt;/p&gt;
  
&lt;p&gt;Simplified Rational Output:
  &lt;m&gt;f(x,y) = |x - y|^3 = &lt;/m&gt;&lt;evaluate function="&dollar;f"  forceSymbolic="true" simplify="true" input="&dollar;user_x &dollar;user_y"/&gt;&lt;/m&gt;
&lt;/p&gt;
</pre>
        </example> 
      </subsection>
    
<!--*******************************************************-->
    
  
<example newNameSpace><title>What Doenet Renders (Example 3)</title>


<p>We define a function <m>f(x,y) = </m><function name="f" variables="x y"><abs>x - y</abs>^3</function></p>

<p>
  <m>x = </m><mathInput name="user_x"/>
</p>
<p>
  <m>y = </m><mathInput name="user_y"/>
</p>

<p>Default Numerical Ouptut:
  <m>f(x,y) = |x - y|^3 = <evaluate function="$f" input="$user_x $user_y"/></m>
</p>

  
<p>Simplified Rational Output:
  <m>f(x,y) = |x - y|^3 = <evaluate function="$f"  forceSymbolic="true" simplify="true" input="$user_x $user_y"/></m>
</p>
      </example> 
   
  
  
<aside newNameSpace><title>Alternate Method: (using symbolic <m>|x|</m>) </title>

<t
<example boxed="true"><title>Sample DoenetML code (Example 3 Alternate)</title>
<p>
  <em>Note, this function can also be defined in the following manner (see comparison below):</em>
</p>
  
<pre>
&lt;p&gt;
  &lt;m&gt;f(x,y) = &lt;/m&gt;&lt;function name="f" symbolic="true" simplify="true" variables="x y"&gt;(|x - y|)^(3)&lt;/function&gt;
&lt;/p&gt;
&lt;p&gt;
  &lt;m&gt;x = &lt;/m&gt;&lt;mathInput name="user_x"/&gt;
&lt;/p&gt;
&lt;p&gt;
  &lt;m&gt;y = &lt;/m&gt;&lt;mathInput name="user_y"/&gt;
&lt;/p&gt;

&lt;p&gt;Default Numerical Ouptut:
  &lt;m&gt;f(x,y) = |x - y|^3 = &lt;number&gt;&dollar;&dollar;f(&dollar;user_x, &dollar;user_y)&lt;/number&gt;&lt;/m&gt;
&lt;/p&gt;

&lt;p&gt;Simplified Rational Output:
  &lt;m&gt;f(x,y) = |x - y|^3 = &dollar;&dollar;f(&dollar;user_x, &dollar;user_y)&lt;/m&gt;
&lt;/p&gt;

</pre>
<em>Note that wrapping the function evaluation statement in a <tag><ref>number</ref></tag> tag allows for numerical evaluation of the symbolic function <m>f</m>.</em> 
      </example>
   
<!--*******************************************************-->
 

<example><title>What Doenet Renders (Example 3 Alternate)</title>

<p>
  <m>f(x,y) = </m><function name="f" symbolic="true" simplify="true" variables="x y">(|x - y|)^(3)</function>
</p>
<p>
  <m>x = </m><mathInput name="user_x"/>
</p>
<p>
  <m>y= </m><mathInput name="user_y"/>
</p>

<p>Default Numerical Ouptut:
  <m>f(x,y) = |x - y|^3 = <number>$$f($user_x, $user_y)</number></m>
</p>

<p>Simplified Rational Output:
  <m>f(x,y) = |x - y|^3 = $$f($user_x, $user_y)</m>
</p>
        </example>    
</aside>
  
</section>
</document>














