<title>Sort</title>

<p>We now have a very basic <tag>sort</tag> that works only with numbers and points.  (No sugar yet, so you must specify individual <tag>number</tag>, <tag>numberList</tag>, <tag>math</tag>, <tag>mathList</tag>, <tag>point</tag> tags.  (For points, looks only at the first coordinate.)</p>

<tabular>
  <row bottom="minor" header>
    <cell>DoenetML</cell>
    <cell>Rendered</cell>
  </row>
  <row>
    <cell>
      <pre>
&lt;aslist&gt;
  &lt;sort&gt;
    &lt;number&gt;3&lt;/number&gt;
    &lt;number&gt;-2&lt;/number&gt;
    &lt;math&gt;2/pi&lt;/math&gt;
    &lt;math&gt;e&lt;/math&gt;
    &lt;number&gt;Infinity&lt;/number&gt;
    &lt;math&gt;-Infinity&lt;/math&gt;
    &lt;mathlist&gt;3/4 -1&lt;/mathlist&gt;
    &lt;point&gt;(2,-11)&lt;/point&gt;
    &lt;numberList&gt;-3/4 1/e&lt;/numberList&gt;
  &lt;/sort&gt;
&lt;/aslist&gt;
      </pre>
    </cell>
    <cell>
<aslist>
  <sort>
    <number>3</number>
    <number>-2</number>
    <math>2/pi</math>
    <math>e</math>
    <number>Infinity</number>
    <math>-Infinity</math>
    <mathlist>3/4 -1</mathlist>
    <point>(2,-11)</point>
    <numberList>-3/4 1/e</numberList>
  </sort>
</aslist>
    </cell>
  </row>
</tabular>


<p>Dynamically sort numbers: 
  <mathInput prefill="e" name="mi1" />
  <mathInput prefill="sqrt(2)" name="mi2" />
  <mathInput prefill="Infinity" name="mi3" />
  <mathInput prefill="-2/0" name="mi4" />
  <mathInput prefill="3" name="mi5" />
  <mathInput prefill="8" name="mi6" />
</p>

<p>Result: <aslist><sort>$mi1$mi2$mi3$mi4$mi5$mi6</sort></aslist></p>

<p>Note: sort doesn't currently work if any of the expressions are non-numerical.</p>


<p>Bezier curve that uses sorted points:</p>


<graph>
  <point name="A">(3,-5)</point>
  <point name="B">(7,2)</point>
  <point name="C">(-4,0)</point>

  <sort hide name="sorted">$A$B$C</sort>

  <curve through="$sorted" />
  
</graph>