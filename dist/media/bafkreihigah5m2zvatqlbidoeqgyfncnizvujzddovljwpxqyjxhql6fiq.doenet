<ref createButton="true" uri="doenet:doenetId=DG5JOeFNTc5rpWuf2uA-q">Back to Component Index</ref>

<document><title><tag>math</tag> component</title>

<section><title>Associated Attributes</title>
<ul>
  <li><attr>simplify</attr>  <em>(text)</em></li>
  <li><attr>format</attr>  <em>(text)</em></li>
  <li><attr>expand</attr>  <em>(boolean)</em></li>
  <li><attr>displayDigits</attr>  <em>(integer)</em></li>
  <li><attr>displayDecimals</attr>  <em>(integer)</em></li>
  <li><attr>displaySmallAsZero</attr>  <em>(number)</em></li>
  <li><attr>renderMode</attr>  <em>(text)</em></li>
  <li><attr>unordered</attr>  <em>(boolean)</em></li>
  <li><attr>createVectors</attr>  <em>(boolean)</em></li>
  <li><attr>createIntervals</attr>  <em>(boolean)</em></li>
  <li><attr>functionSymbols</attr>  <em>(textList)</em></li>
  <li><attr>targetsAreFunctionSymbols</attr>  <em>(textList)</em></li>
  <li><attr>splitSymbols</attr>  <em>(boolean)</em></li>
  <li><attr>groupCompositeReplacements</attr>  <em>(boolean)</em></li>
</ul>

</section>


<section><title>Description</title>
<!--use <ref> on all component names (other than the one indexed from this file) in this section only-->
  <p>The <tag>math</tag><idx><tag>math</tag></idx> component signals to Doenet that the enclosed expression contains mathematical content. This content may be evaluated using the <attr>simplify</attr> attribute, or it may be rendered to the viewer in the form of an expression.  Mathematical functions such as <m>\sin(x)</m>, <m>\log(x)</m>, and <m>\pi^2</m> as well as many other functions are interpreted by Doenet when nested within a <tag>math</tag> component.  The table below shows the DoenetML equivalent of some more common mathematical functions. For a full list, see <ref uri="doenet:doenetId=11kv_2knqH_H81PUGeF9F">Mathematical Content</ref>. 
 See examples below the table for usage of the <tag>math</tag> component.</p>

<table><title>Common Mathematical Functions and DoenetML</title>
  <tabular bottom="minor" top="minor" left="minor" right="minor">
    <row header="true">
      <cell>Function</cell>
      <cell>DoenetML within <tag>math</tag></cell>
      <cell><em>Rendered value</em></cell>
      <cell>DoenetML for Evaluation</cell>
      <cell><em>Rendered value</em></cell>
    </row>
    <row>
      <cell><m>\sin(x)</m></cell>
      <cell><c>&lt;math&gt;sin(pi/2)&lt;/math&gt;</c></cell>
      <cell><math>sin(pi/2)</math></cell>
      <cell><c>&lt;math simplify&gt;sin(pi/2)&lt;/math&gt;</c></cell>
      <cell><math simplify>sin(pi/2)</math></cell>
    </row>
    <row>
      <cell><m>\cos(x)</m></cell>
      <cell><c>&lt;math&gt;cos(2 pi)&lt;/math&gt;</c></cell>
      <cell><math>cos(2 pi)</math></cell>
      <cell><c>&lt;math simplify&gt;cos(2 pi)&lt;/math&gt;</c></cell>
      <cell><math simplify>cos(2 pi)</math></cell>
    </row>
    <row>
      <cell><m>\tan(x)</m></cell>
      <cell><c>&lt;math&gt;tan(pi/4)&lt;/math&gt;</c></cell>
      <cell><math>tan(pi/3)</math></cell>
      <cell><c>&lt;math simplify&gt;tan(pi/4)&lt;/math&gt;</c></cell>
      <cell><math simplify>tan(pi/4)</math></cell>
    </row>
    <row>
      <cell><m>|x|</m></cell>
      <cell><c>&lt;math&gt;abs(-2)&lt;/math&gt;</c></cell>
      <cell><math>abs(-2)</math></cell>
      <cell><c>&lt;math simplify&gt;abs(-2)&lt;/math&gt;</c></cell>
      <cell><math simplify>abs(-2)</math></cell>
    </row>
    <row>
      <cell><m>e^x</m></cell>
      <cell><c>&lt;math&gt;e^(2x+x)&lt;/math&gt;</c></cell>
      <cell><math>e^(2x+x)</math></cell>
      <cell><c>&lt;math simplify&gt;e^(2x+x)&lt;/math&gt;</c></cell>
      <cell><math simplify>e^(2x+x)</math></cell>
    </row>
    <row>
      <cell><m>\log(x)</m>, or <m>\ln(x)</m></cell>
      <cell><c>&lt;math&gt;log(e)&lt;/math&gt;</c></cell>
      <cell><math>log(e)</math></cell>
      <cell><c>&lt;math simplify&gt;log(e)&lt;/math&gt;</c></cell>
      <cell><math simplify>log(e)</math></cell>
    </row>
    <row>
      <cell><m>\log_{10} (x)</m></cell>
      <cell><c>&lt;math&gt;log10(100)&lt;/math&gt;</c></cell>
      <cell><math>log10(100)</math></cell>
      <cell><c>&lt;math simplify&gt;log10(100)&lt;/math&gt;</c></cell>
      <cell><math simplify>log10(100)</math></cell>
    </row>
    <row>
      <cell><m>\sqrt{x}</m></cell>
      <cell><c>&lt;math&gt;sqrt(4)&lt;/math&gt;</c></cell>
      <cell><math>sqrt(4)</math></cell>
      <cell><c>&lt;math simplify&gt;sqrt(4)&lt;/math&gt;</c></cell>
      <cell><math simplify>sqrt(4)</math></cell>
    </row>
    <row>
      <cell><m>x!</m></cell>
      <cell><c>&lt;math&gt;factorial(5)&lt;/math&gt;</c></cell>
      <cell><math>5!</math></cell>
      <cell><c>&lt;math simplify&gt;5!&lt;/math&gt;</c></cell>
      <cell><math simplify>5!</math></cell>
    </row>
  </tabular>
</table>
</section> 

  
<section><title>Usage Examples</title>

<subsection><title>Example 1:  Using <tag>math</tag> with <attr>simplify</attr> attribute </title>
<p>In the sample code below, the <tag>math</tag> component is used to define a polynomial expression and then simplified by combining like terms. There are four valid values for the <attr>simplify</attr> attribute: <c>"none"</c>, <c>"full"</c>, <c>"numbers"</c>, and <c>"numbersPreserveOrder"</c>.  If only <c>"simplify"</c> is specified, the default value is <c>"full"</c>, as shown in <alert>Part 1</alert></p>  
<p>Once defined, a <tag>math</tag> can be referenced by <c>&dollar;name</c>, as illustrated in <alert>Part 2</alert>. (See also <ref uri="doenet:doenetId=p6ag34ShuMOnmaYw4GJcU"><tag>alert</tag></ref>,  <ref uri="doenet:doenetId=GCM8z3SDsbj9yZSkHW3YB"><tag>m</tag></ref>.)</p>

<example boxed="true"><title>Sample DoenetML code (Example 1)</title>
<pre>
&lt;p&gt;&lt;alert&gt;Part 1:&lt;/alert&gt;&lt;/p&gt;
&lt;p&gt;
  &lt;m&gt;
  &lt;math name="expression"&gt;2x^2 + 4x + x + x^2 + 5&lt;/math&gt; = 
  &lt;math name="simplified" simplify&gt;2x^2 + 4x + x + x^2 + 5&lt;/math&gt;
  &lt;/m&gt;
&lt;/p&gt;

&lt;p&gt;&lt;alert&gt;Part 2:&lt;/alert&gt;&lt;/p&gt;
&lt;p&gt;
  &lt;m&gt;&dollar;expression = &dollar;simplified&lt;/m&gt;
&lt;/p&gt;
</pre>
        </example>
      </subsection>
  
<!--*******************************************************-->
 
<example><title>What Doenet Renders (Example 1)</title>

<p><alert>Part 1:</alert></p>
<p>
  <m>
  <math name="expression">2x^2 + 4x + x + x^2 + 5</math> = 
  <math name="simplified" simplify>2x^2 + 4x + x + x^2 + 5</math>
  </m>
</p>

<p><alert>Part 2:</alert></p>
<p>
  <m>$expression = $simplified</m>
</p>
</example>


<!--******************************************************-->

<subsection><title>Example 2:  <tag>math</tag> with different specifications of the <attr>simplify</attr> attribute</title>

<p>In the sample code below, a <ref uri="doenet:doenetId=zRuXlzQ0_iNqNqZHHQMxG"><tag>table</tag></ref> is constructed that illustrates how a <tag>math</tag> component is rendered for each different value for the <attr>simplify</attr> attribute.  The <attr>simplify</attr> attribute accepts the following text values: 
<c>"full", "none", "numbers", and "numbersPreserveOrder"</c>. (See also <ref uri="doenet:doenetId=gHn9-Jhc4JFQpUKxVPCE2"><tag>setup</tag></ref>, <ref uri="doenet:doenetId=Jwl0ys4sdoUIkguMBx0he"><tag>function</tag></ref>, and <ref uri="doenet:doenetId=A-WNVoHYi-eREt6v9JBmk"><tage>copy</tage></ref>.)</p>
<example boxed="true"><title>Sample DoenetML code (Example 2) </title>
<pre>
&lt;setup&gt;
  &lt;function name="f"&gt;2x + 4 + 3x + 7 + 2 - 2y&lt;/function&gt;
&lt;/setup&gt;

&lt;p&gt;&lt;alert&gt;The original function is: &lt;copy prop="formula" tname="f"/&gt;&lt;/alert&gt;&lt;/p&gt;
&lt;table number="false"&gt;&lt;title&gt;Ways to simplify a &lt;tag&gt;math&lt;/tag&gt;&lt;/title&gt;
  &lt;tabular bottom="minor" top="minor" left="minor" right="minor"&gt;
    &lt;row header="true"&gt;
      &lt;cell&gt;&lt;attr&gt;simplify&lt;/attr&gt; specification&lt;/cell&gt;
      &lt;cell&gt;What DoenetML renders&lt;/cell&gt;
    &lt;/row&gt;
    &lt;row&gt;
      &lt;cell&gt;&lt;c&gt;simplify="none"&lt;/c&gt;&lt;/cell&gt;
      &lt;cell&gt;&lt;m&gt;f(x) = &lt;math simplify="none"&gt;&dollar;f&lt;/math&gt;&lt;/m&gt;&lt;/cell&gt;
    &lt;/row&gt;
    &lt;row&gt;
      &lt;cell&gt;&lt;c&gt;simplify&lt;/c&gt;&lt;/cell&gt;
      &lt;cell&gt;&lt;m&gt;f(x) = &lt;math simplify&gt;&dollar;f&lt;/math&gt;&lt;/m&gt;&lt;/cell&gt;
    &lt;/row&gt;
    &lt;row&gt;
      &lt;cell&gt;&lt;c&gt;simplify="full"&lt;/c&gt;&lt;/cell&gt;
      &lt;cell&gt;&lt;m&gt;f(x) = &lt;math simplify="full"&gt;&dollar;f&lt;/math&gt;&lt;/m&gt;&lt;/cell&gt;
    &lt;/row&gt;
    &lt;row&gt;
      &lt;cell&gt;&lt;c&gt;simplify="numbers"&lt;/c&gt;&lt;/cell&gt;
      &lt;cell&gt;&lt;m&gt;f(x) = &lt;math simplify="numbers"&gt;&dollar;f&lt;/math&gt;&lt;/m&gt;&lt;/cell&gt;
    &lt;/row&gt;
    &lt;row&gt;
      &lt;cell&gt;&lt;c&gt;simplify="numbersPreserveOrder"&lt;/c&gt;&lt;/cell&gt;
      &lt;cell&gt;&lt;m&gt;f(x) = &lt;math simplify="numbersPreserveOrder"&gt;&dollar;f&lt;/math&gt;&lt;/m&gt;&lt;/cell&gt;
    &lt;/row&gt;
  &lt;/tabular&gt;
&lt;/table&gt;

</pre>
</example>
</subsection>

<!--*******************************************************-->
 
<example newNameSpace><title>What Doenet Renders (Example 2)</title>
<setup>
  <function name="f">2x + 4 + 3x + 7 + 2 - 2y</function>
</setup>

<p><alert>The original function is: <copy prop="formula" tname="f"/></alert></p>
<table number="false"><title>Ways to simplify a <tag>math</tag></title>
  <tabular bottom="minor" top="minor" left="minor" right="minor">
    <row header="true">
      <cell><attr>simplify</attr> specification</cell>
      <cell>What DoenetML renders</cell>
    </row>
    <row>
      <cell><c>simplify="none"</c></cell>
      <cell><m>f(x) = <math simplify="none">$f</math></m></cell>
    </row>
    <row>
      <cell><c>simplify</c></cell>
      <cell><m>f(x) = <math simplify>$f</math></m></cell>
    </row>
    <row>
      <cell><c>simplify="full"</c></cell>
      <cell><m>f(x) = <math simplify="full">$f</math></m></cell>
    </row>
    <row>
      <cell><c>simplify="numbers"</c></cell>
      <cell><m>f(x) = <math simplify="numbers">$f</math></m></cell>
    </row>
    <row>
      <cell><c>simplify="numbersPreserveOrder"</c></cell>
      <cell><m>f(x) = <math simplify="numbersPreserveOrder">$f</math></m></cell>
    </row>
  </tabular>
</table>

</example>
 

<!--******************************************************-->

<subsection><title>Example 3: <tag>math</tag> with <attr>format</attr> attribute</title>
<p>In the sample code below, the <tag>math</tag> component is used with the <attr>format</attr> attribute. The default value for this attribute is <c>"text"</c>, and if unspecified, the behavior of <tag>math</tag> will correspond to what is illustrated below in <alert>Part 1</alert>.  If the <attr>format</attr> is set to <c>"latex"</c>, the input text can be written in <c>latex</c> and Doenet will interpret and translate this into functional mathematical code. Therefore, as shown in <alert>Part 2</alert>, it is possible to input the desired expression in <c>latex</c> format and then evaluate it with the <attr>simplify</attr> attribute. (See also <ref uri="doenet:doenetId=p6ag34ShuMOnmaYw4GJcU"><tag>alert</tag></ref>,  <ref uri="doenet:doenetId=GCM8z3SDsbj9yZSkHW3YB"><tag>m</tag></ref>.)</p>

<example boxed="true"><title>Sample DoenetML code (Example 3)</title>
<pre>
&lt;p&gt;&lt;alert&gt;Part 1: With default format&lt;/alert&gt;&lt;/p&gt;
  &lt;m&gt;
    &lt;math format="text"&gt;1/2 + 1/3&lt;/math&gt; = 
    &lt;math format="text" simplify&gt;1/2 + 1/3&lt;/math&gt;
  &lt;/m&gt;
  
&lt;p&gt;&lt;alert&gt;Part 2: With latex format&lt;/alert&gt;&lt;/p&gt;
  &lt;m&gt;
    &lt;math format="latex"&gt;\frac{1}{2} + \frac{1}{3}&lt;/math&gt; = 
    &lt;math format="latex" simplify&gt;\frac{1}{2} + \frac{1}{3}&lt;/math&gt;
  &lt;/m&gt;
</pre>
  </example>
</subsection>
  
<!--*******************************************************-->
 
<example><title>What Doenet Renders (Example 3)</title>
<p><alert>Part 1: With default format</alert></p>
  <m>
    <math format="text">1/2 + 1/3</math> = 
    <math format="text" simplify>1/2 + 1/3</math>
  </m>
<p><alert>Part 2: With latex format</alert></p>
  <m>
    <math format="latex">\frac{1}{2} + \frac{1}{3}</math> = 
    <math format="latex" simplify>\frac{1}{2} + \frac{1}{3}</math>
  </m>

</example>

<!--******************************************************-->

<subsection><title>Example 4: <tag>math</tag> with the <attr>expand</attr> attribute</title>
<p>In the sample code below, the <attr>expand</attr> attribute is specified within the <tag>math</tag> component. The original named <tag>math</tag> expression is used as the input for the expanded expression in each case to illustrate the use of the <c>&dollar;name</c> notation.</p>

<example boxed="true"><title>Sample DoenetML code (Example 4)</title>
<pre>
&lt;p&gt;&lt;alert&gt;Factored expression:&lt;/alert&gt;
  &lt;math name="factoredExpression"&gt;(2x+8)(x-3)&lt;/math&gt;
&lt;/p&gt;
  
&lt;p&gt;&lt;alert&gt;Expanded expression:&lt;/alert&gt;
&lt;math expand="true"&gt;&dollar;factoredExpression&lt;/math&gt;
&lt;/p&gt;

&lt;p&gt;&lt;alert&gt;Factored expression:&lt;/alert&gt;
  &lt;math name="factoredExpression2"&gt;(sin(x)-cos(x))(sin(x)-cos(x))&lt;/math&gt;
&lt;/p&gt;
  
&lt;p&gt;&lt;alert&gt;Expanded expression:&lt;/alert&gt;
  &lt;math expand="true"&gt;&dollar;factoredExpression2&lt;/math&gt;
&lt;/p&gt;
</pre>
 
  </example>  
</subsection>

<!--*******************************************************-->
 
<example><title>What Doenet Renders (Example 4)</title>
<p><alert>Factored expression:</alert>
  <math name="factoredExpression">(2x+8)(x-3)</math>
</p>
  
<p><alert>Expanded expression:</alert>
<math expand="true">$factoredExpression</math>
</p>

<p><alert>Factored expression:</alert>
  <math name="factoredExpression2">(sin(x)-cos(x))(sin(x)-cos(x))</math>
</p>
  
<p><alert>Expanded expression:</alert>
  <math expand="true">$factoredExpression2</math>
</p>

</example>


  
</section>
</document>














