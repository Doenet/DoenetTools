@top Document { topLevel+ }

entity {
  Text |
  Element |
  Comment |
  MismatchedCloseTag |
  incompleteStartCloseTag
}

Element {
  OpenTag entity* (CloseTag | MissingCloseTag) |
  SelfClosingTag
}

topLevel {
  Text |
  Comment |
  Element
}

OpenTag[closedBy="CloseTag MissingCloseTag"] {
  StartTag TagName ws* Attribute* endTag
}

SelfClosingTag {
  StartTag TagName ws* Attribute* selfCloseEndTag
}

CloseTag[openedBy=OpenTag] {
  StartCloseTag ws* TagName ws* endTag
}

MismatchedCloseTag {
  mismatchedStartCloseTag TagName endTag
}

Attribute {
  AttributeName ws* |
   AttributeName ws* Is ws* AttributeValue ws*
}

AttributeValue {singleQuoteAttributeValue | doubleQuoteAttributeValue}

Comment { beginComment commentContent* "-->" }

@context elementContext from "./tokens.js"

@external tokens startTag from "./tokens.js" {
  StartTag[closedBy="SelfCloseEndTag EndTag"]
  StartCloseTag
  MissingCloseTag
  mismatchedStartCloseTag[@name=StartCloseTag]
  incompleteStartCloseTag[@name=StartCloseTag]
}

@external tokens commentContent from "./tokens.js" { commentContent }

singleQuoteAttributeValue { "'" attributeContentSingleQuote* "'" }
doubleQuoteAttributeValue { "\"" attributeContentDoubleQuote* "\"" }

@tokens {
  endTag { ">" }
  
  beginComment { "<!--" }

  selfCloseEndTag { "/>" }

  nameChar {
    std.asciiLetter | "-" | "_" | std.digit 
  }

  identifier { nameChar+ }

  TagName { identifier }

  AttributeName { identifier }

  attributeContentSingleQuote { ![']+ }

  attributeContentDoubleQuote { !["]+ }

  Is { "=" }

  Text { ("< " | "<=" | "<\n" | ![<])+  }

  ws { std.whitespace+ }

}
@detectDelim
