// [snowpack] add styles to the page (skip if no document exists)
if (typeof document !== 'undefined') {
  const code = "/* CUSTOM STYLING FOR RADIO BUTTON */\n\n/* Customize the label (the container) */\n.radio-container {\n    display: block;\n    position: relative;\n    padding-left: 24px;\n    margin-bottom: 4px;\n    cursor: pointer;\n    -webkit-user-select: none;\n    -moz-user-select: none;\n    -ms-user-select: none;\n    user-select: none;\n}\n  \n/* Hide the browser's default radio button */\n.radio-container input {\n    position: absolute;\n    opacity: 0;\n    cursor: pointer;\n    height: 1;\n    width: 1;\n}\n  \n/* Create a custom radio button */\n.radio-checkmark {\n    position: absolute;\n    top: 0;\n    left: 0;\n    height: 18px;\n    width: 18px;\n    background-color: #eee;\n    border-style: solid;\n    border-color: #000;\n    border-radius: 50%;\n}\n  \n/* On mouse-over, add a grey background color */\n.radio-container:hover input ~ .radio-checkmark {\n    background-color: var(--lightBlue);\n}\n  \n/* When the radio button is checked, add a blue background */\n.radio-container input:checked ~ .radio-checkmark {\n    background-color: var(--mainBlue);\n}\n\n/* When a radio button has focus, add a dark blue outline */\n.radio-container:focus-within input ~ .radio-checkmark {\n    outline: 2px solid var(--mainBlue);\n    outline-offset: 2px;\n}\n  \n/* Create the indicator (the dot/circle - hidden when not checked) */\n.radio-checkmark:after {\n    content: \"\";\n    position: absolute;\n    display: none;\n}\n  \n/* Show the indicator (dot/circle) when checked */\n.radio-container input:checked ~ .radio-checkmark:after {\n    display: block;\n}\n  \n/* Style the indicator (dot/circle) */\n.radio-container .radio-checkmark:after {\n    top: 6px;\n    left: 6px;\n    width: 6px;\n    height: 6px;\n    border-radius: 50%;\n    background: white;\n}\n\n/* CUSTOM STYLING FOR CHECKBOX */\n\n/* Customize the label (the container) */\n.checkbox-container {\n    display: block;\n    position: relative;\n    padding-left: 24px;\n    margin-bottom: 4px;\n    cursor: pointer;\n    -webkit-user-select: none;\n    -moz-user-select: none;\n    -ms-user-select: none;\n    user-select: none;\n}\n  \n/* Hide the browser's default checkbox */\n.checkbox-container input {\n    position: absolute;\n    opacity: 0;\n    cursor: pointer;\n    height: 1;\n    width: 1;\n}\n  \n/* Create a custom checkbox */\n.checkbox-checkmark {\n    position: absolute;\n    top: 0;\n    left: 0;\n    height: 18px;\n    width: 18px;\n    background-color: #eee;\n    border-style: solid;\n    border-color: #000;\n    border-radius: var(--mainBorderRadius);\n}\n  \n/* On mouse-over, add a light blue background color */\n.checkbox-container:hover input ~ .checkbox-checkmark {\n    background-color: var(--lightBlue);\n}\n  \n/* When the checkbox is checked, add a dark blue background */\n.checkbox-container input:checked ~ .checkbox-checkmark {\n    background-color: var(--mainBlue);\n}\n\n/* When a checkbox has focus, add a dark blue outline */\n.checkbox-container:focus-within input ~ .checkbox-checkmark {\n    outline: 2px solid var(--mainBlue);\n    outline-offset: 2px;\n}\n  \n/* Create the checkmark/indicator (hidden when not checked) */\n.checkbox-checkmark:after {\n    content: \"\";\n    position: absolute;\n    display: none;\n}\n  \n/* Show the checkmark when checked */\n.checkbox-container input:checked ~ .checkbox-checkmark:after {\n    display: block;\n}\n  \n/* Style the checkmark/indicator */\n.checkbox-container .checkbox-checkmark:after {\n    left: 5px;\n    top: 1px;\n    width: 5px;\n    height: 10px;\n    border: solid white;\n    border-width: 0 3px 3px 0;\n    -webkit-transform: rotate(45deg);\n    -ms-transform: rotate(45deg);\n    transform: rotate(45deg);\n}\n\n/* CUSTOM STYLING FOR SELECT */\n.custom-select {\n    border: var(--mainBorder);\n    border-radius: var(--mainBorderRadius);\n    height: 24px;\n    margin: 0px 4px 4px 0px;\n}\n\n.custom-select:hover {\n    background: var(--lightBlue);\n}\n\n.custom-select:focus-within {\n    outline: var(--mainBorder);\n    outline-offset: 2px;\n}";

  const styleEl = document.createElement("style");
  const codeEl = document.createTextNode(code);
  styleEl.type = 'text/css';
  styleEl.appendChild(codeEl);
  document.head.appendChild(styleEl);
}