import{l as m,m as A,g as s,j as u,B as c,k as f}from"./index-61b6fc23.js";import{l as b}from"./CourseToolHandler-d3da4c3a.js";import{numberOfAttemptsAllowedAdjustmentAtom as w,currentAttemptNumber as N,cidChangedAtom as g}from"./AssignmentViewer-ce09819c.js";import"./index-1380c04c.js";import"./index-fcf36459.js";import"./index-47ca4f11.js";import"./index.esm-d246f4c9.js";import"./setPrototypeOf-51e8cf87.js";/* empty css             */import"./ButtonGroup-6d856500.js";import"./ActivityViewer-5e9601b2.js";import"./activityUtils-3e149527.js";import"./visibility-sensor-398e690f.js";import"./ActionButton-be9a12e7.js";import"./RoleDropdown-c9fff172.js";import"./DropdownMenu-5673dfd7.js";function q(){const o=m(A("doenetId")),[i,p]=s(w),[l,a]=s(N),{numberOfAttemptsAllowed:n}=m(b(o)),d=m(g);let e=null;n!==null&&(e=Number(n)+Number(i));const r=e===null||l<e;return u(c,{value:"New Attempt",dataTest:"New Attempt",disabled:!r,onClick:async function(){if(r){if(d){let t=await f.post("/api/incrementAttemptsAllowedIfCidChanged.php",{doenetId:o});t.data.cidChanged&&p(Number(t.data.newNumberOfAttemptsAllowedAdjustment))}a(t=>t+1)}}})}export{q as default};
