import{l as N,m as j,bl as q,y as L,r as b,k as y,z as v,v as V,b1 as z,a as l,j as a,B as G,ay as J}from"./index-7c464f87.js";import{p as U}from"./index-454bfe04.js";import{B as I}from"./ButtonGroup-bc0b5002.js";import{C as Y}from"./CollapseSection-1ac928d3.js";function $(e,r){switch(r.type){case"mount":return{...r.payload};case"min":return{...e,min:r.payload.min>1?r.payload.min:1,max:e.max<r.payload.min?r.payload.min:e.max,pref:e.pref<r.payload.min?r.payload.min:e.pref};case"max":return{...e,min:e.min,max:e.min<=r.payload.max?r.payload.max:e.max,pref:e.pref<r.payload.max?r.payload.max:e.pref};case"pref":return{...e,pref:e.min<=r.payload.pref&&r.payload.pref<=e.max?r.payload.pref:e.pref};case"preAssigned":try{y.post("/api/updateGroupSettings.php",{...e,preAssigned:r.payload.preAssigned,doenetId:r.payload.doenetId})}catch(d){console.error(d)}return{...e,preAssigned:r.payload.preAssigned};case"isReleased":return{...e,isReleased:r.payload.isReleased};case"save":try{y.post("/api/updateGroupSettings.php",{...e,doenetId:r.payload.doenetId})}catch(d){console.error(d)}return e;default:throw new Error("Invaild groupSettings dispach")}}function S(e){for(var r=e.length,d,s;r;)s=Math.floor(Math.random()*r--),d=e[r],e[r]=e[s],e[s]=d;return e}const R=J({key:"csvGroups",default:{namesByGroup:[],emailsByGroup:[]}});function X(){const e=N(j("doenetId")),{emailsByGroup:r}=N(R(e)),d=q(R(e)),s=L(),[{min:A,max:w,pref:E,preAssigned:f,isReleased:O},t]=b.useReducer($,{min:0,max:0,pref:0,preAssigned:0,isReleased:0}),k=b.useCallback(async(n,m)=>{try{const{data:{entries:o}}=await y.get("/api/loadCollection.php",{params:{doenetId:n}});if((o==null?void 0:o.length)>0){const p=S(o),c=S([...m]);y.post("/api/assignCollection.php",{doenetId:n,groups:JSON.stringify(c),entries:JSON.stringify(p)}),t({type:"isReleased",payload:{isReleased:"1"}})}else s("Please add at least one entry to the collection before assigning",v.ERROR)}catch(o){console.error(o)}},[s]);b.useCallback(()=>{},[]);const _=V(({set:n})=>m=>{const o=new FileReader;o.onabort=()=>{},o.onerror=()=>{},o.onload=()=>{U(o.result,{comment:"#"},function(p,c){if(p)console.error(p),s(`CSV invalid – Error: ${p}`,v.ERROR);else{const g=c.shift(),C=g.indexOf("Email"),B=g.indexOf("Group Number"),P=g.indexOf("First Name"),M=g.indexOf("Last Name"),i={namesByGroup:[],emailsByGroup:[]};if(C===-1)s('File missing "Email" column header',v.ERROR);else if(B===-1)s('File missing "Group Number" column header',v.ERROR);else for(let u in c){let x=c[u],h=x[B]-1;i.emailsByGroup[h]||(i.emailsByGroup[h]=[],i.namesByGroup[h]=[]),i.emailsByGroup[h].push(x[C]),i.namesByGroup[h].push({firstName:x[P]??"",lastName:x[M]??""})}for(let u=0;u<i.emailsByGroup.length;u++)i.emailsByGroup[u]||(i.emailsByGroup[u]=[],i.namesByGroup[u]=[]);n(R(e),i)}})},o.readAsText(m[0])},[s,e]),{getRootProps:F,getInputProps:T,isDragActive:D}=z({onDrop:_});return b.useEffect(()=>{let n=!0;async function m(o){try{const p=await y.get("/api/loadGroupSettings.php",{params:{doenetId:o}});n&&t({type:"mount",payload:p.data})}catch(p){console.error(p)}}return e!==""&&m(e),()=>{n=!1,d()}},[e,d]),l("div",{children:[l("label",{children:["Pre-Assigned Groups:",a("input",{type:"checkbox",checked:f==="1",value:f==="1",onChange:n=>{t({type:"preAssigned",payload:{preAssigned:n.target.checked?"1":"0",doenetId:e}})}})]}),a("br",{}),f==="1"?l("div",{children:[l("div",{...F(),children:[a("input",{...T()}),D?a("p",{children:"Drop files here"}):a(I,{children:a(G,{value:"Upload CSV",width:"menu"})})]},"drop"),a("br",{}),l(Y,{title:"Formatting Instructions",collapsed:!0,children:[a("p",{children:"Your file needs to contain email address and group number columns. They can be in any order, but the headers are case sensitive."}),a("p",{children:"Name fields are displayed for convenience – only required data is used to assign the Collection"}),a("div",{children:a("b",{children:"First Name"})}),a("div",{children:a("b",{children:"Last Name"})}),a("div",{children:a("b",{children:"Email (required)"})}),a("div",{children:a("b",{children:"Group Number (required)"})}),a("p",{children:"NOTE: The parser will ignore columns which are not listed."})]})]}):l("div",{children:[l("label",{children:["Min Studnets:",a("input",{type:"number",value:A,onChange:n=>{t({type:"min",payload:{min:n.target.value}})}})]},"min"),a("br",{}),l("label",{children:["Max Students:",a("input",{type:"number",value:w,onChange:n=>{t({type:"max",payload:{max:n.target.value}})}})]},"max"),a("br",{}),l("label",{children:["Preferred Students:",a("input",{type:"number",value:E,onChange:n=>{t({type:"pref",payload:{pref:n.target.value}})}})]},"pref"),a("br",{})]}),a("br",{}),l(I,{vertical:!0,children:[f==="1"?null:a(G,{width:"menu",value:"Save",onClick:()=>{t({type:"save",payload:{doenetId:e}})}}),a(G,{alert:!0,disabled:O==="1",width:"menu",value:"Assign Collection",onClick:()=>{k(e,r)}})]})]})}export{R as csvGroups,X as default};
