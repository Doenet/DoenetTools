import{l as m,m as A,g as s,j as u,B as c,k as f}from"./index-e32334a0.js";import{l as b}from"./CourseToolHandler-b2998498.js";import{numberOfAttemptsAllowedAdjustmentAtom as w,currentAttemptNumber as N,cidChangedAtom as g}from"./AssignmentViewer-f7a0da3c.js";import"./index-474338c9.js";import"./index-fcf36459.js";import"./index-47ca4f11.js";import"./index.esm-64a1c96d.js";import"./setPrototypeOf-51e8cf87.js";/* empty css             */import"./ButtonGroup-392052de.js";import"./ActivityViewer-23fe8728.js";import"./activityUtils-5de6b1c8.js";import"./visibility-sensor-cd87b47d.js";import"./ActionButton-61eef94e.js";import"./RoleDropdown-5eaaee97.js";import"./DropdownMenu-42431630.js";function q(){const o=m(A("doenetId")),[i,p]=s(w),[l,a]=s(N),{numberOfAttemptsAllowed:n}=m(b(o)),d=m(g);let e=null;n!==null&&(e=Number(n)+Number(i));const r=e===null||l<e;return u(c,{value:"New Attempt",dataTest:"New Attempt",disabled:!r,onClick:async function(){if(r){if(d){let t=await f.post("/api/incrementAttemptsAllowedIfCidChanged.php",{doenetId:o});t.data.cidChanged&&p(Number(t.data.newNumberOfAttemptsAllowedAdjustment))}a(t=>t+1)}}})}export{q as default};
