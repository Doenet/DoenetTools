<module name="initialCobwebTutorial">
  <setup>
    <customAttribute componentType="function" attribute="function" defaultValue="x(4-x)" assignNames="f" />
    <customAttribute componentType="number" attribute="x0" defaultValue="0.5" assignNames="x0" />

    <customAttribute componentType="_componentSize" attribute="width" defaultValue="300px" assignNames="width" />
    <customAttribute componentType="_componentSize" attribute="height" defaultValue="300px" assignNames="height" />
    <customAttribute componentType="number" attribute="xmin" defaultValue="-1" assignNames="xmin" />
    <customAttribute componentType="number" attribute="xmax" defaultValue="5" assignNames="xmax" />
    <customAttribute componentType="number" attribute="ymin" defaultValue="-1" assignNames="ymin" />
    <customAttribute componentType="number" attribute="ymax" defaultValue="5" assignNames="ymax" />
    <customAttribute componentType="boolean" attribute="showNavigation" defaultValue="true" assignNames="showNavigation" />
    <customAttribute componentType="math" attribute="variable" defaultValue="x" assignNames="variable" />
    <customAttribute componentType="number" attribute="attractThreshold" defaultValue="0.1" assignNames="attractThreshold" />
    <customAttribute componentType="number" attribute="answerWeight" defaultValue="1" assignNames="answerWeight" />


    <number name="step">0</number>
    <number name="stepCompleted">0</number>
    <number name="nPoints">0</number>
    <number name="nVlines">0</number>
    <number name="nHlines">0</number>

    <math name="x1" displayDecimals="2">$$f($x0)</math>
    <math name="x2" displayDecimals="2">$$f($x1)</math>
    <boolean name="showX1Result">false</boolean>
    <boolean name="showX2Result">false</boolean>
    <number name="initX">($xmin+$xmax)/2</number>
    <number name="initY">($ymin+$ymax)/2</number>
    <number name="P1StyleNum">1</number>
    <boolean name="P1Placed">$nPoints >= 1 and $P1 = ($x0,0)</boolean>
    <number name="v1StyleNum">1</number>
    <boolean name="v1Placed">$nVlines >= 1 and $pv11.x = $x0</boolean>
    <number name="h1StyleNum">1</number>
    <boolean name="h1Placed">$nHlines >= 1 and $ph11.y = $x1</boolean>
    <number name="P2StyleNum">1</number>
    <boolean name="P2Placed">$nPoints >= 2 and $P2 = (0,$x1)</boolean>
    <number name="P3StyleNum">1</number>
    <boolean name="P3Placed">$nPoints >= 2 and $P3 = ($x1,0)</boolean>
    <number name="v2StyleNum">1</number>
    <boolean name="v2Placed">$nVlines >= 2 and $pv21.x = $x1</boolean>
    <number name="h2StyleNum">1</number>
    <boolean name="h2Placed">$nHlines >= 2 and $ph21.y = $x2</boolean>
    <number name="P4StyleNum">1</number>
    <boolean name="P4Placed">$nPoints >= 4 and $P4 = (0,$x2)</boolean>
    <boolean name="previewShortcut">false</boolean>

    <triggerSet triggerWhen="$P1Placed">
      <updateValue target="stepCompleted" newvalue="1" />
      <updateValue target="P1StyleNum" newvalue="2" />
    </triggerSet>

    <triggerSet triggerWhen="not $P1Placed">
      <updateValue target="stepCompleted" newvalue="0" />
      <updateValue target="P1StyleNum" newvalue="1" />
    </triggerSet>

    <triggerSet triggerWhen="$v1Placed">
      <updateValue target="stepCompleted" newvalue="2" />
      <updateValue target="v1StyleNum" newvalue="2" />
    </triggerSet>
    <triggerSet triggerWhen="not $v1Placed">
      <updateValue target="stepCompleted" newvalue="1" />
      <updateValue target="v1StyleNum" newvalue="1" />
    </triggerSet>

    <updateValue triggerWhen="$h1Placed" target="h1StyleNum" newvalue="2" />
    <updateValue triggerWhen="not $h1Placed" target="h1StyleNum" newvalue="1" />

    <triggerSet triggerWhen="$P2Placed">
      <updateValue target="stepCompleted" newvalue="3" />
      <updateValue target="P2StyleNum" newvalue="2" />
    </triggerSet>
    <triggerSet triggerWhen="not $P2Placed">
      <updateValue target="stepCompleted" newvalue="2" />
      <updateValue target="P2StyleNum" newvalue="1" />
    </triggerSet>

    <triggerSet triggerWhen="$P3Placed">
      <updateValue target="stepCompleted" newvalue="4" />
      <updateValue target="P3StyleNum" newvalue="2" />
    </triggerSet>
    <triggerSet triggerWhen="not $P3Placed">
      <updateValue target="stepCompleted" newvalue="3" />
      <updateValue target="P3StyleNum" newvalue="1" />
    </triggerSet>

    <triggerSet triggerWhen="$v2Placed">
      <updateValue target="stepCompleted" newvalue="5" />
      <updateValue target="v2StyleNum" newvalue="2" />
    </triggerSet>
    <triggerSet triggerWhen="not $v2Placed">
      <updateValue target="stepCompleted" newvalue="4" />
      <updateValue target="v2StyleNum" newvalue="1" />
    </triggerSet>

    <updateValue triggerWhen="$h2Placed" target="h2StyleNum" newvalue="2" />
    <updateValue triggerWhen="not $h2Placed" target="h2StyleNum" newvalue="1" />

    <triggerSet triggerWhen="$P4Placed">
      <updateValue target="P4StyleNum" newvalue="2" />
      <updateValue target="stepCompleted" newvalue="6" />
    </triggerSet>
    <triggerSet triggerWhen="not $P4Placed">
      <updateValue target="P4StyleNum" newvalue="1" />
      <updateValue target="stepCompleted" newvalue="5" />
    </triggerSet>


    <point name="pv11" x="0" y="0">
      <constraints>
        <attractTo threshold="$attractThreshold"><line equation="x=$x0" /></attractTo>
      </constraints>
    </point>
    <point name="pv12" x="0" y="1" >
      <constraints>
        <attractTo threshold="$attractThreshold"><line equation="x=$x0" /></attractTo>
      </constraints>
    </point>

    <point name="ph11" x="0" y="0">
      <constraints>
        <attractTo threshold="$attractThreshold"><line equation="y=$x1" /></attractTo>
      </constraints>
    </point>
    <point name="ph12" x="1" y="0" >
      <constraints>
        <attractTo threshold="$attractThreshold"><line equation="y=$x1" /></attractTo>
      </constraints>
    </point>

    <point name="pv21" x="0" y="0">
      <constraints>
        <attractTo threshold="$attractThreshold"><line equation="x=$x1" /></attractTo>
      </constraints>
    </point>
    <point name="pv22" x="0" y="1" >
      <constraints>
        <attractTo threshold="$attractThreshold"><line equation="x=$x1" /></attractTo>
      </constraints>
    </point>

    <point name="ph21" x="0" y="0">
      <constraints>
        <attractTo threshold="$attractThreshold"><line equation="y=$x2" /></attractTo>
      </constraints>
    </point>
    <point name="ph22" x="1" y="0" >
      <constraints>
        <attractTo threshold="$attractThreshold"><line equation="y=$x2" /></attractTo>
      </constraints>
    </point>

    <copy source="P1" prop="coords" assignNames="P1coords" />
    <copy source="P2" prop="coords" assignNames="P2coords" />
    <copy source="P3" prop="coords" assignNames="P3coords" />
    <copy source="P4" prop="coords" assignNames="P4coords" />
    <copy source="pv11" prop="coords" assignNames="pv11coords" />
    <copy source="pv12" prop="coords" assignNames="pv12coords" />
    <copy source="pv21" prop="coords" assignNames="pv21coords" />
    <copy source="pv22" prop="coords" assignNames="pv22coords" />
    <copy source="ph11" prop="coords" assignNames="ph11coords" />
    <copy source="ph12" prop="coords" assignNames="ph12coords" />
    <copy source="ph21" prop="coords" assignNames="ph21coords" />
    <copy source="ph22" prop="coords" assignNames="ph22coords" />

    <number name="pflash">1</number>
    <boolean name="flashShortcut">false</boolean>
    <animateFromSequence name="animatePflash" animationMode='increase once' animationOn='$flashShortcut' target='pflash' animationInterval='500' from="1" to="5" />

  </setup>

  <sideBySide widths="75% 25%">

  <graph width="$width" height="$height" xmin="$xmin" xmax="$xmax" ymin="$ymin" ymax="$ymax" xlabel="$(variable)_n" ylabel="$(variable)_{n+1}" showNavigation="$showNavigation" identicalAxisScales >

    <curve styleNumber="3" fixed><copy source="f" /></curve>
    <line styleNumber="4" equation="y=x" fixed />
  
    <point name="P1" hide="$nPoints < 1" x="$(initX.value{link='false'})" y="$(initY.value{link='false'})" fixed='$step > 1' styleNumber='$P1StyleNum'>
      <label>($(variable)_0,0)</label>
      <constraints>
        <attractTo threshold="$attractThreshold"><point x="$x0" y="0" ></point></attractTo>
      </constraints>
    </point>

    <line name="v1" through="$pv11 $pv12" hide="$nVlines < 1" fixed="$step > 2" styleNumber="$v1StyleNum" />

    <line name="h1" through="$ph11 $ph12" hide="$nHlines < 1" fixed="$nPoints > 1" styleNumber="$h1StyleNum" />

    <point name="P2" hide="$nPoints < 2" x="$(initX.value{link='false'})" y="$(initY.value{link='false'})" fixed='$step > 3' styleNumber='$P2StyleNum'>
      <label>(0,$(variable)_1)</label>
      <constraints>
        <attractTo threshold="$attractThreshold"><point x="0" y="$x1" ></point></attractTo>
      </constraints>
    </point>

    <point name="P3" hide="$nPoints < 3" x="$(initX.value{link='false'})" y="$(initY.value{link='false'})" fixed='$step > 4' styleNumber='$P3StyleNum'>
      <label>($(variable)_1,0)</label>
      <constraints>
        <attractTo threshold="$attractThreshold"><point x="$x1" y="0" ></point></attractTo>
      </constraints>
    </point>

    <line name="v2" through="$pv21 $pv22" hide="$nVlines < 2" fixed="$step > 5" styleNumber="$v2StyleNum" />

    <line name="h2" through="$ph21 $ph22" hide="$nHlines < 2" fixed="$nPoints > 3" styleNumber="$h2StyleNum" />

    <point name="P4" hide="$nPoints < 4" x="$(initX.value{link='false'})" y="$(initY.value{link='false'})" fixed='$step > 6' styleNumber='$P4StyleNum'>
      <label>(0,$(variable)_2)</label>
      <constraints>
        <attractTo threshold="$attractThreshold"><point x="0" y="$x2" ></point></attractTo>
      </constraints>
    </point>

    <polyline styleNumber="1" vertices="($x0,0) ($x0, $x1) ($x1, $x1) ($x1, $x2)" hide="mod($pflash, 2) = 0 or not $previewShortcut" fixed />

  </graph>

  <subsection>
    <title>Results</title>

    <md>
      <mrow hide="not $P1Placed">
        $(variable)_0 \amp = $(x0{displayDecimals="2"})
      </mrow>
      <mrow hide="not $P2Placed">
        $(variable)_1 \amp = $x1
      </mrow>
      <mrow hide="not $P4Placed">
        $(variable)_2 \amp = $(x2{displayDecimals="2"})
      </mrow>
    </md>

  </subsection>
  </sideBySide>

  <sideBySide>
  <aside boxed collapsible="false">
    <title>Goal</title>

    <conditionalContent>
      <case condition="$step = 0">
        <p>This tutorial will give step-by-step instructions for using the graph of the function <m>f($variable) = <evaluate forceSymbolic function="$f" input="$variable" /></m> to iterate the dynamical system
        <md>
          <mrow>$(variable)_{n+1} \amp = <evaluate forceSymbolic function="$f" input="$(variable)_n" /></mrow>
          <mrow>$(variable)_0 \amp = $x0.</mrow>
        </md>
        </p>
      </case>
      <case condition="$step = 1">
        <p>The first step is to create a point for the initial condition <m>$(variable)_0 = $x0</m>.</p>
      </case>
      <case condition="$step = 2">
          <p>We want to graphically apply the function to the initial condition <m>$(variable)_0 = $x0</m> to determine the value of <m>f($(variable)_0).</m> </p>
          
          <p>For this step, we'll draw a vertical line through the initial condition which will intersect the graph of the function at <m>f($(variable)_0)</m>. </p>
      </case>
      <case condition="$step = 3"> 
          <p>The value of <m>$(variable)_1 = f($(variable)_0)</m> is where the vertical line intersects the graph of the function.  We'll draw a horizontal line at that height and place a point where it hits the <m>y</m>-axis to read the value of <m>$(variable)_1</m> off the <m>y</m>-axis.</p>
      </case>
      <case condition="$step = 4">
        <p>Now that we know that <m>$(variable)_1 = $x1</m>, we can repeat the previous steps to calculate <m>$(variable)_2 = f($(variable)_1)</m>.</p>

        <p>So far, we have the value of <m>$(variable)_1</m> shown by a point on the <m>y</m>-axis.  In this step, we'll translate the value of <m>$(variable)_1</m> into a point on the <m>x</m>-axis.</p>
        
      </case>
      <case condition="$step = 5">
        <p>To estimate the value of <m>$(variable)_2 = f($(variable)_1)</m>, draw a vertical line through the point <m>($x1,0)</m> to see where it intersects the graph of the function.</p>
      </case>
      <case condition="$step=6">
        <p>We need to determine the height of the function where the vertical line through <m>($x1,0)</m> hits the graph of the function.  This height will be the value of <m>$(variable)_2</m>.</p>
        
        <p>We'll draw a horizontal line and a point along the <m>y</m>-axis to determine this height.</p>
      </case>
      <case condition="$step=7">

        <p>The graph is getting a bit busy, so we won't keep going to <m>$(variable)_3</m> or beyond with drawing all these lines.</p>

        <p>Here, you can just get a gimpse of the simpler strategy we'll use to iterate the system more efficiently.</p>

      </case>
    </conditionalContent>

  </aside>
  <aside boxed collapsible="false">
    <title>Instructions</title>

    <conditionalContent maximumNumberToShow="1">
      <case condition="$step = 0">

        <p>Click Next to begin.</p>

      </case>
      <case condition="$step = 1">
        <conditionalContent maximumNumberToShow="1">
          <case condition="$nPoints = 0">
            <p>Click 
              <updateValue name="addPoint1" target="nPoints" newValue="1" >
                <label>add point</label>
              </updateValue>
              to create a point for the initial condition.</p>
          </case>
          <case condition="not $P1Placed">
            <p>Now move the point to the <m>x</m>-axis and the location of the initial condition <m>$(variable)_0=$x0</m>.</p>
          </case>
          <else>
            <p>Great!  We'll use the Results panel to keep track of the values of <m>$(variable)_n</m>.  It now shows that <m>$(variable)_0=$x0</m>.</p>
            
            <p>Click Next to move on to the next step.</p>
          </else>
        </conditionalContent>
      </case>
      <case condition="$step = 2">
        <conditionalContent maximumNumberToShow="1">
          <case condition="$nVlines = 0" >
            <p>Click
            <updateValue name="addVline1" target="nVlines" newValue="1" >
              <label>add vertical line</label>
            </updateValue>
            to create the line.</p>
          </case>
          <case condition="not $v1Placed" >
            <p>Move the line to <m>$variable=$x0</m>. </p>
          </case>
          <else>
            <p>Line is in place.  Click Next to continue.</p>
          </else>
        </conditionalContent>

      </case>
      <case condition="$step = 3">
        <conditionalContent maximumNumberToShow="1">
          <case condition="$nHlines = 0" >
            <p>Click 
              <updateValue name="addHline1" target="nHlines" newValue="1" >
                <label>add horizontal line</label>
              </updateValue>
            to create the line.</p>
          </case>

          <case condition="not $h1Placed">
            <p>Move the line to the height of <m>f($(variable)_0).</m></p>
          </case>

          <case condition="$nPoints < 2">
            <p>The horizontal line is in place. Click
              <updateValue name="addPoint2"  target="nPoints" newValue="2" >
                <label>add point</label>
              </updateValue>
             to create a point.</p>
          </case>

          <case condition="not $P2Placed">
            <p>Move that point to where the horizontal line intersects the <m>y</m>-axis.</p>
          </case>

          <else>
            <p>Good job! The coordinates of that point are <m>(0, $(variable)_1) = (0,$x1)</m>. The value <m>$(variable)_1=$x1</m> now appears in the results.</p>
            
            <p>Click Next to move on to the next step.</p>
          </else>
        </conditionalContent>

      </case>
      <case condition="$step = 4">
        <conditionalContent maximumNumberToShow="1">
          <case condition="$nPoints = 2" >
            <p>Click
              <updateValue name="addPoint3" target="nPoints" newValue="3" >
                <label>add point</label>
              </updateValue>
            to create a point.</p>
          </case>
          <case condition="not $P3Placed">
            <p>Move the point to the location <m>($x1,0)</m>, which is on the <m>x</m>-axis.</p>
          </case>
          <else>
            <p>Way to go!  Now we're set to estimate the value of <m>f($(variable)_1)</m>.  Click Next to continue.</p>
          </else>
        </conditionalContent>
        
      </case>

      <case condition="$step=5">
        <conditionalContent maximumNumberToShow="1">
          <case condition="$nVlines = 1" >
            <p>Click
              <updateValue name="addVline2" target="nVlines" newValue="2" >
                <label>add vertical line</label>
              </updateValue>
            to create a vertical line.</p>
          </case>
          <case condition="not $v2Placed">
            <p>Move the line so it goes through the point <m>($x1,0)</m>.</p>
          </case>
          <else>
            <p>Making progress! Click Next to move on to the next step.</p>
          </else>
        </conditionalContent>
      </case>

      <case condition="$step=6">
        <conditionalContent maximumNumberToShow="1">
          <case condition="$nHlines = 1" >
            <p>Click 
              <updateValue name="addHline2" target="nHlines" newValue="2" >
                <label>add horizontal line</label>
              </updateValue>
              to create a horizontal line.</p>
          </case>
          <case condition="not $h2Placed">
            <p>Move the line to the point where the vertical line through <m>($x1,0)</m> intersects the function.</p>
          </case>
          <case condition="$nPoints = 3">
            <p>The line is where we want it.  Now, create a point by clicking
              <updateValue name="addPoint4" target="nPoints" newValue="4" >
                <label>add point</label>
              </updateValue>.</p>
          </case>
          <case condition="not $P4Placed">
            <p>Move the point to where that horizontal line crosses the <m>y</m>-axis.</p>
          </case>
          <else>
            <p>Awesome! The coordinates of that point are <m>(0, $(variable)_2) = (0,$x2)</m>. We added <m>$(variable)_2=$x2</m> to the results.</p>
            <p>Click Next to continue.</p>
          </else>
        </conditionalContent>
      </case>

      <case condition="$step=7">
        <conditionalContent maximumNumberToShow="1">
          <case condition="not $previewShortcut" >
            <p>Click this 
              <triggerSet name="shortcutButton">
                <label>preview shortcut</label>
                <updateValue target="flashShortcut" newValue="true" type="boolean" />
                <updateValue target="previewShortcut" newValue="true" type="boolean" /> 
              </triggerSet>
              button to reveal the shortcut on the graph.</p>
          </case>
          <else>
            <p>Congratulations, you've finished this introductory tutorial on cobwebbing!</p>
          </else>
        </conditionalContent>

      </case>

    </conditionalContent>

    <triggerSet name="resetTutorial" disabled="$step = 0">
      <label>Reset tutorial</label>

      <updateValue target="step" newValue="0" />
      <updateValue target="nPoints" newValue="0" />
      <updateValue target="nHlines" newValue="0" />
      <updateValue target="nVlines" newValue="0" />
      <updateValue target="P1coords" newValue="($initX, $initY)" />
      <updateValue target="P2coords" newValue="($initX, $initY)" />
      <updateValue target="P3coords" newValue="($initX, $initY)" />
      <updateValue target="P4coords" newValue="($initX, $initY)" />
      <updateValue target="pv11coords" newValue="(0,0)" />
      <updateValue target="pv12coords" newValue="(0,1)" />
      <updateValue target="pv21coords" newValue="(0,0)" />
      <updateValue target="pv22coords" newValue="(0,1)" />
      <updateValue target="ph11coords" newValue="(0,0)" />
      <updateValue target="ph12coords" newValue="(1,0)" />
      <updateValue target="ph21coords" newValue="(0,0)" />
      <updateValue target="ph22coords" newValue="(1,0)" />
      <updateValue target="P1StyleNum" newValue="1" />
      <updateValue target="P2StyleNum" newValue="1" />
      <updateValue target="P3StyleNum" newValue="1" />
      <updateValue target="P4StyleNum" newValue="1" />
      <updateValue target="v1StyleNum" newValue="1" />
      <updateValue target="v2StyleNum" newValue="1" />
      <updateValue target="h1StyleNum" newValue="1" />
      <updateValue target="h2StyleNum" newValue="1" />
      <updateValue target="previewShortcut" newValue="false" type="boolean" />
      <updateValue target="stepCompleted" newValue="0" />
    </triggerSet>
    <callAction triggerWith="resetTutorial" target="ans" actionName="submitAnswer" />
    
    <updateValue name="next" disabled="$stepCompleted < $step" target="step" newValue="$step+1">
      <label>Next</label>
    </updateValue>
    <callAction triggerWith="next" target="ans" actionName="submitAnswer" />

    <answer name="ans" hide weight="$answerWeight">
      <award credit="$stepCompleted/6"><when>true</when></award>
    </answer>


  </aside>

  </sideBySide>

</module>
