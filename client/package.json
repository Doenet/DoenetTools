{
  "name": "doenet_tools",
  "version": "1.0.1",
  "type": "module",
  "scripts": {
    "dev": "vite",
    "preview": "view preview",
    "build": "vite build",
    "dc": "docker compose -f ./docker-compose.yml -f ./.devcontainer/docker-compose.extend.yml",
    "artifactory:build": "docker buildx build --platform linux/arm64,linux/amd64 -t cse-docker-doenet.artifactory.umn.edu/doenet_$npm_config_service:$npm_package_version -f docker/$npm_config_service/Dockerfile -t cse-docker-doenet.artifactory.umn.edu/doenet_$npm_config_service --provenance=false .",
    "artifactory:push": "npm run artifactory:build -- --push",
    "deploy:local": "npm run dc up -- -d --no-deps --build apache",
    "deploy:development": "npm run build -- --mode development --outDir dist --minify false",
    "deploy:production": "npm run build -- --mode production --outDir dist",
    "deploy:prod": "npm run deploy:production",
    "deploy:dev": "npm run deploy:development",
    "start:ci": "docker compose up -d",
    "start:db": "docker compose exec mysql mysql -u root -phelloworld -e 'CREATE DATABASE IF NOT EXISTS doenet_local CHARACTER SET=utf8 COLLATE=utf8_unicode_ci;'",
    "test": "cypress open",
    "test:all": "cypress run -b 'chrome' --config video=false --headless",
    "test:app": "cypress run -b 'electron' --config video=false,excludeSpecPattern=cypress/e2e/DoenetML/** --headless",
    "test:parallel": "cypress-parallel -s test:all -t 4 -d cypress/e2e/DoenetML",
    "publish:db": "docker compose exec -T -w /var/lib/mysql mysql mysqldump -u root -phelloworld --databases --add-drop-database --add-drop-table doenet_local > ./docker/volumes/db_init/db_template.sql",
    "reset:db": "docker compose exec -T mysql mysql -u root -phelloworld doenet_local < ./docker/mysql/db_template.sql",
    "reset:volumes": "docker volume rm doenet_node_modules doenet_vendor",
    "format": "prettier --write \"src/**/*.{js,jsx,json,css}\" \"cypress/**/*.{js,jsx,json,css}\"",
    "lint": "eslint \"src/**/*.{js,jsx}\"",
    "realtime": "node realtime/realtime.js",
    "compile_grammar": "npx lezer-generator --output src/Parser/doenet.js src/Parser/doenet.grammar"
  },
  "dependencies": {
    "@chakra-ui/icons": "^2.2.4",
    "@chakra-ui/react": "^2.10.4",
    "@doenet/doenetml-iframe": "^0.7.0-alpha20",
    "@fontsource/jost": "^5.1.1",
    "@fortawesome/free-solid-svg-icons": "^6.7.1",
    "@fortawesome/react-fontawesome": "^0.2.2",
    "axios": "^1.7.9",
    "better-react-mathjax": "^2.0.3",
    "browser-image-resizer": "^2.4.1",
    "copy-to-clipboard": "^3.3.3",
    "cssesc": "^3.0.0",
    "hi-base32": "^0.5.1",
    "js-cookie": "^3.0.5",
    "luxon": "^3.5.0",
    "math-expressions": "^2.0.0-alpha73",
    "nanoid": "^5.0.9",
    "papaparse": "^5.4.1",
    "react": "^18.3.1",
    "react-copy-to-clipboard": "^5.1.0",
    "react-dom": "^18.3.1",
    "react-dropzone": "^14.2.3",
    "react-icons": "4.8.0",
    "react-qrcode-logo": "^3.0.0",
    "react-router": "^7.1.0",
    "react-select": "^5.8.0",
    "recharts": "^2.12.7",
    "styled-components": "5.3.11",
    "swiper": "^9.4.1"
  },
  "devDependencies": {
    "@babel/eslint-parser": "^7.15.7",
    "@babel/plugin-syntax-class-properties": "^7.12.13",
    "@esbuild-plugins/node-globals-polyfill": "^0.2.3",
    "@esbuild-plugins/node-modules-polyfill": "^0.2.2",
    "@rollup/plugin-alias": "^3.1.9",
    "@rollup/plugin-commonjs": "^22.0.2",
    "@rollup/plugin-node-resolve": "^13.3.0",
    "@testing-library/react": "^11.2.7",
    "@types/luxon": "^3.4.2",
    "@types/react": "^18.3.16",
    "@types/react-dom": "^18.3.5",
    "@vitejs/plugin-react": "^4.3.4",
    "@web/test-runner": "^0.18.3",
    "chai": "^5.1.2",
    "esbuild": "^0.14.54",
    "eslint": "^8.57.1",
    "eslint-config-prettier": "^8.10.0",
    "eslint-plugin-import": "^2.24.2",
    "eslint-plugin-jsx-a11y": "^6.4.1",
    "eslint-plugin-react": "^7.26.1",
    "eslint-plugin-react-hooks": "^4.6.2",
    "http-proxy": "^1.18.1",
    "mysql2": "^3.11.5",
    "prettier": "^3.4.2",
    "rollup": "^2.79.2",
    "rollup-plugin-polyfill-node": "^0.13.0",
    "rollup-plugin-terser": "^7.0.2",
    "typescript": "^5.7.2",
    "vite": "^5.4.11",
    "vite-plugin-mpa": "^1.2.0",
    "vite-plugin-static-copy": "^1.0.6"
  },
  "optionalDependencies": {
    "@esbuild/linux-arm64": "^0.17.19",
    "cypress": "^13.16.1",
    "cypress-file-upload": "^5.0.8",
    "cypress-iframe": "^1.0.1",
    "cypress-parallel": "^0.14.0",
    "cypress-plugin-tab": "^1.0.5",
    "cypress-wait-until": "^3.0.2",
    "eslint-plugin-cypress": "^3.6.0"
  },
  "eslintConfig": {
    "extends": [
      "eslint:recommended",
      "plugin:import/errors",
      "plugin:react/recommended",
      "plugin:jsx-a11y/recommended",
      "plugin:cypress/recommended",
      "prettier"
    ],
    "rules": {
      "linebreak-style": [
        "error",
        "unix"
      ],
      "react/prop-types": "off",
      "no-console": "warn",
      "react-hooks/rules-of-hooks": "error",
      "react-hooks/exhaustive-deps": [
        "warn"
      ]
    },
    "plugins": [
      "react",
      "import",
      "jsx-a11y",
      "react-hooks",
      "cypress"
    ],
    "overrides": [
      {
        "files": [
          "./src/Core/**/*.js",
          "./src/Viewer/**/*.{jsx,js}"
        ],
        "parser": "@babel/eslint-parser",
        "parserOptions": {
          "sourceType": "module",
          "requireConfigFile": false,
          "babelOptions": {
            "plugins": [
              "@babel/plugin-syntax-class-properties"
            ]
          }
        }
      }
    ],
    "parserOptions": {
      "ecmaVersion": 11,
      "sourceType": "module",
      "ecmaFeatures": {
        "jsx": true
      }
    },
    "env": {
      "browser": true,
      "es2020": true,
      "node": true
    },
    "settings": {
      "import/core-modules": [
        "@ToolRoot",
        "@Tool",
        "solid-svg",
        "react-spring"
      ],
      "import/resolver": {
        "node": {
          "paths": [
            "src"
          ],
          "extensions": [
            ".js",
            ".jsx",
            ".ts",
            ".tsx"
          ]
        }
      },
      "react": {
        "version": "detect"
      }
    }
  }
}
